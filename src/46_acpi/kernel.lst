     1                                  %define USE_SYSTEM_CALL
     2                                  %define USE_TEST_AND_SET
     3                                  
     4                                  %include    "../include/define.s"
     1                              <1>         BOOT_LOAD           equ     0x7C00
     2                              <1> 
     3                              <1>         BOOT_SIZE           equ     (1024 * 8)
     4                              <1>         SECT_SIZE           equ     (512)
     5                              <1>         BOOT_SECT           equ     (BOOT_SIZE / SECT_SIZE)
     6                              <1>         BOOT_END            equ     (BOOT_LOAD + BOOT_SIZE)
     7                              <1> 
     8                              <1>         E820_RECORD_SIZE    equ     20
     9                              <1> 
    10                              <1>         KERNEL_LOAD         equ     0x0010_1000
    11                              <1> 
    12                              <1>         KERNEL_SIZE         equ     (1024 * 8)
    13                              <1>         KERNEL_SECT         equ     (KERNEL_SIZE / SECT_SIZE)
    14                              <1> 
    15                              <1>         VECT_BASE           equ     0x0010_0000
    16                              <1> 
    17                              <1> 
    18                              <1>         STACK_BASE          equ     0x0010_3000
    19                              <1>         STACK_SIZE          equ     1024
    20                              <1> 
    21                              <1>         SP_TASK_0           equ     STACK_BASE + (STACK_SIZE * 1)
    22                              <1>         SP_TASK_1           equ     STACK_BASE + (STACK_SIZE * 2)
    23                              <1>         SP_TASK_2           equ     STACK_BASE + (STACK_SIZE * 3)
    24                              <1>         SP_TASK_3           equ     STACK_BASE + (STACK_SIZE * 4)
    25                              <1>         SP_TASK_4           equ     STACK_BASE + (STACK_SIZE * 5)
    26                              <1>         SP_TASK_5           equ     STACK_BASE + (STACK_SIZE * 6)
    27                              <1>         SP_TASK_6           equ     STACK_BASE + (STACK_SIZE * 7)
    28                              <1> 
    29                              <1>         CR3_BASE            equ     0x0010_5000
    30                              <1> 
    31                              <1>         PARAM_TASK_4        equ     0x0010_8000
    32                              <1>         PARAM_TASK_5        equ     0x0010_9000
    33                              <1>         PARAM_TASK_6        equ     0x0010_A000
    34                              <1> 
    35                              <1>         CR3_TASK_4          equ     0x0020_0000
    36                              <1>         CR3_TASK_5          equ     0x0020_2000
    37                              <1>         CR3_TASK_6          equ     0x0020_4000
    38                              <1> 
    39                              <1>         FAT_SIZE            equ     (1024 * 128)
    40                              <1>         ROOT_SIZE           equ     (1024 * 16)
    41                              <1> 
    42                              <1>         ENTRY_SIZE          equ     32
    43                              <1> 
    44                              <1>         FAT_OFFSET          equ     (BOOT_SIZE + KERNEL_SIZE)
    45                              <1>         FAT1_START          equ     (KERNEL_SIZE)
    46                              <1>         FAT2_START          equ     (FAT1_START + FAT_SIZE)
    47                              <1>         ROOT_START          equ     (FAT2_START + FAT_SIZE)
    48                              <1>         FILE_START          equ     (ROOT_START + ROOT_SIZE)
    49                              <1> 
    50                              <1>         ATTR_READ_ONLY      equ     0x01
    51                              <1>         ATTR_HIDDEN         equ     0x02
    52                              <1>         ATTR_SYSTEM         equ     0x04
    53                              <1>         ATTR_VOLUME_ID      equ     0x08
    54                              <1>         ATTR_DIRECTORY      equ     0x10
    55                              <1>         ATTR_ARCHIVE        equ     0x20
     5                                  %include    "../include/macro.s"
     1                              <1> %macro  cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep  %0 -1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate -1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if  1 < %0
    12                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> %macro  set_vect 1-*.nolist
    18                              <1> 		push	eax
    19                              <1> 		push	edi
    20                              <1> 
    21                              <1> 		mov		edi, VECT_BASE + (%1 * 8)
    22                              <1> 		mov		eax, %2
    23                              <1> 
    24                              <1> 	%if 3 == %0
    25                              <1> 		mov		[edi + 4], %3
    26                              <1> 	%endif
    27                              <1> 
    28                              <1>         mov		[edi + 0], ax
    29                              <1> 		shr		eax, 16 
    30                              <1> 		mov		[edi + 6], ax
    31                              <1> 
    32                              <1> 		pop		edi
    33                              <1> 		pop		eax
    34                              <1> %endmacro
    35                              <1> 
    36                              <1> %macro  outp 2
    37                              <1>         mov     al, %2
    38                              <1>         out     %1, al
    39                              <1> %endmacro
    40                              <1> 
    41                              <1> %macro  set_desc 2-*
    42                              <1>         push    eax
    43                              <1>         push    edi
    44                              <1> 
    45                              <1>         mov     edi, %1
    46                              <1>         mov     eax, %2
    47                              <1> 
    48                              <1>     %if 3 == %0
    49                              <1>         mov     [edi + 0], %3
    50                              <1>     %endif
    51                              <1> 
    52                              <1>         mov     [edi + 2], ax
    53                              <1>         shr     eax, 16
    54                              <1>         mov     [edi + 4], al
    55                              <1>         mov     [edi + 7], ah
    56                              <1> 
    57                              <1>         pop     edi
    58                              <1>         pop     eax
    59                              <1> %endmacro
    60                              <1> 
    61                              <1> %macro  set_gate 2-*
    62                              <1>         push    eax
    63                              <1>         push    edi
    64                              <1> 
    65                              <1>         mov     edi, %1
    66                              <1>         mov     eax, %2
    67                              <1> 
    68                              <1>         mov     [edi + 0], ax
    69                              <1>         shr     eax, 16
    70                              <1>         mov     [edi + 6], ax
    71                              <1> 
    72                              <1>         pop     edi
    73                              <1>         pop     eax
    74                              <1> %endmacro
    75                              <1> 
    76                              <1> struc drive
    77 00000000 <res 00000002>      <1>         .no         resw    1
    78 00000002 <res 00000002>      <1>         .cyln       resw    1
    79 00000004 <res 00000002>      <1>         .head       resw    1
    80 00000006 <res 00000002>      <1>         .sect       resw    1
    81                              <1> endstruc
    82                              <1> 
    83                              <1> %define		RING_ITEM_SIZE		(1 << 4)
    84                              <1> %define		RING_INDEX_MASK		(RING_ITEM_SIZE - 1)
    85                              <1> 
    86                              <1> struc ring_buff
    87 00000000 <res 00000004>      <1>         .rp         resd    1
    88 00000004 <res 00000004>      <1>         .wp         resd    1
    89 00000008 <res 00000010>      <1>         .item       resb    RING_ITEM_SIZE
    90                              <1> endstruc
    91                              <1> 
    92                              <1> struc rose
    93 00000000 <res 00000004>      <1>         .x0         resd    1
    94 00000004 <res 00000004>      <1>         .y0         resd    1
    95 00000008 <res 00000004>      <1>         .x1         resd    1
    96 0000000C <res 00000004>      <1>         .y1         resd    1
    97                              <1> 
    98 00000010 <res 00000004>      <1>         .n          resd    1
    99 00000014 <res 00000004>      <1>         .d          resd    1
   100                              <1> 
   101 00000018 <res 00000004>      <1>         .color_x    resd    1
   102 0000001C <res 00000004>      <1>         .color_y    resd    1
   103 00000020 <res 00000004>      <1>         .color_z    resd    1
   104 00000024 <res 00000004>      <1>         .color_s    resd    1
   105 00000028 <res 00000004>      <1>         .color_f    resd    1
   106 0000002C <res 00000004>      <1>         .color_b    resd    1
   107                              <1> 
   108 00000030 <res 00000010>      <1>         .title      resb    16
   109                              <1> endstruc
     6                                  
     7                                          ORG     KERNEL_LOAD
     8                                  
     9                                  [BITS 32]
    10                                  
    11                                  kernel:
    12                                  
    13 00000000 BE007E0000                      mov     esi, BOOT_LOAD + SECT_SIZE
    14 00000005 0FB706                          movzx   eax, word [esi + 0]
    15 00000008 0FB75E02                        movzx   ebx, word [esi + 2]
    16 0000000C C1E004                          shl     eax, 4
    17 0000000F 01D8                            add     eax, ebx
    18 00000011 A3[F8020000]                    mov     [FONT_ADR], eax
    19                                  
    20                                          set_desc    GDT.tss_0, TSS_0
    20 00000016 50                  <1>  push eax
    20 00000017 57                  <1>  push edi
    20                              <1> 
    20 00000018 BF[18090000]        <1>  mov edi, %1
    20 0000001D B8[00030000]        <1>  mov eax, %2
    20                              <1> 
    20                              <1>  %if 3 == %0
    20                              <1>  mov [edi + 0], %3
    20                              <1>  %endif
    20                              <1> 
    20 00000022 66894702            <1>  mov [edi + 2], ax
    20 00000026 C1E810              <1>  shr eax, 16
    20 00000029 884704              <1>  mov [edi + 4], al
    20 0000002C 886707              <1>  mov [edi + 7], ah
    20                              <1> 
    20 0000002F 5F                  <1>  pop edi
    20 00000030 58                  <1>  pop eax
    21                                          set_desc    GDT.tss_1, TSS_1
    21 00000031 50                  <1>  push eax
    21 00000032 57                  <1>  push edi
    21                              <1> 
    21 00000033 BF[20090000]        <1>  mov edi, %1
    21 00000038 B8[D8030000]        <1>  mov eax, %2
    21                              <1> 
    21                              <1>  %if 3 == %0
    21                              <1>  mov [edi + 0], %3
    21                              <1>  %endif
    21                              <1> 
    21 0000003D 66894702            <1>  mov [edi + 2], ax
    21 00000041 C1E810              <1>  shr eax, 16
    21 00000044 884704              <1>  mov [edi + 4], al
    21 00000047 886707              <1>  mov [edi + 7], ah
    21                              <1> 
    21 0000004A 5F                  <1>  pop edi
    21 0000004B 58                  <1>  pop eax
    22                                          set_desc    GDT.tss_2, TSS_2
    22 0000004C 50                  <1>  push eax
    22 0000004D 57                  <1>  push edi
    22                              <1> 
    22 0000004E BF[28090000]        <1>  mov edi, %1
    22 00000053 B8[B0040000]        <1>  mov eax, %2
    22                              <1> 
    22                              <1>  %if 3 == %0
    22                              <1>  mov [edi + 0], %3
    22                              <1>  %endif
    22                              <1> 
    22 00000058 66894702            <1>  mov [edi + 2], ax
    22 0000005C C1E810              <1>  shr eax, 16
    22 0000005F 884704              <1>  mov [edi + 4], al
    22 00000062 886707              <1>  mov [edi + 7], ah
    22                              <1> 
    22 00000065 5F                  <1>  pop edi
    22 00000066 58                  <1>  pop eax
    23                                          set_desc    GDT.tss_3, TSS_3
    23 00000067 50                  <1>  push eax
    23 00000068 57                  <1>  push edi
    23                              <1> 
    23 00000069 BF[30090000]        <1>  mov edi, %1
    23 0000006E B8[88050000]        <1>  mov eax, %2
    23                              <1> 
    23                              <1>  %if 3 == %0
    23                              <1>  mov [edi + 0], %3
    23                              <1>  %endif
    23                              <1> 
    23 00000073 66894702            <1>  mov [edi + 2], ax
    23 00000077 C1E810              <1>  shr eax, 16
    23 0000007A 884704              <1>  mov [edi + 4], al
    23 0000007D 886707              <1>  mov [edi + 7], ah
    23                              <1> 
    23 00000080 5F                  <1>  pop edi
    23 00000081 58                  <1>  pop eax
    24                                          set_desc    GDT.tss_4, TSS_4
    24 00000082 50                  <1>  push eax
    24 00000083 57                  <1>  push edi
    24                              <1> 
    24 00000084 BF[38090000]        <1>  mov edi, %1
    24 00000089 B8[60060000]        <1>  mov eax, %2
    24                              <1> 
    24                              <1>  %if 3 == %0
    24                              <1>  mov [edi + 0], %3
    24                              <1>  %endif
    24                              <1> 
    24 0000008E 66894702            <1>  mov [edi + 2], ax
    24 00000092 C1E810              <1>  shr eax, 16
    24 00000095 884704              <1>  mov [edi + 4], al
    24 00000098 886707              <1>  mov [edi + 7], ah
    24                              <1> 
    24 0000009B 5F                  <1>  pop edi
    24 0000009C 58                  <1>  pop eax
    25                                          set_desc    GDT.tss_5, TSS_5
    25 0000009D 50                  <1>  push eax
    25 0000009E 57                  <1>  push edi
    25                              <1> 
    25 0000009F BF[40090000]        <1>  mov edi, %1
    25 000000A4 B8[38070000]        <1>  mov eax, %2
    25                              <1> 
    25                              <1>  %if 3 == %0
    25                              <1>  mov [edi + 0], %3
    25                              <1>  %endif
    25                              <1> 
    25 000000A9 66894702            <1>  mov [edi + 2], ax
    25 000000AD C1E810              <1>  shr eax, 16
    25 000000B0 884704              <1>  mov [edi + 4], al
    25 000000B3 886707              <1>  mov [edi + 7], ah
    25                              <1> 
    25 000000B6 5F                  <1>  pop edi
    25 000000B7 58                  <1>  pop eax
    26                                          set_desc    GDT.tss_6, TSS_6
    26 000000B8 50                  <1>  push eax
    26 000000B9 57                  <1>  push edi
    26                              <1> 
    26 000000BA BF[48090000]        <1>  mov edi, %1
    26 000000BF B8[10080000]        <1>  mov eax, %2
    26                              <1> 
    26                              <1>  %if 3 == %0
    26                              <1>  mov [edi + 0], %3
    26                              <1>  %endif
    26                              <1> 
    26 000000C4 66894702            <1>  mov [edi + 2], ax
    26 000000C8 C1E810              <1>  shr eax, 16
    26 000000CB 884704              <1>  mov [edi + 4], al
    26 000000CE 886707              <1>  mov [edi + 7], ah
    26                              <1> 
    26 000000D1 5F                  <1>  pop edi
    26 000000D2 58                  <1>  pop eax
    27                                  
    28                                          set_gate    GDT.call_gate, call_gate
    28 000000D3 50                  <1>  push eax
    28 000000D4 57                  <1>  push edi
    28                              <1> 
    28 000000D5 BF[50090000]        <1>  mov edi, %1
    28 000000DA B8[E4170000]        <1>  mov eax, %2
    28                              <1> 
    28 000000DF 668907              <1>  mov [edi + 0], ax
    28 000000E2 C1E810              <1>  shr eax, 16
    28 000000E5 66894706            <1>  mov [edi + 6], ax
    28                              <1> 
    28 000000E9 5F                  <1>  pop edi
    28 000000EA 58                  <1>  pop eax
    29                                  
    30                                          set_desc    GDT.ldt, LDT, word LDT_LIMIT
    30 000000EB 50                  <1>  push eax
    30 000000EC 57                  <1>  push edi
    30                              <1> 
    30 000000ED BF[10090000]        <1>  mov edi, %1
    30 000000F2 B8[5E090000]        <1>  mov eax, %2
    30                              <1> 
    30                              <1>  %if 3 == %0
    30 000000F7 66C7075F00          <1>  mov [edi + 0], %3
    30                              <1>  %endif
    30                              <1> 
    30 000000FC 66894702            <1>  mov [edi + 2], ax
    30 00000100 C1E810              <1>  shr eax, 16
    30 00000103 884704              <1>  mov [edi + 4], al
    30 00000106 886707              <1>  mov [edi + 7], ah
    30                              <1> 
    30 00000109 5F                  <1>  pop edi
    30 0000010A 58                  <1>  pop eax
    31                                  
    32 0000010B 0F0115[58090000]                lgdt    [GDTR]
    33                                  
    34 00000112 BC00341000                      mov     esp, SP_TASK_0
    35                                  
    36 00000117 66B83000                        mov     ax, SS_TASK_0
    37 0000011B 0F00D8                          ltr     ax
    38                                  
    39 0000011E E897130000                      cdecl   init_int
    40 00000123 E818150000                      cdecl   init_pic
    41 00000128 E883090000                      cdecl   init_page
    42                                  
    43 0000012D 5057BF00001000B8-               set_vect    0x00, int_zero_div
    43 00000135 [22160000]668907C1-
    43 0000013D E810668947065F58   
    44 00000145 5057BF38001000B8-               set_vect    0x07, int_nm
    44 0000014D [4F180000]668907C1-
    44 00000155 E810668947065F58   
    45 0000015D 5057BF70001000B8-               set_vect    0x0E, int_pf
    45 00000165 [BE090000]668907C1-
    45 0000016D E810668947065F58   
    46 00000175 5057BF00011000B8-               set_vect    0x20, int_timer
    46 0000017D [2C0A0000]668907C1-
    46 00000185 E810668947065F58   
    47 0000018D 5057BF08011000B8-               set_vect    0x21, int_keyboard
    47 00000195 [AA160000]668907C1-
    47 0000019D E810668947065F58   
    48 000001A5 5057BF40011000B8-               set_vect    0x28, int_rtc
    48 000001AD [7F160000]668907C1-
    48 000001B5 E810668947065F58   
    49 000001BD 5057BF08041000B8-               set_vect    0x81, trap_gate_81, word 0xEF00
    49 000001C5 [14180000]66C74704-
    49 000001CD 00EF668907C1E81066-
    49 000001D6 8947065F58         
    50 000001DB 5057BF10041000B8-               set_vect    0x82, trap_gate_82, word 0xEF00
    50 000001E3 [22180000]66C74704-
    50 000001EB 00EF668907C1E81066-
    50 000001F4 8947065F58         
    51                                  
    52 000001F9 6A10E86B1400006683-             cdecl   rtc_int_en, 0x10
    52 00000202 C404               
    53 00000204 E893150000                      cdecl   int_en_timer0
    54                                  
    55                                          outp    0x21, 0b1111_1000
    55 00000209 B0F8                <1>  mov al, %2
    55 0000020B E621                <1>  out %1, al
    56                                          outp    0xA1, 0b1111_1110
    56 0000020D B0FE                <1>  mov al, %2
    56 0000020F E6A1                <1>  out %1, al
    57                                  
    58 00000211 B800501000                      mov     eax, CR3_BASE
    59 00000216 0F22D8                          mov     cr3, eax
    60                                  
    61 00000219 0F20C0                          mov     eax, cr0
    62 0000021C 0D00000080                      or      eax, (1 << 31)
    63 00000221 0F22C0                          mov     cr0, eax
    64 00000224 EB00                            jmp     $ + 2
    65                                  
    66 00000226 FB                              sti
    67                                  
    68 00000227 6A0D6A3FE8480E0000-             cdecl   draw_font, 63, 13
    68 00000230 6683C408           
    69 00000234 6A046A3FE8BE0E0000-             cdecl   draw_color_bar, 63, 4
    69 0000023D 6683C408           
    70 00000241 68[DE020000]680F01-             cdecl   draw_str, 25, 14, 0x010F, .s0
    70 00000249 00006A0E6A19E8690E-
    70 00000252 00006683C410       
    71                                  
    72                                  .10L:
    73                                  
    74 00000258 E84E150000                      cdecl   draw_rotation_bar
    75                                  
    76 0000025D 68[F0020000]68-                 cdecl   ring_rd, _KEY_BUFF, .int_key
    76 00000263 [D0160000]E87C1400-
    76 0000026B 006683C408         
    77 00000270 83F800                          cmp     eax, 0
    78 00000273 7464                            je      .10E
    79                                  
    80 00000275 68[D0160000]6A1D6A-             cdecl   draw_key, 2, 29, _KEY_BUFF
    80 0000027D 02E8C61400006683C4-
    80 00000286 0C                 
    81                                  
    82 00000287 A0[F0020000]                    mov     al, [.int_key]
    83 0000028C 3C02                            cmp     al, 0x02
    84 0000028E 7522                            jne     .12E
    85                                  
    86 00000290 FF15F09B0000                    call    [BOOT_LOAD + BOOT_SIZE - 16]
    87                                  
    88 00000296 BE00780000                      mov     esi, 0x7800
    89 0000029B C6462000                        mov     [esi + 32], byte 0
    90 0000029F 5668040F00006A006A-             cdecl   draw_str, 0, 0, 0x0F04, esi
    90 000002A8 00E80F0E00006683C4-
    90 000002B1 10                 
    91                                  .12E:
    92 000002B2 A0[F0020000]                    mov     al, [.int_key]
    93 000002B7 50E8581600006683C4-             cdecl   ctrl_alt_end, eax
    93 000002C0 04                 
    94 000002C1 83F800                          cmp     eax, 0
    95 000002C4 7413                            je      .14E
    96                                  
    97 000002C6 B800000000                      mov     eax, 0
    98 000002CB 0FAB05[F4020000]                bts     [.once], eax
    99 000002D2 7205                            jc      .14E
   100 000002D4 E8AE160000                      cdecl   power_off
   101                                  
   102                                  .14E:
   103                                  .10E:
   104                                  
   105 000002D9 E97AFFFFFF                      jmp     .10L
   106                                  
   107 000002DE 2048656C6C6F2C206B-     .s0 	db	" Hello, kernel! ", 0
   107 000002E7 65726E656C212000   
   108                                  
   109 000002EF 00                      ALIGN 4, db 0
   110 000002F0 00000000                .int_key    dd  0
   111 000002F4 00000000                .once       dd  0
   112                                  
   113                                  ALIGN 4, db 0
   114 000002F8 00000000                FONT_ADR:   dd 0
   115 000002FC 00000000                RTC_TIME:   dd 0
   116                                  
   117                                  %include    "descriptor.s"
     1                              <1> TSS_0:
     2 00000300 00000000            <1> .link:          dd  0
     3 00000304 00321000            <1> .esp0:          dd  SP_TASK_0 - 512
     4 00000308 10000000            <1> .ss0:           dd  DS_KERNEL
     5 0000030C 00000000            <1> .esp1:          dd  0
     6 00000310 00000000            <1> .ss1:           dd  0
     7 00000314 00000000            <1> .esp2:          dd  0
     8 00000318 00000000            <1> .ss2:           dd  0
     9 0000031C 00501000            <1> .cr3:           dd  CR3_BASE
    10 00000320 00000000            <1> .eip:           dd  0
    11 00000324 00000000            <1> .eflags:        dd  0
    12 00000328 00000000            <1> .eax:           dd  0
    13 0000032C 00000000            <1> .ecx:           dd  0
    14 00000330 00000000            <1> .edx:           dd  0
    15 00000334 00000000            <1> .ebx:           dd  0
    16 00000338 00000000            <1> .esp:           dd  0
    17 0000033C 00000000            <1> .ebp:           dd  0
    18 00000340 00000000            <1> .esi:           dd  0
    19 00000344 00000000            <1> .edi:           dd  0
    20 00000348 00000000            <1> .es:            dd  0
    21 0000034C 00000000            <1> .cs:            dd  0
    22 00000350 00000000            <1> .ss:            dd  0
    23 00000354 00000000            <1> .ds:            dd  0
    24 00000358 00000000            <1> .fs:            dd  0
    25 0000035C 00000000            <1> .gs:            dd  0
    26 00000360 00000000            <1> .ldt:           dd  0
    27 00000364 00000000            <1> .io:            dd  0
    28 00000368 00<rept>            <1> .fp_sava:   times 108 + 4 db 0
    29                              <1> 
    30                              <1> TSS_1:
    31 000003D8 00000000            <1> .link:          dd  0
    32 000003DC 00361000            <1> .esp0:          dd  SP_TASK_1 - 512
    33 000003E0 10000000            <1> .ss0:           dd  DS_KERNEL
    34 000003E4 00000000            <1> .esp1:          dd  0
    35 000003E8 00000000            <1> .ss1:           dd  0
    36 000003EC 00000000            <1> .esp2:          dd  0
    37 000003F0 00000000            <1> .ss2:           dd  0
    38 000003F4 00501000            <1> .cr3:           dd  CR3_BASE
    39 000003F8 [8D0B0000]          <1> .eip:           dd  task_1
    40 000003FC 02020000            <1> .eflags:        dd  0x0202
    41 00000400 00000000            <1> .eax:           dd  0
    42 00000404 00000000            <1> .ecx:           dd  0
    43 00000408 00000000            <1> .edx:           dd  0
    44 0000040C 00000000            <1> .ebx:           dd  0
    45 00000410 00381000            <1> .esp:           dd  SP_TASK_1
    46 00000414 00000000            <1> .ebp:           dd  0
    47 00000418 00000000            <1> .esi:           dd  0
    48 0000041C 00000000            <1> .edi:           dd  0
    49 00000420 27000000            <1> .es:            dd  DS_TASK_1
    50 00000424 1F000000            <1> .cs:            dd  CS_TASK_1
    51 00000428 27000000            <1> .ss:            dd  DS_TASK_1
    52 0000042C 27000000            <1> .ds:            dd  DS_TASK_1
    53 00000430 27000000            <1> .fs:            dd  DS_TASK_1
    54 00000434 27000000            <1> .gs:            dd  DS_TASK_1
    55 00000438 28000000            <1> .ldt:           dd  SS_LDT
    56 0000043C 00000000            <1> .io:            dd  0
    57 00000440 00<rept>            <1> .fp_save:   times 108 + 4 db 0
    58                              <1> 
    59                              <1> TSS_2:
    60 000004B0 00000000            <1> .link:          dd  0
    61 000004B4 003A1000            <1> .esp0:          dd  SP_TASK_2 - 512
    62 000004B8 10000000            <1> .ss0:           dd  DS_KERNEL
    63 000004BC 00000000            <1> .esp1:          dd  0
    64 000004C0 00000000            <1> .ss1:           dd  0
    65 000004C4 00000000            <1> .esp2:          dd  0
    66 000004C8 00000000            <1> .ss2:           dd  0
    67 000004CC 00501000            <1> .cr3:           dd  CR3_BASE
    68 000004D0 [C20B0000]          <1> .eip:           dd  task_2
    69 000004D4 02020000            <1> .eflags:        dd  0x0202
    70 000004D8 00000000            <1> .eax:           dd  0
    71 000004DC 00000000            <1> .ecx:           dd  0
    72 000004E0 00000000            <1> .edx:           dd  0
    73 000004E4 00000000            <1> .ebx:           dd  0
    74 000004E8 003C1000            <1> .esp:           dd  SP_TASK_2
    75 000004EC 00000000            <1> .ebp:           dd  0
    76 000004F0 00000000            <1> .esi:           dd  0
    77 000004F4 00000000            <1> .edi:           dd  0
    78 000004F8 37000000            <1> .es:            dd  DS_TASK_2
    79 000004FC 2F000000            <1> .cs:            dd  CS_TASK_2
    80 00000500 37000000            <1> .ss:            dd  DS_TASK_2
    81 00000504 37000000            <1> .ds:            dd  DS_TASK_2
    82 00000508 37000000            <1> .fs:            dd  DS_TASK_2
    83 0000050C 37000000            <1> .gs:            dd  DS_TASK_2
    84 00000510 28000000            <1> .ldt:           dd  SS_LDT
    85 00000514 00000000            <1> .io:            dd  0
    86 00000518 00<rept>            <1> .fp_save:   times 108 + 4 db 0
    87                              <1> 
    88                              <1> TSS_3:
    89 00000588 00000000            <1> .link:          dd  0
    90 0000058C 003E1000            <1> .esp0:          dd  SP_TASK_3 - 512
    91 00000590 10000000            <1> .ss0:           dd  DS_KERNEL
    92 00000594 00000000            <1> .esp1:          dd  0
    93 00000598 00000000            <1> .ss1:           dd  0
    94 0000059C 00000000            <1> .esp2:          dd  0
    95 000005A0 00000000            <1> .ss2:           dd  0
    96 000005A4 00501000            <1> .cr3:           dd  CR3_BASE
    97 000005A8 [9C0C0000]          <1> .eip:           dd  task_3
    98 000005AC 02020000            <1> .eflags:        dd  0x0202
    99 000005B0 00000000            <1> .eax:           dd  0
   100 000005B4 00000000            <1> .ecx:           dd  0
   101 000005B8 00000000            <1> .edx:           dd  0
   102 000005BC 00000000            <1> .ebx:           dd  0
   103 000005C0 00401000            <1> .esp:           dd  SP_TASK_3
   104 000005C4 00000000            <1> .ebp:           dd  0
   105 000005C8 00000000            <1> .esi:           dd  0
   106 000005CC 00000000            <1> .edi:           dd  0
   107 000005D0 47000000            <1> .es:            dd  DS_TASK_3
   108 000005D4 3F000000            <1> .cs:            dd  CS_TASK_3
   109 000005D8 47000000            <1> .ss:            dd  DS_TASK_3
   110 000005DC 47000000            <1> .ds:            dd  DS_TASK_3
   111 000005E0 47000000            <1> .fs:            dd  DS_TASK_3
   112 000005E4 47000000            <1> .gs:            dd  DS_TASK_3
   113 000005E8 28000000            <1> .ldt:           dd  SS_LDT
   114 000005EC 00000000            <1> .io:            dd  0
   115 000005F0 00<rept>            <1> .fp_save:   times 108 + 4 db 0
   116                              <1> 
   117                              <1> TSS_4:
   118 00000660 00000000            <1> .link:          dd  0
   119 00000664 00421000            <1> .esp0:          dd  SP_TASK_4 - 512
   120 00000668 10000000            <1> .ss0:           dd  DS_KERNEL
   121 0000066C 00000000            <1> .esp1:          dd  0
   122 00000670 00000000            <1> .ss1:           dd  0
   123 00000674 00000000            <1> .esp2:          dd  0
   124 00000678 00000000            <1> .ss2:           dd  0
   125 0000067C 00002000            <1> .cr3:           dd  CR3_TASK_4
   126 00000680 [9C0C0000]          <1> .eip:           dd  task_3
   127 00000684 02020000            <1> .eflags:        dd  0x0202
   128 00000688 00000000            <1> .eax:           dd  0
   129 0000068C 00000000            <1> .ecx:           dd  0
   130 00000690 00000000            <1> .edx:           dd  0
   131 00000694 00000000            <1> .ebx:           dd  0
   132 00000698 00441000            <1> .esp:           dd  SP_TASK_4
   133 0000069C 00000000            <1> .ebp:           dd  0
   134 000006A0 00000000            <1> .esi:           dd  0
   135 000006A4 00000000            <1> .edi:           dd  0
   136 000006A8 4F000000            <1> .es:            dd  DS_TASK_4
   137 000006AC 3F000000            <1> .cs:            dd  CS_TASK_3
   138 000006B0 4F000000            <1> .ss:            dd  DS_TASK_4
   139 000006B4 4F000000            <1> .ds:            dd  DS_TASK_4
   140 000006B8 4F000000            <1> .fs:            dd  DS_TASK_4
   141 000006BC 4F000000            <1> .gs:            dd  DS_TASK_4
   142 000006C0 28000000            <1> .ldt:           dd  SS_LDT
   143 000006C4 00000000            <1> .io:            dd  0
   144 000006C8 00<rept>            <1> .fp_save:   times 108 + 4 db 0
   145                              <1> 
   146                              <1> TSS_5:
   147 00000738 00000000            <1> .link:          dd  0
   148 0000073C 00461000            <1> .esp0:          dd  SP_TASK_5 - 512
   149 00000740 10000000            <1> .ss0:           dd  DS_KERNEL
   150 00000744 00000000            <1> .esp1:          dd  0
   151 00000748 00000000            <1> .ss1:           dd  0
   152 0000074C 00000000            <1> .esp2:          dd  0
   153 00000750 00000000            <1> .ss2:           dd  0
   154 00000754 00202000            <1> .cr3:           dd  CR3_TASK_5
   155 00000758 [9C0C0000]          <1> .eip:           dd  task_3
   156 0000075C 02020000            <1> .eflags:        dd  0x0202
   157 00000760 00000000            <1> .eax:           dd  0
   158 00000764 00000000            <1> .ecx:           dd  0
   159 00000768 00000000            <1> .edx:           dd  0
   160 0000076C 00000000            <1> .ebx:           dd  0
   161 00000770 00481000            <1> .esp:           dd  SP_TASK_5
   162 00000774 00000000            <1> .ebp:           dd  0
   163 00000778 00000000            <1> .esi:           dd  0
   164 0000077C 00000000            <1> .edi:           dd  0
   165 00000780 57000000            <1> .es:            dd  DS_TASK_5
   166 00000784 3F000000            <1> .cs:            dd  CS_TASK_3
   167 00000788 57000000            <1> .ss:            dd  DS_TASK_5
   168 0000078C 57000000            <1> .ds:            dd  DS_TASK_5
   169 00000790 57000000            <1> .fs:            dd  DS_TASK_5
   170 00000794 57000000            <1> .gs:            dd  DS_TASK_5
   171 00000798 28000000            <1> .ldt:           dd  SS_LDT
   172 0000079C 00000000            <1> .io:            dd  0
   173 000007A0 00<rept>            <1> .fp_save:   times 108 + 4 db 0
   174                              <1> 
   175                              <1> TSS_6:
   176 00000810 00000000            <1> .link:          dd  0
   177 00000814 004A1000            <1> .esp0:          dd  SP_TASK_6 - 512
   178 00000818 10000000            <1> .ss0:           dd  DS_KERNEL
   179 0000081C 00000000            <1> .esp1:          dd  0
   180 00000820 00000000            <1> .ss1:           dd  0
   181 00000824 00000000            <1> .esp2:          dd  0
   182 00000828 00000000            <1> .ss2:           dd  0
   183 0000082C 00402000            <1> .cr3:           dd  CR3_TASK_6
   184 00000830 [9C0C0000]          <1> .eip:           dd  task_3
   185 00000834 02020000            <1> .eflags:        dd  0x0202
   186 00000838 00000000            <1> .eax:           dd  0
   187 0000083C 00000000            <1> .ecx:           dd  0
   188 00000840 00000000            <1> .edx:           dd  0
   189 00000844 00000000            <1> .ebx:           dd  0
   190 00000848 004C1000            <1> .esp:           dd  SP_TASK_6
   191 0000084C 00000000            <1> .ebp:           dd  0
   192 00000850 00000000            <1> .esi:           dd  0
   193 00000854 00000000            <1> .edi:           dd  0
   194 00000858 5F000000            <1> .es:            dd  DS_TASK_6
   195 0000085C 3F000000            <1> .cs:            dd  CS_TASK_3
   196 00000860 5F000000            <1> .ss:            dd  DS_TASK_6
   197 00000864 5F000000            <1> .ds:            dd  DS_TASK_6
   198 00000868 5F000000            <1> .fs:            dd  DS_TASK_6
   199 0000086C 5F000000            <1> .gs:            dd  DS_TASK_6
   200 00000870 28000000            <1> .ldt:           dd  SS_LDT
   201 00000874 00000000            <1> .io:            dd  0
   202 00000878 00<rept>            <1> .fp_save:   times 108 + 4 db 0
   203                              <1> 
   204 000008E8 0000000000000000    <1> GDT:            dq  0x0000000000000000
   205 000008F0 FFFF0000009ACF00    <1> .cs_kernel:     dq  0x00CF9A000000FFFF
   206 000008F8 FFFF00000092CF00    <1> .ds_kernel:     dq  0x00CF92000000FFFF
   207 00000900 FFFF0000009A0F00    <1> .cs_bit16:      dq  0x000F9A000000FFFF
   208 00000908 FFFF000000920F00    <1> .ds_bit16:      dq  0x000F92000000FFFF
   209 00000910 0000000000820000    <1> .ldt            dq  0x0000820000000000
   210 00000918 6700000000890000    <1> .tss_0:         dq  0x0000890000000067
   211 00000920 6700000000890000    <1> .tss_1:         dq  0x0000890000000067
   212 00000928 6700000000890000    <1> .tss_2:         dq  0x0000890000000067
   213 00000930 6700000000890000    <1> .tss_3:         dq  0x0000890000000067
   214 00000938 6700000000890000    <1> .tss_4:         dq  0x0000890000000067
   215 00000940 6700000000890000    <1> .tss_5:         dq  0x0000890000000067
   216 00000948 6700000000890000    <1> .tss_6:         dq  0x0000890000000067
   217 00000950 0000080004EC0000    <1> .call_gate:     dq  0x0000EC0400080000
   218                              <1> .end:
   219                              <1> 
   220                              <1> CS_KERNEL       equ .cs_kernel  - GDT
   221                              <1> DS_KERNEL       equ .ds_kernel  - GDT
   222                              <1> SS_LDT          equ .ldt        - GDT
   223                              <1> SS_TASK_0       equ .tss_0      - GDT
   224                              <1> SS_TASK_1       equ .tss_1      - GDT
   225                              <1> SS_TASK_2       equ .tss_2      - GDT
   226                              <1> SS_TASK_3       equ .tss_3      - GDT
   227                              <1> SS_TASK_4       equ .tss_4      - GDT
   228                              <1> SS_TASK_5       equ .tss_5      - GDT
   229                              <1> SS_TASK_6       equ .tss_6      - GDT
   230                              <1> SS_GATE_0       equ .call_gate  - GDT
   231                              <1> 
   232 00000958 6F00                <1> GDTR:   dw      GDT.end - GDT - 1
   233 0000095A [E8080000]          <1>         dd      GDT
   234                              <1> 
   235 0000095E 0000000000000000    <1> LDT:            dq  0x0000000000000000
   236 00000966 FFFF0000009ACF00    <1> .cs_task_0:     dq  0x00CF9A000000FFFF
   237 0000096E FFFF00000092CF00    <1> .ds_task_0:     dq  0x00CF92000000FFFF
   238 00000976 FFFF000000FACF00    <1> .cs_task_1:     dq  0x00CFFA000000FFFF
   239 0000097E FFFF000000F2CF00    <1> .ds_task_1:     dq  0x00CFF2000000FFFF
   240 00000986 FFFF000000FACF00    <1> .cs_task_2:     dq  0x00CFFA000000FFFF
   241 0000098E FFFF000000F2CF00    <1> .ds_task_2:     dq  0x00CFF2000000FFFF
   242 00000996 FFFF000000FACF00    <1> .cs_task_3:     dq  0x00CFFA000000FFFF
   243 0000099E FFFF000000F2CF00    <1> .ds_task_3:     dq  0x00CFF2000000FFFF
   244 000009A6 FFFF000000F2CF00    <1> .ds_task_4:     dq  0x00CFF2000000FFFF
   245 000009AE FFFF000000F2CF00    <1> .ds_task_5:     dq  0x00CFF2000000FFFF
   246 000009B6 FFFF000000F2CF00    <1> .ds_task_6:     dq  0x00CFF2000000FFFF
   247                              <1> .end:
   248                              <1> 
   249                              <1> CS_TASK_0       equ (.cs_task_0 - LDT) | 4
   250                              <1> DS_TASK_0       equ (.ds_task_0 - LDT) | 4
   251                              <1> CS_TASK_1       equ (.cs_task_1 - LDT) | 4 | 3
   252                              <1> DS_TASK_1       equ (.ds_task_1 - LDT) | 4 | 3
   253                              <1> CS_TASK_2       equ (.cs_task_2 - LDT) | 4 | 3
   254                              <1> DS_TASK_2       equ (.ds_task_2 - LDT) | 4 | 3
   255                              <1> CS_TASK_3       equ (.cs_task_3 - LDT) | 4 | 3
   256                              <1> DS_TASK_3       equ (.ds_task_3 - LDT) | 4 | 3
   257                              <1> DS_TASK_4       equ (.ds_task_4 - LDT) | 4 | 3
   258                              <1> DS_TASK_5       equ (.ds_task_5 - LDT) | 4 | 3
   259                              <1> DS_TASK_6       equ (.ds_task_6 - LDT) | 4 | 3
   260                              <1> 
   261                              <1> LDT_LIMIT       equ .end        - LDT - 1
   118                                  %include    "modules/int_pf.s"
     1                              <1> int_pf:
     2                              <1> 
     3 000009BE 55                  <1>         push    ebp
     4 000009BF 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 000009C1 60                  <1>         pusha
     7 000009C2 1E                  <1>         push    ds
     8 000009C3 06                  <1>         push    es
     9                              <1> 
    10 000009C4 66B81000            <1>         mov     ax, 0x0010
    11 000009C8 8ED8                <1>         mov     ds, ax
    12 000009CA 8EC0                <1>         mov     es, ax
    13                              <1> 
    14 000009CC 0F20D0              <1>         mov     eax, cr2
    15 000009CF 2500F0FFFF          <1>         and     eax, ~0x0FFF
    16 000009D4 3D00701000          <1>         cmp     eax, 0x0010_7000
    17 000009D9 7521                <1>         jne     .10F
    18                              <1> 
    19 000009DB C7051C641000077010- <1>         mov     [0x00106000 + 0x107 * 4], dword 0x00107007
    19 000009E4 00                  <1>
    20                              <1> 
    21 000009E5 6A4068[9C0D0000]68- <1>         cdecl   memcpy, 0x0010_7000, DRAW_PARAM, rose_size
    21 000009ED 00701000E8060F0000- <1>
    21 000009F6 6683C40C            <1>
    22                              <1> 
    23 000009FA EB15                <1>         jmp     .10E
    24                              <1> .10F:
    25 000009FC 83C404              <1>         add     esp, 4
    26 000009FF 83C404              <1>         add     esp, 4
    27 00000A02 61                  <1>         popa
    28 00000A03 5D                  <1>         pop     ebp
    29                              <1> 
    30 00000A04 9C                  <1>         pushf
    31 00000A05 0E                  <1>         push    cs
    32 00000A06 68[EB140000]        <1>         push    int_stop
    33                              <1> 
    34 00000A0B B8[1B0A0000]        <1>         mov     eax, .s0
    35 00000A10 CF                  <1>         iret
    36                              <1> .10E:
    37 00000A11 07                  <1>         pop     es
    38 00000A12 1F                  <1>         pop     ds
    39 00000A13 61                  <1>         popa
    40                              <1> 
    41 00000A14 89EC                <1>         mov     esp, ebp
    42 00000A16 5D                  <1>         pop     ebp
    43                              <1> 
    44 00000A17 83C404              <1>         add     esp, 4
    45                              <1> 
    46 00000A1A CF                  <1>         iret
    47                              <1> 
    48 00000A1B 203C20504147452046- <1> .s0     db  " < PAGE FAULT > ", 0
    48 00000A24 41554C54203E2000    <1>
   119                                  %include    "modules/int_timer.s"
     1                              <1> int_timer:
     2                              <1> 
     3 00000A2C 60                  <1>         pusha
     4 00000A2D 1E                  <1>         push    ds
     5 00000A2E 06                  <1>         push    es
     6                              <1> 
     7 00000A2F 66B81000            <1>         mov     ax, 0x0010
     8 00000A33 8ED8                <1>         mov     ds, ax
     9 00000A35 8EC0                <1>         mov     es, ax
    10                              <1> 
    11 00000A37 FF05[AC0A0000]      <1>         inc     dword [TIMER_COUNT]
    12                              <1> 
    13                              <1>         outp    0x20, 0x20
    13 00000A3D B020                <2>  mov al, %2
    13 00000A3F E620                <2>  out %1, al
    14                              <1> 
    15 00000A41 660F00C8            <1>         str     ax
    16 00000A45 6683F830            <1>         cmp     ax, SS_TASK_0
    17 00000A49 7427                <1>         je      .11L
    18 00000A4B 6683F838            <1>         cmp     ax, SS_TASK_1
    19 00000A4F 742A                <1>         je      .12L
    20 00000A51 6683F840            <1>         cmp     ax, SS_TASK_2
    21 00000A55 742D                <1>         je      .13L
    22 00000A57 6683F848            <1>         cmp     ax, SS_TASK_3
    23 00000A5B 7430                <1>         je      .14L
    24 00000A5D 6683F850            <1>         cmp     ax, SS_TASK_4
    25 00000A61 7433                <1>         je      .15L
    26 00000A63 6683F858            <1>         cmp     ax, SS_TASK_5
    27 00000A67 7436                <1>         je      .16L
    28                              <1> 
    29 00000A69 EA000000003000      <1>         jmp     SS_TASK_0:0
    30 00000A70 EB36                <1>         jmp     .10E
    31                              <1> 
    32                              <1> .11L:
    33 00000A72 EA000000003800      <1>         jmp     SS_TASK_1:0
    34 00000A79 EB2D                <1>         jmp     .10E
    35                              <1> 
    36                              <1> .12L:
    37 00000A7B EA000000004000      <1>         jmp     SS_TASK_2:0
    38 00000A82 EB24                <1>         jmp     .10E
    39                              <1> 
    40                              <1> .13L:
    41 00000A84 EA000000004800      <1>         jmp     SS_TASK_3:0
    42 00000A8B EB1B                <1>         jmp     .10E
    43                              <1> 
    44                              <1> .14L:
    45 00000A8D EA000000005000      <1>         jmp     SS_TASK_4:0
    46 00000A94 EB12                <1>         jmp     .10E
    47                              <1> 
    48                              <1> .15L:
    49 00000A96 EA000000005800      <1>         jmp     SS_TASK_5:0
    50 00000A9D EB09                <1>         jmp     .10E
    51                              <1> 
    52                              <1> .16L:
    53 00000A9F EA000000006000      <1>         jmp     SS_TASK_6:0
    54 00000AA6 EB00                <1>         jmp     .10E
    55                              <1> 
    56                              <1> .10E:
    57                              <1> 
    58 00000AA8 07                  <1>         pop     es
    59 00000AA9 1F                  <1>         pop     ds
    60 00000AAA 61                  <1>         popa
    61                              <1> 
    62 00000AAB CF                  <1>         iret
    63                              <1> 
    64                              <1> ALIGN 4, db 0
    65 00000AAC 00000000            <1> TIMER_COUNT     dd 0
   120                                  %include    "modules/paging.s"
     1                              <1> init_page:
     2                              <1> 
     3 00000AB0 60                  <1>         pusha
     4                              <1> 
     5 00000AB1 6800501000E8970000- <1>         cdecl   page_set_4m, CR3_BASE
     5 00000ABA 006683C404          <1>
     6 00000ABF 6800002000E8890000- <1>         cdecl   page_set_4m, CR3_TASK_4
     6 00000AC8 006683C404          <1>
     7 00000ACD 6800202000E87B0000- <1>         cdecl   page_set_4m, CR3_TASK_5
     7 00000AD6 006683C404          <1>
     8 00000ADB 6800402000E86D0000- <1>         cdecl   page_set_4m, CR3_TASK_6
     8 00000AE4 006683C404          <1>
     9                              <1> 
    10 00000AE9 C7051C641000000000- <1>         mov     [0x0010_6000 + 0x107 * 4], dword 0
    10 00000AF2 00                  <1>
    11                              <1> 
    12 00000AF3 C7051C142000078010- <1>         mov     [0x0020_1000 + 0x107 * 4], dword PARAM_TASK_4 + 7
    12 00000AFC 00                  <1>
    13 00000AFD C7051C342000079010- <1>         mov     [0x0020_3000 + 0x107 * 4], dword PARAM_TASK_5 + 7
    13 00000B06 00                  <1>
    14 00000B07 C7051C54200007A010- <1>         mov     [0x0020_5000 + 0x107 * 4], dword PARAM_TASK_6 + 7
    14 00000B10 00                  <1>
    15                              <1> 
    16 00000B11 6A4068[DC0D0000]68- <1>         cdecl   memcpy, PARAM_TASK_4, DRAW_PARAM.t4, rose_size
    16 00000B19 00801000E8DA0D0000- <1>
    16 00000B22 6683C40C            <1>
    17 00000B26 6A4068[1C0E0000]68- <1>         cdecl   memcpy, PARAM_TASK_5, DRAW_PARAM.t5, rose_size
    17 00000B2E 00901000E8C50D0000- <1>
    17 00000B37 6683C40C            <1>
    18 00000B3B 6A4068[5C0E0000]68- <1>         cdecl   memcpy, PARAM_TASK_6, DRAW_PARAM.t6, rose_size
    18 00000B43 00A01000E8B00D0000- <1>
    18 00000B4C 6683C40C            <1>
    19                              <1> 
    20 00000B50 61                  <1>         popa
    21                              <1> 
    22 00000B51 C3                  <1>         ret
    23                              <1> 
    24                              <1> 
    25                              <1> page_set_4m:
    26                              <1> 
    27 00000B52 55                  <1>         push    ebp
    28 00000B53 89E5                <1>         mov     ebp, esp
    29                              <1> 
    30 00000B55 60                  <1>         pusha
    31                              <1> 
    32 00000B56 FC                  <1>         cld
    33 00000B57 8B7D08              <1>         mov     edi, [ebp + 8]
    34 00000B5A B800000000          <1>         mov     eax, 0x00000000
    35 00000B5F B900040000          <1>         mov     ecx, 1024
    36 00000B64 F3AB                <1>         rep stosd
    37                              <1> 
    38 00000B66 89F8                <1>         mov     eax, edi
    39 00000B68 2500F0FFFF          <1>         and     eax, ~0x0000_0FFF
    40 00000B6D 83C807              <1>         or      eax, 7
    41 00000B70 898700F0FFFF        <1>         mov     [edi - (1024 * 4)], eax
    42                              <1> 
    43 00000B76 B807000000          <1>         mov     eax, 0x00000007
    44 00000B7B B900040000          <1>         mov     ecx, 1024
    45                              <1> 
    46                              <1> .10L:
    47 00000B80 AB                  <1>         stosd
    48 00000B81 0500100000          <1>         add     eax, 0x00001000
    49 00000B86 E2F8                <1>         loop    .10L
    50                              <1> 
    51 00000B88 61                  <1>         popa
    52                              <1> 
    53 00000B89 89EC                <1>         mov     esp, ebp
    54 00000B8B 5D                  <1>         pop     ebp
    55                              <1> 
    56 00000B8C C3                  <1>         ret
   121                                  %include    "tasks/task_1.s"
     1                              <1> task_1:
     2                              <1> 
     3 00000B8D 68[BB0B0000]6A076A- <1>         cdecl   draw_str, 63, 0, 0x07, .s0
     3 00000B95 006A3FE82005000066- <1>
     3 00000B9E 83C410              <1>
     4                              <1> .10L:
     5                              <1> 
     6 00000BA1 A1[FC020000]        <1>         mov     eax, [RTC_TIME]
     7 00000BA6 5068000700006A006A- <1>         cdecl   draw_time, 72, 0, 0x0700, eax
     7 00000BAF 48E8640800006683C4- <1>
     7 00000BB8 10                  <1>
     8                              <1> 
     9 00000BB9 EBE6                <1>         jmp     .10L
    10                              <1> 
    11 00000BBB 5461736B2D3100      <1> .s0     db  "Task-1", 0
   122                                  %include    "tasks/task_2.s"
     1                              <1> task_2:
     2                              <1> 
     3 00000BC2 68[8E0C0000]6A076A- <1>         cdecl   draw_str, 63, 1, 0x07, .s0
     3 00000BCA 016A3FE8EB04000066- <1>
     3 00000BD3 83C410              <1>
     4                              <1> 
     5 00000BD6 DB05[7C0C0000]      <1>         fild    dword [.c1000]
     6 00000BDC D9EB                <1>         fldpi
     7 00000BDE DA35[800C0000]      <1>         fidiv   dword [.c180]
     8 00000BE4 D9EB                <1>         fldpi
     9 00000BE6 DCC0                <1>         fadd    st0, st0
    10 00000BE8 D9EE                <1>         fldz
    11                              <1> .10L:
    12                              <1> 
    13 00000BEA D8C2                <1>         fadd    st0, st2
    14 00000BEC D9F8                <1>         fprem
    15 00000BEE D9C0                <1>         fld     st0
    16 00000BF0 D9FE                <1>         fsin
    17 00000BF2 D8CC                <1>         fmul    st0, st4
    18                              <1> 
    19 00000BF4 DF35[840C0000]      <1>         fbstp   [.bcd]
    20                              <1> 
    21 00000BFA A1[840C0000]        <1>         mov     eax, [.bcd]
    22 00000BFF 89C3                <1>         mov     ebx, eax
    23                              <1> 
    24 00000C01 250F0F0000          <1>         and     eax, 0x0F0F
    25 00000C06 0D30300000          <1>         or      eax, 0x3030
    26                              <1> 
    27 00000C0B C1EB04              <1>         shr     ebx, 4
    28 00000C0E 81E30F0F0000        <1>         and     ebx, 0x0F0F
    29 00000C14 81CB30300000        <1>         or      ebx, 0x3030
    30                              <1> 
    31 00000C1A 883D[960C0000]      <1>         mov     [.s2 + 0], bh
    32 00000C20 8825[980C0000]      <1>         mov     [.s3 + 0], ah
    33 00000C26 881D[990C0000]      <1>         mov     [.s3 + 1], bl
    34 00000C2C A2[9A0C0000]        <1>         mov     [.s3 + 2], al
    35                              <1> 
    36 00000C31 B807000000          <1>         mov     eax, 7
    37 00000C36 0FA305[8D0C0000]    <1>         bt      [.bcd + 9], eax
    38 00000C3D 7209                <1>         jc      .10F
    39                              <1> 
    40 00000C3F C605[950C0000]2B    <1>         mov     [.s1 + 0], byte '+'
    41 00000C46 EB07                <1>         jmp     .10E
    42                              <1> .10F:
    43                              <1> 
    44 00000C48 C605[950C0000]2D    <1>         mov     [.s1 + 0], byte '-'
    45                              <1> .10E:
    46                              <1> 
    47 00000C4F 68[950C0000]6A076A- <1>         cdecl   draw_str, 72, 1, 0x07, .s1
    47 00000C57 016A48E85E04000066- <1>
    47 00000C60 83C410              <1>
    48                              <1> 
    49 00000C63 B914000000          <1>         mov     ecx, 20
    50                              <1> 
    51                              <1> .20L:
    52 00000C68 A1[AC0A0000]        <1>         mov     eax, [TIMER_COUNT]
    53                              <1> .21L:
    54 00000C6D 3905[AC0A0000]      <1>         cmp     [TIMER_COUNT], eax
    55 00000C73 74F8                <1>         je      .21L
    56 00000C75 E2F1                <1>         loop    .20L
    57                              <1> 
    58 00000C77 E96EFFFFFF          <1>         jmp     .10L
    59                              <1> 
    60                              <1> ALIGN 4, db 0
    61 00000C7C E8030000            <1> .c1000      dd  1000
    62 00000C80 B4000000            <1> .c180       dd  180
    63                              <1> 
    64 00000C84 00<rept>            <1> .bcd:   times 10 db 0x00
    65                              <1> 
    66 00000C8E 5461736B2D3200      <1> .s0     db  "Task-2", 0
    67 00000C95 2D                  <1> .s1     db  "-"
    68 00000C96 302E                <1> .s2     db  "0."
    69 00000C98 30303000            <1> .s3     db  "000", 0
   123                                  %include    "tasks/task_3.s"
     1                              <1> task_3:
     2                              <1> 
     3 00000C9C 89E5                <1>         mov     ebp, esp
     4                              <1> 
     5 00000C9E 6A00                <1>         push    dword 0
     6 00000CA0 6A00                <1>         push    dword 0
     7 00000CA2 6A00                <1>         push    dword 0
     8 00000CA4 6A00                <1>         push    dword 0
     9 00000CA6 6A00                <1>         push    dword 0
    10                              <1> 
    11 00000CA8 BE00701000          <1>         mov     esi, 0x0010_7000
    12                              <1> 
    13 00000CAD 8B06                <1>         mov     eax, [esi + rose.x0]
    14 00000CAF 8B5E04              <1>         mov     ebx, [esi + rose.y0]
    15                              <1> 
    16 00000CB2 C1E803              <1>         shr     eax, 3
    17 00000CB5 C1EB04              <1>         shr     ebx, 4
    18 00000CB8 4B                  <1>         dec     ebx
    19 00000CB9 8B4E24              <1>         mov     ecx, [esi + rose.color_s]
    20 00000CBC 8D5630              <1>         lea     edx, [esi + rose.title]
    21                              <1> 
    22 00000CBF 52515350E8F5030000- <1>         cdecl   draw_str, eax, ebx, ecx, edx
    22 00000CC8 6683C410            <1>
    23                              <1> 
    24 00000CCC 8B06                <1>         mov     eax, [esi + rose.x0]
    25 00000CCE 8B5E08              <1>         mov     ebx, [esi + rose.x1]
    26 00000CD1 29C3                <1>         sub     ebx, eax
    27 00000CD3 D1EB                <1>         shr     ebx, 1
    28 00000CD5 01C3                <1>         add     ebx, eax
    29 00000CD7 895DFC              <1>         mov     [ebp - 4], ebx
    30                              <1> 
    31 00000CDA 8B4604              <1>         mov     eax, [esi + rose.y0]
    32 00000CDD 8B5E0C              <1>         mov     ebx, [esi + rose.y1]
    33 00000CE0 29C3                <1>         sub     ebx, eax
    34 00000CE2 D1EB                <1>         shr     ebx, 1
    35 00000CE4 01C3                <1>         add     ebx, eax
    36 00000CE6 895DF8              <1>         mov     [ebp - 8], ebx
    37                              <1> 
    38 00000CE9 8B06                <1>         mov     eax, [esi + rose.x0]
    39 00000CEB 8B5DF8              <1>         mov     ebx, [ebp - 8]
    40 00000CEE 8B4E08              <1>         mov     ecx, [esi + rose.x1]
    41                              <1> 
    42 00000CF1 FF761853515350E83C- <1>         cdecl   draw_line, eax, ebx, ecx, ebx, dword [esi + rose.color_x]
    42 00000CFA 0500006683C414      <1>
    43                              <1> 
    44 00000D01 8B4604              <1>         mov     eax, [esi + rose.y0]
    45 00000D04 8B5DFC              <1>         mov     ebx, [ebp - 4]
    46 00000D07 8B4E0C              <1>         mov     ecx, [esi + rose.y1]
    47                              <1> 
    48 00000D0A FF761C51535053E823- <1>         cdecl   draw_line, ebx, eax, ebx, ecx, dword [esi + rose.color_y]
    48 00000D13 0500006683C414      <1>
    49                              <1> 
    50 00000D1A 8B06                <1>         mov     eax, [esi + rose.x0]
    51 00000D1C 8B5E04              <1>         mov     ebx, [esi + rose.y0]
    52 00000D1F 8B4E08              <1>         mov     ecx, [esi + rose.x1]
    53 00000D22 8B560C              <1>         mov     edx, [esi + rose.y1]
    54                              <1> 
    55 00000D25 FF762052515350E8B7- <1>         cdecl   draw_rect, eax, ebx, ecx, edx, dword [esi + rose.color_z]
    55 00000D2E 0500006683C414      <1>
    56                              <1> 
    57 00000D35 8B4608              <1>         mov     eax, [esi + rose.x1]
    58 00000D38 2B06                <1>         sub     eax, [esi + rose.x0]
    59 00000D3A D1E8                <1>         shr     eax, 1
    60 00000D3C 89C3                <1>         mov     ebx, eax
    61 00000D3E C1EB04              <1>         shr     ebx, 4
    62 00000D41 29D8                <1>         sub     eax, ebx
    63                              <1> 
    64 00000D43 FF7614FF761050E84D- <1>         cdecl   fpu_rose_init, eax, dword [esi + rose.n], dword [esi + rose.d]
    64 00000D4C 0100006683C40C      <1>
    65                              <1> 
    66                              <1> .10L:
    67                              <1> 
    68 00000D53 8D5DF4              <1>         lea     ebx, [ebp - 12]
    69 00000D56 8D4DF0              <1>         lea     ecx, [ebp - 16]
    70 00000D59 8B45EC              <1>         mov     eax, [ebp - 20]
    71                              <1> 
    72 00000D5C 505153E85201000066- <1>         cdecl   fpu_rose_update, ebx, ecx, eax
    72 00000D65 83C40C              <1>
    73                              <1> 
    74 00000D68 BA00000000          <1>         mov     edx, 0
    75 00000D6D 40                  <1>         inc     eax
    76 00000D6E BBA08C0000          <1>         mov     ebx, 360 * 100
    77 00000D73 F7F3                <1>         div     ebx
    78 00000D75 8955EC              <1>         mov     [ebp - 20], edx
    79                              <1> 
    80 00000D78 8B4DF4              <1>         mov     ecx, [ebp - 12]
    81 00000D7B 8B55F0              <1>         mov     edx, [ebp - 16]
    82                              <1> 
    83 00000D7E 034DFC              <1>         add     ecx, [ebp - 4]
    84 00000D81 0355F8              <1>         add     edx, [ebp - 8]
    85                              <1> 
    86 00000D84 8B5E28              <1>         mov     ebx, [esi + rose.color_f]
    87 00000D87 CD82                <1>         int     0x82
    88                              <1> 
    89 00000D89 6A02E84E0B00006683- <1>         cdecl   wait_tick, 2
    89 00000D92 C404                <1>
    90                              <1> 
    91 00000D94 8B5E2C              <1>         mov     ebx, [esi + rose.color_b]
    92 00000D97 CD82                <1>         int     0x82
    93                              <1> 
    94 00000D99 EBB8                <1>         jmp     .10L
    95                              <1> 
    96 00000D9B 00                  <1> ALIGN 4, db 0
    97                              <1> DRAW_PARAM:
    98                              <1> .t3:
    99                              <1>     istruc  rose
   100 00000D9C 20000000            <1>         at  rose.x0,        dd      32
   101 00000DA0 20000000            <1>         at  rose.y0,        dd      32
   102 00000DA4 D0000000            <1>         at  rose.x1,        dd      208
   103 00000DA8 D0000000            <1>         at  rose.y1,        dd      208
   104                              <1> 
   105 00000DAC 02000000            <1>         at  rose.n,         dd      2
   106 00000DB0 01000000            <1>         at  rose.d,         dd      1
   107                              <1> 
   108 00000DB4 07000000            <1>         at  rose.color_x,   dd      0x0007
   109 00000DB8 07000000            <1>         at  rose.color_y,   dd      0x0007
   110 00000DBC 0F000000            <1>         at  rose.color_z,   dd      0x000F
   111 00000DC0 0F030000            <1>         at  rose.color_s,   dd      0x030F
   112 00000DC4 0F000000            <1>         at  rose.color_f,   dd      0x000F
   113 00000DC8 03000000            <1>         at  rose.color_b,   dd      0x0003
   114                              <1> 
   115 00000DCC 5461736B2D3300      <1>         at  rose.title,     db      "Task-3", 0
   116 00000DD3 00<rept>            <1>     iend
   117                              <1> 
   118                              <1> .t4:
   119                              <1>     istruc  rose
   120 00000DDC F8000000            <1>         at  rose.x0,        dd      248
   121 00000DE0 20000000            <1>         at  rose.y0,        dd      32
   122 00000DE4 A8010000            <1>         at  rose.x1,        dd      424
   123 00000DE8 D0000000            <1>         at  rose.y1,        dd      208
   124                              <1> 
   125 00000DEC 03000000            <1>         at  rose.n,         dd      3
   126 00000DF0 01000000            <1>         at  rose.d,         dd      1
   127                              <1> 
   128 00000DF4 07000000            <1>         at  rose.color_x,   dd      0x0007
   129 00000DF8 07000000            <1>         at  rose.color_y,   dd      0x0007
   130 00000DFC 0F000000            <1>         at  rose.color_z,   dd      0x000F
   131 00000E00 0F040000            <1>         at  rose.color_s,   dd      0x040F
   132 00000E04 0F000000            <1>         at  rose.color_f,   dd      0x000F
   133 00000E08 04000000            <1>         at  rose.color_b,   dd      0x0004
   134                              <1> 
   135 00000E0C 5461736B2D3400      <1>         at  rose.title,     db      "Task-4", 0
   136 00000E13 00<rept>            <1>     iend
   137                              <1> 
   138                              <1> .t5:
   139                              <1>     istruc  rose
   140 00000E1C 20000000            <1>         at  rose.x0,        dd      32
   141 00000E20 10010000            <1>         at  rose.y0,        dd      272
   142 00000E24 D0000000            <1>         at  rose.x1,        dd      208
   143 00000E28 C0010000            <1>         at  rose.y1,        dd      448
   144                              <1> 
   145 00000E2C 02000000            <1>         at  rose.n,         dd      2
   146 00000E30 06000000            <1>         at  rose.d,         dd      6
   147                              <1> 
   148 00000E34 07000000            <1>         at  rose.color_x,   dd      0x0007
   149 00000E38 07000000            <1>         at  rose.color_y,   dd      0x0007
   150 00000E3C 0F000000            <1>         at  rose.color_z,   dd      0x000F
   151 00000E40 0F050000            <1>         at  rose.color_s,   dd      0x050F
   152 00000E44 0F000000            <1>         at  rose.color_f,   dd      0x000F
   153 00000E48 05000000            <1>         at  rose.color_b,   dd      0x0005
   154                              <1> 
   155 00000E4C 5461736B2D3500      <1>         at  rose.title,     db      "Task-5", 0
   156 00000E53 00<rept>            <1>     iend
   157                              <1> 
   158                              <1> .t6:
   159                              <1>     istruc  rose
   160 00000E5C F8000000            <1>         at  rose.x0,        dd      248
   161 00000E60 10010000            <1>         at  rose.y0,        dd      272
   162 00000E64 A8010000            <1>         at  rose.x1,        dd      424
   163 00000E68 C0010000            <1>         at  rose.y1,        dd      448
   164                              <1> 
   165 00000E6C 04000000            <1>         at  rose.n,         dd      4
   166 00000E70 06000000            <1>         at  rose.d,         dd      6
   167                              <1> 
   168 00000E74 07000000            <1>         at  rose.color_x,   dd      0x0007
   169 00000E78 07000000            <1>         at  rose.color_y,   dd      0x0007
   170 00000E7C 0F000000            <1>         at  rose.color_z,   dd      0x000F
   171 00000E80 0F060000            <1>         at  rose.color_s,   dd      0x060F
   172 00000E84 0F000000            <1>         at  rose.color_f,   dd      0x000F
   173 00000E88 06000000            <1>         at  rose.color_b,   dd      0x0006
   174                              <1> 
   175 00000E8C 5461736B2D3600      <1>         at  rose.title,     db      "Task-6", 0
   176 00000E93 00<rept>            <1>     iend
   177                              <1> 
   178                              <1> fpu_rose_init:
   179                              <1> 
   180 00000E9C 55                  <1>         push    ebp
   181 00000E9D 89E5                <1>         mov     ebp, esp
   182                              <1> 
   183 00000E9F 68B4000000          <1>         push    dword 180
   184                              <1> 
   185 00000EA4 D9EB                <1>         fldpi
   186 00000EA6 DA75FC              <1>         fidiv   dword [ebp - 4]
   187 00000EA9 DB450C              <1>         fild    dword [ebp + 12]
   188 00000EAC DA7510              <1>         fidiv   dword [ebp + 16]
   189 00000EAF DB4508              <1>         fild    dword [ebp + 8]
   190                              <1> 
   191 00000EB2 89EC                <1>         mov     esp, ebp
   192 00000EB4 5D                  <1>         pop     ebp
   193                              <1> 
   194 00000EB5 C3                  <1>         ret
   195                              <1> 
   196                              <1> 
   197                              <1> fpu_rose_update:
   198                              <1> 
   199 00000EB6 55                  <1>         push    ebp
   200 00000EB7 89E5                <1>         mov     ebp, esp
   201                              <1> 
   202 00000EB9 50                  <1>         push    eax
   203 00000EBA 53                  <1>         push    ebx
   204                              <1> 
   205 00000EBB 8B4508              <1>         mov     eax, [ebp + 8]
   206 00000EBE 8B5D0C              <1>         mov     ebx, [ebp + 12]
   207                              <1> 
   208 00000EC1 DB4510              <1>         fild    dword [ebp + 16]
   209 00000EC4 D8CB                <1>         fmul    st0, st3
   210 00000EC6 D9C0                <1>         fld     st0
   211                              <1> 
   212 00000EC8 D9FB                <1>         fsincos
   213 00000ECA D9CA                <1>         fxch    st2
   214 00000ECC D8CC                <1>         fmul    st0, st4
   215 00000ECE D9FE                <1>         fsin
   216 00000ED0 D8CB                <1>         fmul    st0, st3
   217                              <1> 
   218 00000ED2 D9CA                <1>         fxch    st2
   219 00000ED4 D8CA                <1>         fmul    st0, st2
   220 00000ED6 DB18                <1>         fistp   dword [eax]
   221                              <1> 
   222 00000ED8 DEC9                <1>         fmulp   st1, st0
   223 00000EDA D9E0                <1>         fchs
   224 00000EDC DB1B                <1>         fistp   dword [ebx]
   225                              <1> 
   226 00000EDE 5B                  <1>         pop     ebx
   227 00000EDF 58                  <1>         pop     eax
   228                              <1> 
   229 00000EE0 89EC                <1>         mov     esp, ebp
   230 00000EE2 5D                  <1>         pop     ebp
   231                              <1> 
   232 00000EE3 C3                  <1>         ret
   124                                  
   125                                  %include    "../modules/protect/vga.s"
     1                              <1> vga_set_read_plane:
     2                              <1> 
     3 00000EE4 55                  <1>         push    ebp
     4 00000EE5 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000EE7 50                  <1>         push    eax
     7 00000EE8 52                  <1>         push    edx
     8                              <1> 
     9 00000EE9 8A6508              <1>         mov     ah, [ebp + 8]
    10 00000EEC 80E403              <1>         and     ah, 0x03
    11 00000EEF B004                <1>         mov     al, 0x04
    12 00000EF1 66BACE03            <1>         mov     dx, 0x03CE
    13 00000EF5 66EF                <1>         out     dx, ax
    14                              <1> 
    15 00000EF7 5A                  <1>         pop     edx
    16 00000EF8 58                  <1>         pop     eax
    17                              <1> 
    18 00000EF9 89EC                <1>         mov     esp, ebp
    19 00000EFB 5D                  <1>         pop     ebp
    20                              <1> 
    21 00000EFC C3                  <1>         ret
    22                              <1> 
    23                              <1> 
    24                              <1> vga_set_write_plane:
    25                              <1> 
    26 00000EFD 55                  <1>          push    ebp
    27 00000EFE 89E5                <1>          mov     ebp, esp
    28                              <1>  
    29 00000F00 50                  <1>          push    eax
    30 00000F01 52                  <1>          push    edx
    31                              <1>  
    32 00000F02 8A6508              <1>          mov     ah, [ebp + 8]
    33 00000F05 80E40F              <1>          and     ah, 0x0F
    34 00000F08 B002                <1>          mov     al, 0x02
    35 00000F0A 66BAC403            <1>          mov     dx, 0x03C4
    36 00000F0E 66EF                <1>          out     dx, ax
    37                              <1>  
    38 00000F10 5A                  <1>          pop     edx
    39 00000F11 58                  <1>          pop     eax
    40                              <1>  
    41 00000F12 89EC                <1>          mov     esp, ebp
    42 00000F14 5D                  <1>          pop     ebp
    43                              <1>  
    44 00000F15 C3                  <1>          ret
    45                              <1> 
    46                              <1> 
    47                              <1> vram_font_copy:
    48                              <1> 
    49 00000F16 55                  <1>         push    ebp
    50 00000F17 89E5                <1>         mov     ebp, esp
    51                              <1> 
    52 00000F19 50                  <1>         push    eax
    53 00000F1A 53                  <1>         push    ebx
    54 00000F1B 51                  <1>         push    ecx
    55 00000F1C 52                  <1>         push    edx
    56 00000F1D 56                  <1>         push    esi
    57 00000F1E 57                  <1>         push    edi
    58                              <1> 
    59 00000F1F 8B7508              <1>         mov     esi, [ebp + 8]
    60 00000F22 8B7D0C              <1>         mov     edi, [ebp + 12]
    61 00000F25 0FB64510            <1>         movzx   eax, byte [ebp + 16]
    62 00000F29 0FB75D14            <1>         movzx   ebx, word [ebp + 20]
    63                              <1> 
    64 00000F2D 84C7                <1>         test    bh, al
    65 00000F2F 0F94C6              <1>         setz    dh
    66 00000F32 FECE                <1>         dec     dh
    67                              <1> 
    68 00000F34 84C3                <1>         test    bl, al
    69 00000F36 0F94C2              <1>         setz    dl
    70 00000F39 FECA                <1>         dec     dl
    71                              <1> 
    72 00000F3B FC                  <1>         cld
    73                              <1> 
    74 00000F3C B910000000          <1>         mov     ecx, 16
    75                              <1> .10L:
    76                              <1> 
    77 00000F41 AC                  <1>         lodsb
    78 00000F42 88C4                <1>         mov     ah, al
    79 00000F44 F6D4                <1>         not     ah
    80                              <1> 
    81 00000F46 20D0                <1>         and     al, dl
    82                              <1> 
    83 00000F48 F7C310000000        <1>         test    ebx, 0x0010
    84 00000F4E 7404                <1>         jz      .11F
    85 00000F50 2227                <1>         and     ah, [edi]
    86 00000F52 EB02                <1>         jmp     .11E
    87                              <1> .11F:
    88                              <1> 
    89 00000F54 20F4                <1>         and     ah, dh
    90                              <1> .11E:
    91                              <1> 
    92 00000F56 08E0                <1>         or      al, ah
    93                              <1> 
    94 00000F58 8807                <1>         mov     [edi], al
    95                              <1> 
    96 00000F5A 83C750              <1>         add     edi, 80
    97 00000F5D E2E2                <1>         loop    .10L
    98                              <1> .10E:
    99                              <1> 
   100 00000F5F 5F                  <1>         pop     edi
   101 00000F60 5E                  <1>         pop     esi
   102 00000F61 5A                  <1>         pop     edx
   103 00000F62 59                  <1>         pop     ecx
   104 00000F63 5B                  <1>         pop     ebx
   105 00000F64 58                  <1>         pop     eax
   106                              <1> 
   107 00000F65 89EC                <1>         mov     esp, ebp
   108 00000F67 5D                  <1>         pop     ebp
   109                              <1> 
   110 00000F68 C3                  <1>         ret
   111                              <1> 
   112                              <1> 
   113                              <1> 
   114                              <1> vram_bit_copy:
   115                              <1> 
   116 00000F69 55                  <1>         push    ebp
   117 00000F6A 89E5                <1>         mov     ebp, esp
   118                              <1> 
   119 00000F6C 50                  <1>         push    eax
   120 00000F6D 53                  <1>         push    ebx
   121 00000F6E 57                  <1>         push    edi
   122                              <1> 
   123 00000F6F 8B7D0C              <1>         mov     edi, [ebp + 12]
   124 00000F72 0FB64510            <1>         movzx   eax, byte [ebp + 16]
   125 00000F76 0FB75D14            <1>         movzx   ebx, word [ebp + 20]
   126                              <1> 
   127 00000F7A 84C3                <1>         test    bl, al
   128 00000F7C 0F94C3              <1>         setz    bl
   129 00000F7F FECB                <1>         dec     bl
   130                              <1> 
   131 00000F81 8A4508              <1>         mov     al, [ebp + 8]
   132 00000F84 88C4                <1>         mov     ah, al
   133 00000F86 F6D4                <1>         not     ah
   134                              <1> 
   135 00000F88 2227                <1>         and     ah, [edi]
   136 00000F8A 20D8                <1>         and     al, bl
   137 00000F8C 08E0                <1>         or      al, ah
   138                              <1> 
   139 00000F8E 8807                <1>         mov     [edi], al
   140                              <1> 
   141 00000F90 5F                  <1>         pop     edi
   142 00000F91 5B                  <1>         pop     ebx
   143 00000F92 58                  <1>         pop     eax
   144                              <1> 
   145 00000F93 89EC                <1>         mov     esp, ebp
   146 00000F95 5D                  <1>         pop     ebp
   147                              <1> 
   148 00000F96 C3                  <1>         ret
   126                                  %include    "../modules/protect/draw_char.s"
     1                              <1> draw_char:
     2                              <1> 
     3 00000F97 55                  <1>         push    ebp
     4 00000F98 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000F9A 50                  <1>         push    eax
     7 00000F9B 53                  <1>         push    ebx
     8 00000F9C 51                  <1>         push    ecx
     9 00000F9D 52                  <1>         push    edx
    10 00000F9E 56                  <1>         push    esi
    11 00000F9F 57                  <1>         push    edi
    12                              <1> 
    13                              <1> %ifdef  USE_TEST_AND_SET
    14 00000FA0 68[74100000]E88508- <1>         cdecl   test_and_set, IN_USE
    14 00000FA8 00006683C404        <1>
    15                              <1> %endif
    16                              <1> 
    17 00000FAE 0FB67514            <1>         movzx   esi, byte [ebp + 20]
    18 00000FB2 C1E604              <1>         shl     esi, 4
    19 00000FB5 0335[F8020000]      <1>         add     esi, [FONT_ADR]
    20                              <1> 
    21 00000FBB 8B7D0C              <1>         mov     edi, [ebp + 12]
    22 00000FBE C1E708              <1>         shl     edi, 8
    23 00000FC1 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA0000]
    24 00000FC8 037D08              <1>         add     edi, [ebp + 8]
    25                              <1> 
    26 00000FCB 0FB75D10            <1>         movzx   ebx, word [ebp + 16]
    27                              <1> 
    28 00000FCF 6A03E80EFFFFFF6683- <1>         cdecl   vga_set_read_plane, 0x03
    28 00000FD8 C404                <1>
    29 00000FDA 6A08E81CFFFFFF6683- <1>         cdecl   vga_set_write_plane, 0x08
    29 00000FE3 C404                <1>
    30 00000FE5 536A085756E827FFFF- <1>         cdecl   vram_font_copy, esi, edi, 0x08, ebx
    30 00000FEE FF6683C410          <1>
    31                              <1> 
    32 00000FF3 6A02E8EAFEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x02
    32 00000FFC C404                <1>
    33 00000FFE 6A04E8F8FEFFFF6683- <1>         cdecl   vga_set_write_plane, 0x04
    33 00001007 C404                <1>
    34 00001009 536A045756E803FFFF- <1>         cdecl   vram_font_copy, esi, edi, 0x04, ebx
    34 00001012 FF6683C410          <1>
    35                              <1> 
    36 00001017 6A01E8C6FEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x01
    36 00001020 C404                <1>
    37 00001022 6A02E8D4FEFFFF6683- <1>         cdecl   vga_set_write_plane, 0x02
    37 0000102B C404                <1>
    38 0000102D 536A025756E8DFFEFF- <1>         cdecl   vram_font_copy, esi, edi, 0x02, ebx
    38 00001036 FF6683C410          <1>
    39                              <1> 
    40 0000103B 6A00E8A2FEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x00
    40 00001044 C404                <1>
    41 00001046 6A01E8B0FEFFFF6683- <1>         cdecl   vga_set_write_plane, 0x01
    41 0000104F C404                <1>
    42 00001051 536A015756E8BBFEFF- <1>         cdecl   vram_font_copy, esi, edi, 0x01, ebx
    42 0000105A FF6683C410          <1>
    43                              <1> 
    44                              <1> %ifdef  USE_TEST_AND_SET
    45 0000105F C705[74100000]0000- <1>         mov     [IN_USE], dword 0
    45 00001067 0000                <1>
    46                              <1> %endif
    47                              <1> 
    48 00001069 5F                  <1>         pop     edi
    49 0000106A 5E                  <1>         pop     esi
    50 0000106B 5A                  <1>         pop     edx
    51 0000106C 59                  <1>         pop     ecx
    52 0000106D 5B                  <1>         pop     ebx
    53 0000106E 58                  <1>         pop     eax
    54                              <1> 
    55 0000106F 89EC                <1>         mov     esp, ebp
    56 00001071 5D                  <1>         pop     ebp
    57                              <1> 
    58 00001072 C3                  <1>         ret
    59                              <1> 
    60                              <1> %ifdef USE_TEST_AND_SET
    61 00001073 00                  <1> ALIGN 4, db 0
    62 00001074 00000000            <1> IN_USE:	dd	0
    63                              <1> %endif
   127                                  %include    "../modules/protect/draw_font.s"
     1                              <1> draw_font:
     2                              <1> 
     3 00001078 55                  <1>         push    ebp
     4 00001079 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 0000107B 50                  <1>         push    eax
     7 0000107C 53                  <1>         push    ebx
     8 0000107D 51                  <1>         push    ecx
     9 0000107E 52                  <1>         push    edx
    10 0000107F 56                  <1>         push    esi
    11 00001080 57                  <1>         push    edi
    12                              <1> 
    13 00001081 8B7508              <1>         mov     esi, [ebp + 8]
    14 00001084 8B7D0C              <1>         mov     edi, [ebp + 12]
    15                              <1> 
    16 00001087 B900000000          <1>         mov     ecx, 0
    17 0000108C 81F900010000        <1> .10L:   cmp     ecx, 256
    18 00001092 731F                <1>         jae     .10E
    19                              <1> 
    20 00001094 89C8                <1>         mov     eax, ecx
    21 00001096 83E00F              <1>         and     eax, 0x0F
    22 00001099 01F0                <1>         add     eax, esi
    23                              <1> 
    24 0000109B 89CB                <1>         mov     ebx, ecx
    25 0000109D C1EB04              <1>         shr     ebx, 4
    26 000010A0 01FB                <1>         add     ebx, edi
    27                              <1> 
    28 000010A2 516A075350E8EBFEFF- <1>         cdecl   draw_char, eax, ebx, 0x07, ecx
    28 000010AB FF6683C410          <1>
    29                              <1> 
    30 000010B0 41                  <1>         inc     ecx
    31 000010B1 EBD9                <1>         jmp     .10L
    32                              <1> .10E:
    33                              <1> 
    34 000010B3 5F                  <1>         pop     edi
    35 000010B4 5E                  <1>         pop     esi
    36 000010B5 5A                  <1>         pop     edx
    37 000010B6 59                  <1>         pop     ecx
    38 000010B7 5B                  <1>         pop     ebx
    39 000010B8 58                  <1>         pop     eax
    40                              <1> 
    41 000010B9 89EC                <1>         mov     esp, ebp
    42 000010BB 5D                  <1>         pop     ebp
    43                              <1> 
    44 000010BC C3                  <1>         ret
   128                                  %include    "../modules/protect/draw_str.s"
     1                              <1> draw_str:
     2                              <1> 
     3 000010BD 55                  <1>         push    ebp
     4 000010BE 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 000010C0 50                  <1>         push    eax
     7 000010C1 53                  <1>         push    ebx
     8 000010C2 51                  <1>         push    ecx
     9 000010C3 52                  <1>         push    edx
    10 000010C4 56                  <1>         push    esi
    11                              <1> 
    12 000010C5 8B4D08              <1>         mov     ecx, [ebp + 8]
    13 000010C8 8B550C              <1>         mov     edx, [ebp + 12]
    14 000010CB 0FB75D10            <1>         movzx   ebx, word [ebp + 16]
    15 000010CF 8B7514              <1>         mov     esi, [ebp + 20]
    16                              <1> 
    17 000010D2 FC                  <1>         cld
    18                              <1> .10L:
    19                              <1> 
    20 000010D3 AC                  <1>         lodsb
    21 000010D4 3C00                <1>         cmp     al, 0
    22 000010D6 741A                <1>         je      .10E
    23                              <1> 
    24                              <1> %ifdef  USE_SYSTEM_CALL
    25 000010D8 CD81                <1>         int     0x81
    26                              <1> %else
    27                              <1>         cdecl   draw_char, ecx, edx, ebx, eax
    28                              <1> %endif
    29                              <1> 
    30 000010DA 41                  <1>         inc     ecx
    31 000010DB 83F950              <1>         cmp     ecx, 80
    32 000010DE 7C10                <1>         jl      .12E
    33 000010E0 B900000000          <1>         mov     ecx, 0
    34 000010E5 42                  <1>         inc     edx
    35 000010E6 83FA1E              <1>         cmp     edx, 30
    36 000010E9 7C05                <1>         jl      .12E
    37 000010EB BA00000000          <1>         mov     edx, 0
    38                              <1> 
    39                              <1> .12E:
    40 000010F0 EBE1                <1>         jmp     .10L
    41                              <1> .10E:
    42                              <1> 
    43 000010F2 5E                  <1>         pop     esi
    44 000010F3 5A                  <1>         pop     edx
    45 000010F4 59                  <1>         pop     ecx
    46 000010F5 5B                  <1>         pop     ebx
    47 000010F6 58                  <1>         pop     eax
    48                              <1> 
    49 000010F7 89EC                <1>         mov     esp, ebp
    50 000010F9 5D                  <1>         pop     ebp
    51                              <1> 
    52 000010FA C3                  <1>         ret
   129                                  %include    "../modules/protect/draw_color_bar.s"
     1                              <1> draw_color_bar:
     2                              <1> 
     3 000010FB 55                  <1>         push    ebp
     4 000010FC 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 000010FE 50                  <1>         push    eax
     7 000010FF 53                  <1>         push    ebx
     8 00001100 51                  <1>         push    ecx
     9 00001101 52                  <1>         push    edx
    10 00001102 56                  <1>         push    esi
    11 00001103 57                  <1>         push    edi
    12                              <1> 
    13 00001104 8B7508              <1>         mov     esi, [ebp + 8]
    14 00001107 8B7D0C              <1>         mov     edi, [ebp + 12]
    15                              <1> 
    16 0000110A B900000000          <1>         mov     ecx, 0
    17 0000110F 83F910              <1> .10L:   cmp     ecx, 16
    18 00001112 732E                <1>         jae     .10E
    19                              <1> 
    20 00001114 89C8                <1>         mov     eax, ecx
    21 00001116 83E001              <1>         and     eax, 0x01
    22 00001119 C1E003              <1>         shl     eax, 3
    23 0000111C 01F0                <1>         add     eax, esi
    24                              <1> 
    25 0000111E 89CB                <1>         mov     ebx, ecx
    26 00001120 D1EB                <1>         shr     ebx, 1
    27 00001122 01FB                <1>         add     ebx, edi
    28                              <1> 
    29 00001124 89CA                <1>         mov     edx, ecx
    30 00001126 D1E2                <1>         shl     edx, 1
    31 00001128 8B92[56110000]      <1>         mov     edx, [.t0 + edx]
    32                              <1> 
    33 0000112E 68[4C110000]525350- <1>         cdecl   draw_str, eax, ebx, edx, .s0
    33 00001136 E882FFFFFF6683C410  <1>
    34                              <1> 
    35 0000113F 41                  <1>         inc     ecx
    36 00001140 EBCD                <1>         jmp     .10L
    37                              <1> .10E:
    38                              <1> 
    39 00001142 5F                  <1>         pop     edi
    40 00001143 5E                  <1>         pop     esi
    41 00001144 5A                  <1>         pop     edx
    42 00001145 59                  <1>         pop     ecx
    43 00001146 5B                  <1>         pop     ebx
    44 00001147 58                  <1>         pop     eax
    45                              <1> 
    46 00001148 89EC                <1>         mov     esp, ebp
    47 0000114A 5D                  <1>         pop     ebp
    48                              <1> 
    49 0000114B C3                  <1>         ret
    50                              <1> 
    51 0000114C 202020202020202020- <1> .s0     db  '         ', 0
    51 00001155 00                  <1>
    52                              <1> 
    53 00001156 00000008            <1> .t0     dw  0x0000, 0x0800
    54 0000115A 00010009            <1> 		dw	0x0100, 0x0900
    55 0000115E 0002000A            <1> 		dw	0x0200, 0x0A00
    56 00001162 0003000B            <1> 		dw	0x0300, 0x0B00
    57 00001166 0004000C            <1> 		dw	0x0400, 0x0C00
    58 0000116A 0005000D            <1> 		dw	0x0500, 0x0D00
    59 0000116E 0006000E            <1> 		dw	0x0600, 0x0E00
    60 00001172 0007000F            <1> 		dw	0x0700, 0x0F00
   130                                  %include    "../modules/protect/draw_pixel.s"
     1                              <1> draw_pixel:
     2                              <1> 
     3 00001176 55                  <1>         push    ebp
     4 00001177 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00001179 50                  <1>         push    eax
     7 0000117A 53                  <1>         push    ebx
     8 0000117B 51                  <1>         push    ecx
     9 0000117C 57                  <1>         push    edi
    10                              <1> 
    11 0000117D 8B7D0C              <1>         mov     edi, [ebp + 12]
    12 00001180 C1E704              <1>         shl     edi, 4
    13 00001183 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA_0000]
    14                              <1> 
    15 0000118A 8B5D08              <1>         mov     ebx, [ebp + 8]
    16 0000118D 89D9                <1>         mov     ecx, ebx
    17 0000118F C1EB03              <1>         shr     ebx, 3
    18 00001192 01DF                <1>         add     edi, ebx
    19                              <1> 
    20 00001194 83E107              <1>         and     ecx, 0x07
    21 00001197 BB80000000          <1>         mov     ebx, 0x80
    22 0000119C D3EB                <1>         shr     ebx, cl
    23                              <1> 
    24 0000119E 8B4D10              <1>         mov     ecx, [ebp + 16]
    25                              <1> 
    26 000011A1 6A03E83CFDFFFF6683- <1>         cdecl   vga_set_read_plane, 0x03
    26 000011AA C404                <1>
    27 000011AC 6A08E84AFDFFFF6683- <1>         cdecl   vga_set_write_plane, 0x08
    27 000011B5 C404                <1>
    28 000011B7 516A085753E8A8FDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x08, ecx
    28 000011C0 FF6683C410          <1>
    29                              <1> 
    30 000011C5 6A02E818FDFFFF6683- <1>         cdecl   vga_set_read_plane, 0x02
    30 000011CE C404                <1>
    31 000011D0 6A04E826FDFFFF6683- <1>         cdecl   vga_set_write_plane, 0x04
    31 000011D9 C404                <1>
    32 000011DB 516A045753E884FDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x04, ecx
    32 000011E4 FF6683C410          <1>
    33                              <1> 
    34 000011E9 6A01E8F4FCFFFF6683- <1>         cdecl   vga_set_read_plane, 0x01
    34 000011F2 C404                <1>
    35 000011F4 6A02E802FDFFFF6683- <1>         cdecl   vga_set_write_plane, 0x02
    35 000011FD C404                <1>
    36 000011FF 516A025753E860FDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x02, ecx
    36 00001208 FF6683C410          <1>
    37                              <1> 
    38 0000120D 6A00E8D0FCFFFF6683- <1>         cdecl   vga_set_read_plane, 0x00
    38 00001216 C404                <1>
    39 00001218 6A01E8DEFCFFFF6683- <1>         cdecl   vga_set_write_plane, 0x01
    39 00001221 C404                <1>
    40 00001223 516A015753E83CFDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x01, ecx
    40 0000122C FF6683C410          <1>
    41                              <1> 
    42 00001231 5F                  <1>         pop     edi
    43 00001232 59                  <1>         pop     ecx
    44 00001233 5B                  <1>         pop     ebx
    45 00001234 58                  <1>         pop     eax
    46                              <1> 
    47 00001235 89EC                <1>         mov     esp, ebp
    48 00001237 5D                  <1>         pop     ebp
    49                              <1> 
    50 00001238 C3                  <1>         ret
   131                                  %include    "../modules/protect/draw_line.s"
     1                              <1> draw_line:
     2                              <1> 
     3 00001239 55                  <1>         push    ebp
     4 0000123A 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 0000123C 6A00                <1>         push    dword 0
     7 0000123E 6A00                <1>         push    dword 0
     8 00001240 6A00                <1>         push    dword 0
     9 00001242 6A00                <1>         push    dword 0
    10 00001244 6A00                <1>         push    dword 0
    11 00001246 6A00                <1>         push    dword 0
    12 00001248 6A00                <1>         push    dword 0
    13                              <1> 
    14 0000124A 50                  <1>         push    eax
    15 0000124B 53                  <1>         push    ebx
    16 0000124C 51                  <1>         push    ecx
    17 0000124D 52                  <1>         push    edx
    18 0000124E 56                  <1>         push    esi
    19 0000124F 57                  <1>         push    edi
    20                              <1> 
    21 00001250 8B4508              <1>         mov     eax, [ebp + 8]
    22 00001253 8B5D10              <1>         mov     ebx, [ebp + 16]
    23 00001256 29C3                <1>         sub     ebx, eax
    24 00001258 7D09                <1>         jge     .10F
    25                              <1> 
    26 0000125A F7DB                <1>         neg     ebx
    27 0000125C BEFFFFFFFF          <1>         mov     esi, -1
    28 00001261 EB05                <1>         jmp     .10E
    29                              <1> .10F:
    30                              <1> 
    31 00001263 BE01000000          <1>         mov     esi, 1
    32                              <1> .10E:
    33                              <1> 
    34 00001268 8B4D0C              <1>         mov     ecx, [ebp + 12]
    35 0000126B 8B5514              <1>         mov     edx, [ebp + 20]
    36 0000126E 29CA                <1>         sub     edx, ecx
    37 00001270 7D09                <1>         jge     .20F
    38                              <1> 
    39 00001272 F7DA                <1>         neg     edx
    40 00001274 BFFFFFFFFF          <1>         mov     edi, -1
    41 00001279 EB05                <1>         jmp     .20E
    42                              <1> .20F:
    43                              <1> 
    44 0000127B BF01000000          <1>         mov     edi, 1
    45                              <1> .20E:
    46                              <1> 
    47 00001280 8945F8              <1>         mov     [ebp - 8], eax
    48 00001283 895DF4              <1>         mov     [ebp - 12], ebx
    49 00001286 8975F0              <1>         mov     [ebp - 16], esi
    50                              <1> 
    51 00001289 894DEC              <1>         mov     [ebp - 20], ecx
    52 0000128C 8955E8              <1>         mov     [ebp - 24], edx
    53 0000128F 897DE4              <1>         mov     [ebp - 28], edi
    54                              <1> 
    55 00001292 39D3                <1>         cmp     ebx, edx
    56 00001294 7F08                <1>         jg      .22F
    57                              <1> 
    58 00001296 8D75EC              <1>         lea     esi, [ebp - 20]
    59 00001299 8D7DF8              <1>         lea     edi, [ebp - 8]
    60                              <1> 
    61 0000129C EB06                <1>         jmp     .22E
    62                              <1> .22F:
    63                              <1> 
    64 0000129E 8D75F8              <1>         lea     esi, [ebp - 8]
    65 000012A1 8D7DEC              <1>         lea     edi, [ebp - 20]
    66                              <1> .22E:
    67                              <1> 
    68 000012A4 8B4EFC              <1>         mov     ecx, [esi - 4]
    69 000012A7 83F900              <1>         cmp     ecx, 0
    70 000012AA 7505                <1>         jnz     .30E
    71 000012AC B901000000          <1>         mov     ecx, 1
    72                              <1> .30E:
    73                              <1> 
    74                              <1> .50L:
    75                              <1> 
    76                              <1> %ifdef  USE_SYSTEM_CALL
    77 000012B1 89C8                <1>         mov     eax, ecx
    78                              <1> 
    79 000012B3 8B5D18              <1>         mov     ebx, [ebp + 24]
    80 000012B6 8B4DF8              <1>         mov     ecx, [ebp - 8]
    81 000012B9 8B55EC              <1>         mov     edx, [ebp - 20]
    82 000012BC CD82                <1>         int     0x82
    83                              <1> 
    84 000012BE 89C1                <1>         mov     ecx, eax
    85                              <1> %else
    86                              <1>         cdecl   draw_pixel, dword [ebp - 8], dword [ebp - 20], dword [ebp + 24]
    87                              <1> %endif
    88                              <1> 
    89 000012C0 8B46F8              <1>         mov     eax, [esi - 8]
    90 000012C3 0106                <1>         add     [esi - 0], eax
    91                              <1> 
    92 000012C5 8B45FC              <1>         mov     eax, [ebp - 4]
    93 000012C8 0347FC              <1>         add     eax, [edi - 4]
    94 000012CB 8B5EFC              <1>         mov     ebx, [esi - 4]
    95                              <1> 
    96 000012CE 39D8                <1>         cmp     eax, ebx
    97 000012D0 7C07                <1>         jl      .52E
    98 000012D2 29D8                <1>         sub     eax, ebx
    99                              <1> 
   100 000012D4 8B5FF8              <1>         mov     ebx, [edi - 8]
   101 000012D7 011F                <1>         add     [edi - 0], ebx
   102                              <1> .52E:
   103                              <1> 
   104 000012D9 8945FC              <1>         mov     [ebp - 4], eax
   105                              <1> 
   106 000012DC E2D3                <1>         loop    .50L
   107                              <1> .50E:
   108                              <1> 
   109 000012DE 5F                  <1>         pop     edi
   110 000012DF 5E                  <1>         pop     esi
   111 000012E0 5A                  <1>         pop     edx
   112 000012E1 59                  <1>         pop     ecx
   113 000012E2 5B                  <1>         pop     ebx
   114 000012E3 58                  <1>         pop     eax
   115                              <1> 
   116 000012E4 89EC                <1>         mov     esp, ebp
   117 000012E6 5D                  <1>         pop     ebp
   118                              <1> 
   119 000012E7 C3                  <1>         ret
   132                                  %include    "../modules/protect/draw_rect.s"
     1                              <1> draw_rect:
     2                              <1> 
     3 000012E8 55                  <1>         push    ebp
     4 000012E9 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 000012EB 50                  <1>         push    eax
     7 000012EC 53                  <1>         push    ebx
     8 000012ED 51                  <1>         push    ecx
     9 000012EE 52                  <1>         push    edx
    10 000012EF 56                  <1>         push    esi
    11                              <1> 
    12 000012F0 8B4508              <1>         mov     eax, [ebp + 8]
    13 000012F3 8B5D0C              <1>         mov     ebx, [ebp + 12]
    14 000012F6 8B4D10              <1>         mov     ecx, [ebp + 16]
    15 000012F9 8B5514              <1>         mov     edx, [ebp + 20]
    16 000012FC 8B7518              <1>         mov     esi, [ebp + 24]
    17                              <1> 
    18 000012FF 39C8                <1>         cmp     eax, ecx
    19 00001301 7C01                <1>         jl      .10E
    20 00001303 91                  <1>         xchg    eax, ecx
    21                              <1> .10E:
    22                              <1> 
    23 00001304 39D3                <1>         cmp     ebx, edx
    24 00001306 7C02                <1>         jl      .20E
    25 00001308 87DA                <1>         xchg    ebx, edx
    26                              <1> .20E:
    27                              <1> 
    28 0000130A 5653515350E825FFFF- <1>         cdecl   draw_line, eax, ebx, ecx, ebx, esi
    28 00001313 FF6683C414          <1>
    29 00001318 5652505350E817FFFF- <1>         cdecl   draw_line, eax, ebx, eax, edx, esi
    29 00001321 FF6683C414          <1>
    30                              <1> 
    31 00001326 4A                  <1>         dec     edx
    32 00001327 5652515250E808FFFF- <1>         cdecl   draw_line, eax, edx, ecx, edx, esi
    32 00001330 FF6683C414          <1>
    33 00001335 42                  <1>         inc     edx
    34                              <1> 
    35 00001336 4A                  <1>         dec     edx
    36 00001337 5652515351E8F8FEFF- <1>         cdecl   draw_line, ecx, ebx, ecx, edx, esi
    36 00001340 FF6683C414          <1>
    37                              <1> 
    38 00001345 5E                  <1>         pop     esi
    39 00001346 5A                  <1>         pop     edx
    40 00001347 59                  <1>         pop     ecx
    41 00001348 5B                  <1>         pop     ebx
    42 00001349 58                  <1>         pop     eax
    43                              <1> 
    44 0000134A 89EC                <1>         mov     esp, ebp
    45 0000134C 5D                  <1>         pop     ebp
    46                              <1> 
    47 0000134D C3                  <1>         ret
   133                                  %include    "../modules/protect/itoa.s"
     1                              <1> itoa:
     2                              <1> 
     3 0000134E 55                  <1>         push    ebp
     4 0000134F 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00001351 50                  <1>         push    eax
     7 00001352 53                  <1>         push    ebx
     8 00001353 51                  <1>         push    ecx
     9 00001354 52                  <1>         push    edx
    10 00001355 56                  <1>         push    esi
    11 00001356 57                  <1>         push    edi
    12                              <1> 
    13 00001357 8B4508              <1>         mov     eax, [ebp + 8]
    14 0000135A 8B750C              <1>         mov     esi, [ebp + 12]
    15 0000135D 8B4D10              <1>         mov     ecx, [ebp + 16]
    16                              <1> 
    17 00001360 89F7                <1>         mov     edi, esi
    18 00001362 01CF                <1>         add     edi, ecx
    19 00001364 4F                  <1>         dec     edi
    20                              <1> 
    21 00001365 8B5D18              <1>         mov     ebx, [ebp + 24]
    22                              <1> 
    23 00001368 F7C301000000        <1>         test    ebx, 0b0001
    24 0000136E 7408                <1> .10Q:   je      .10E
    25 00001370 83F800              <1>         cmp     eax, 0
    26 00001373 7D03                <1> .12Q:   jge     .12E
    27 00001375 83CB02              <1>         or      ebx, 0b0010
    28                              <1> .12E:
    29                              <1> .10E:
    30                              <1> 
    31 00001378 F7C302000000        <1>         test    ebx, 0b0010
    32 0000137E 7410                <1> .20Q:   je      .20E
    33 00001380 83F800              <1>         cmp     eax, 0
    34 00001383 7D07                <1> .22Q:   jge     .22F
    35 00001385 F7D8                <1>         neg     eax
    36 00001387 C6062D              <1>         mov     [esi], byte '-'
    37 0000138A EB03                <1>         jmp     .22E
    38                              <1> .22F:
    39                              <1> 
    40 0000138C C6062B              <1>         mov     [esi], byte '+'
    41                              <1> .22E:
    42 0000138F 49                  <1>         dec     ecx
    43                              <1> .20E:
    44                              <1> 
    45 00001390 8B5D14              <1>         mov     ebx, [ebp + 20]
    46                              <1> .30L:
    47                              <1> 
    48 00001393 BA00000000          <1>         mov     edx, 0
    49 00001398 F7F3                <1>         div     ebx
    50                              <1> 
    51 0000139A 89D6                <1>         mov     esi, edx
    52 0000139C 8A96[C8130000]      <1>         mov     dl, byte [.ascii + esi]
    53                              <1> 
    54 000013A2 8817                <1>         mov     [edi], dl
    55 000013A4 4F                  <1>         dec     edi
    56                              <1> 
    57 000013A5 83F800              <1>         cmp     eax, 0
    58 000013A8 E0E9                <1>         loopnz  .30L
    59                              <1> .30E:
    60                              <1> 
    61 000013AA 83F900              <1>         cmp     ecx, 0
    62 000013AD 740F                <1> .40Q:   je      .40E
    63 000013AF B020                <1>         mov     al, ' '
    64 000013B1 6667837E1804        <1>         cmp     [bp + 24], word 0b0100
    65 000013B7 7502                <1> .42Q:   jne     .42E
    66 000013B9 B030                <1>         mov     al, '0'
    67                              <1> .42E:
    68 000013BB FD                  <1>         std
    69 000013BC F3AA                <1>         rep stosb
    70                              <1> .40E:
    71                              <1> 
    72 000013BE 5F                  <1>         pop     edi
    73 000013BF 5E                  <1>         pop     esi
    74 000013C0 5A                  <1>         pop     edx
    75 000013C1 59                  <1>         pop     ecx
    76 000013C2 5B                  <1>         pop     ebx
    77 000013C3 58                  <1>         pop     eax
    78                              <1> 
    79 000013C4 89EC                <1>         mov     esp, ebp
    80 000013C6 5D                  <1>         pop     ebp
    81                              <1> 
    82 000013C7 C3                  <1>         ret
    83                              <1> 
    84 000013C8 303132333435363738- <1> .ascii  db      "0123456789ABCDEF"
    84 000013D1 39414243444546      <1>
   134                                  %include    "../modules/protect/rtc.s"
     1                              <1> rtc_get_time:
     2                              <1> 
     3 000013D8 55                  <1>         push    ebp
     4 000013D9 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 000013DB 53                  <1>         push    ebx
     7                              <1> 
     8 000013DC B00A                <1>         mov     al, 0x0A
     9 000013DE E670                <1>         out     0x70, al
    10 000013E0 E471                <1>         in      al, 0x71
    11 000013E2 A880                <1>         test    al, 0x80
    12 000013E4 7407                <1>         je      .10F
    13 000013E6 B801000000          <1>         mov     eax, 1
    14 000013EB EB27                <1>         jmp     .10E
    15                              <1> .10F:
    16                              <1> 
    17 000013ED B004                <1>         mov     al, 0x04
    18 000013EF E670                <1>         out     0x70, al
    19 000013F1 E471                <1>         in      al, 0x71
    20                              <1> 
    21 000013F3 C1E008              <1>         shl     eax, 8
    22                              <1> 
    23 000013F6 B002                <1>         mov     al, 0x02
    24 000013F8 E670                <1>         out     0x70, al
    25 000013FA E471                <1>         in      al, 0x71
    26                              <1> 
    27 000013FC C1E008              <1>         shl     eax, 8
    28                              <1> 
    29 000013FF B000                <1>         mov     al, 0x00
    30 00001401 E670                <1>         out     0x70, al
    31 00001403 E471                <1>         in      al, 0x71
    32                              <1> 
    33 00001405 25FFFFFF00          <1>         and     eax, 0x00_FF_FF_FF
    34                              <1> 
    35 0000140A 8B5D08              <1>         mov     ebx, [ebp + 8]
    36 0000140D 8903                <1>         mov     [ebx], eax
    37                              <1> 
    38 0000140F B800000000          <1>         mov     eax, 0
    39                              <1> .10E:
    40                              <1> 
    41 00001414 5B                  <1>         pop     ebx
    42                              <1> 
    43 00001415 89EC                <1>         mov     esp, ebp
    44 00001417 5D                  <1>         pop     ebp
    45                              <1> 
    46 00001418 C3                  <1>         ret
   135                                  %include    "../modules/protect/draw_time.s"
     1                              <1> draw_time:
     2                              <1> 
     3 00001419 55                  <1>         push    ebp
     4 0000141A 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 0000141C 50                  <1>         push    eax
     7 0000141D 53                  <1>         push    ebx
     8                              <1> 
     9 0000141E 8B4514              <1>         mov     eax, [ebp + 20]
    10 00001421 3B05[A0140000]      <1>         cmp     eax, [.last]
    11 00001427 7468                <1>         je      .10E
    12                              <1> 
    13 00001429 A3[A0140000]        <1>         mov     [.last], eax
    14                              <1> 
    15 0000142E BB00000000          <1>         mov     ebx, 0
    16 00001433 0FB6D8              <1>         movzx   ebx, al
    17 00001436 6A046A106A0268-     <1>         cdecl   itoa, ebx, .sec, 2, 16, 0b0100
    17 0000143D [AE140000]53E807FF- <1>
    17 00001445 FFFF6683C414        <1>
    18                              <1> 
    19 0000144B 88E3                <1>         mov     bl, ah
    20 0000144D 6A046A106A0268-     <1>         cdecl   itoa, ebx, .min, 2, 16, 0b0100
    20 00001454 [AB140000]53E8F0FE- <1>
    20 0000145C FFFF6683C414        <1>
    21                              <1> 
    22 00001462 C1E810              <1>         shr     eax, 16
    23 00001465 6A046A106A0268-     <1>         cdecl   itoa, eax, .hour, 2, 16, 0b0100
    23 0000146C [A8140000]50E8D8FE- <1>
    23 00001474 FFFF6683C414        <1>
    24                              <1> 
    25 0000147A 68[A8140000]FF7510- <1>         cdecl   draw_str, dword [ebp + 8], dword [ebp + 12], dword [ebp + 16], .hour
    25 00001482 FF750CFF7508E830FC- <1>
    25 0000148B FFFF6683C410        <1>
    26                              <1> 
    27                              <1> .10E:
    28                              <1> 
    29 00001491 5B                  <1>         pop     ebx
    30 00001492 58                  <1>         pop     eax
    31                              <1> 
    32 00001493 89EC                <1>         mov     esp, ebp
    33 00001495 5D                  <1>         pop     ebp
    34                              <1> 
    35 00001496 C3                  <1>         ret
    36                              <1> 
    37 00001497 00                  <1> ALIGN 2, db 0
    38 00001498 0000000000000000    <1> .temp   dq  0
    39 000014A0 0000000000000000    <1> .last   dq  0
    40 000014A8 5A5A3A              <1> .hour   db  "ZZ:"
    41 000014AB 5A5A3A              <1> .min    db  "ZZ:"
    42 000014AE 5A5A00              <1> .sec    db  "ZZ", 0
   136                                  %include    "../modules/protect/interrupt.s"
     1 000014B1 90<rept>            <1> ALIGN 4
     2 000014B4 FF07                <1> IDTR:   dw      8 * 256 -1
     3 000014B6 00001000            <1>         dd      VECT_BASE
     4                              <1> 
     5                              <1> init_int:
     6                              <1> 
     7 000014BA 50                  <1>         push    eax
     8 000014BB 53                  <1>         push    ebx
     9 000014BC 51                  <1>         push    ecx
    10 000014BD 57                  <1>         push    edi
    11                              <1> 
    12 000014BE 8D05[04160000]      <1>         lea     eax, [int_default]
    13 000014C4 BB008E0800          <1>         mov     ebx, 0x0008_8E00
    14 000014C9 6693                <1>         xchg    ax, bx
    15                              <1> 
    16 000014CB B900010000          <1>         mov     ecx, 256
    17 000014D0 BF00001000          <1>         mov     edi, VECT_BASE
    18                              <1> 
    19                              <1> .10L:
    20                              <1> 
    21 000014D5 891F                <1>         mov     [edi + 0], ebx
    22 000014D7 894704              <1>         mov     [edi + 4], eax
    23 000014DA 83C708              <1>         add     edi, 8
    24 000014DD E2F6                <1>         loop    .10L
    25                              <1> 
    26 000014DF 0F011D[B4140000]    <1>         lidt    [IDTR]
    27                              <1> 
    28 000014E6 5F                  <1>         pop     edi
    29 000014E7 59                  <1>         pop     ecx
    30 000014E8 5B                  <1>         pop     ebx
    31 000014E9 58                  <1>         pop     eax
    32                              <1> 
    33 000014EA C3                  <1>         ret
    34                              <1> 
    35                              <1> 
    36                              <1> int_stop:
    37                              <1> 
    38 000014EB FB                  <1>         sti
    39                              <1> 
    40 000014EC 50680F0600006A0F6A- <1>         cdecl   draw_str, 25, 15, 0x060F, eax
    40 000014F5 19E8C2FBFFFF6683C4- <1>
    40 000014FE 10                  <1>
    41                              <1> 
    42 000014FF 8B0424              <1>         mov     eax, [esp + 0]
    43 00001502 6A046A106A0868-     <1>         cdecl   itoa, eax, .p1, 8, 16, 0b0100
    43 00001509 [C7150000]50E83BFE- <1>
    43 00001511 FFFF6683C414        <1>
    44                              <1> 
    45 00001517 8B442404            <1>         mov     eax, [esp + 4]
    46 0000151B 6A046A106A0868-     <1>         cdecl   itoa, eax, .p2, 8, 16, 0b0100
    46 00001522 [D8150000]50E822FE- <1>
    46 0000152A FFFF6683C414        <1>
    47                              <1> 
    48 00001530 8B442408            <1>         mov     eax, [esp + 8]
    49 00001534 6A046A106A0868-     <1>         cdecl   itoa, eax, .p3, 8, 16, 0b0100
    49 0000153B [E9150000]50E809FE- <1>
    49 00001543 FFFF6683C414        <1>
    50                              <1> 
    51 00001549 8B44240C            <1>         mov     eax, [esp + 12]
    52 0000154D 6A046A106A0868-     <1>         cdecl   itoa, eax, .p4, 8, 16, 0b0100
    52 00001554 [FA150000]50E8F0FD- <1>
    52 0000155C FFFF6683C414        <1>
    53                              <1> 
    54 00001562 68[C0150000]68040F- <1>         cdecl   draw_str, 25, 16, 0x0F04, .s1
    54 0000156A 00006A106A19E848FB- <1>
    54 00001573 FFFF6683C410        <1>
    55 00001579 68[D1150000]68040F- <1>         cdecl   draw_str, 25, 17, 0x0F04, .s2
    55 00001581 00006A116A19E831FB- <1>
    55 0000158A FFFF6683C410        <1>
    56 00001590 68[E2150000]68040F- <1>         cdecl   draw_str, 25, 18, 0x0F04, .s3
    56 00001598 00006A126A19E81AFB- <1>
    56 000015A1 FFFF6683C410        <1>
    57 000015A7 68[F3150000]68040F- <1>         cdecl   draw_str, 25, 19, 0x0F04, .s4
    57 000015AF 00006A136A19E803FB- <1>
    57 000015B8 FFFF6683C410        <1>
    58                              <1> 
    59 000015BE EBFE                <1>         jmp     $
    60                              <1> 
    61 000015C0 4553502B20303A      <1> .s1		db	"ESP+ 0:"
    62 000015C7 5F5F5F5F5F5F5F5F20- <1> .p1		db	"________ ", 0
    62 000015D0 00                  <1>
    63 000015D1 2020202B20343A      <1> .s2		db	"   + 4:"
    64 000015D8 5F5F5F5F5F5F5F5F20- <1> .p2		db	"________ ", 0
    64 000015E1 00                  <1>
    65 000015E2 2020202B20383A      <1> .s3		db	"   + 8:"
    66 000015E9 5F5F5F5F5F5F5F5F20- <1> .p3		db	"________ ", 0
    66 000015F2 00                  <1>
    67 000015F3 2020202B31323A      <1> .s4		db	"   +12:"
    68 000015FA 5F5F5F5F5F5F5F5F20- <1> .p4		db	"________ ", 0
    68 00001603 00                  <1>
    69                              <1> 
    70                              <1> 
    71                              <1> int_default:
    72                              <1> 
    73 00001604 9C                  <1>         pushf
    74 00001605 0E                  <1>         push    cs
    75 00001606 68[EB140000]        <1>         push    int_stop
    76                              <1> 
    77 0000160B B8[11160000]        <1>         mov     eax, .s0
    78 00001610 CF                  <1>         iret
    79                              <1> 
    80 00001611 203C2020202053544F- <1> .s0     db  " <    STOP    > ", 0
    80 0000161A 50202020203E2000    <1>
    81                              <1> 
    82                              <1> 
    83                              <1> int_zero_div:
    84                              <1> 
    85 00001622 9C                  <1>         pushf
    86 00001623 0E                  <1>         push    cs
    87 00001624 68[EB140000]        <1>         push    int_stop
    88                              <1> 
    89 00001629 B8[2F160000]        <1>         mov     eax, .s0
    90 0000162E CF                  <1>         iret
    91                              <1> 
    92 0000162F 203C20205A45524F20- <1> .s0     db  " <  ZERO DIV  > ", 0
    92 00001638 44495620203E2000    <1>
   137                                  %include    "../modules/protect/pic.s"
     1                              <1> init_pic:
     2                              <1> 
     3 00001640 50                  <1>         push    eax
     4                              <1> 
     5                              <1>         outp    0x20, 0x11
     5 00001641 B011                <2>  mov al, %2
     5 00001643 E620                <2>  out %1, al
     6                              <1>         outp    0x21, 0x20
     6 00001645 B020                <2>  mov al, %2
     6 00001647 E621                <2>  out %1, al
     7                              <1>         outp    0x21, 0x04
     7 00001649 B004                <2>  mov al, %2
     7 0000164B E621                <2>  out %1, al
     8                              <1>         outp    0x21, 0x05
     8 0000164D B005                <2>  mov al, %2
     8 0000164F E621                <2>  out %1, al
     9                              <1>         outp    0x21, 0xFF
     9 00001651 B0FF                <2>  mov al, %2
     9 00001653 E621                <2>  out %1, al
    10                              <1> 
    11                              <1>         outp    0xA0, 0x11
    11 00001655 B011                <2>  mov al, %2
    11 00001657 E6A0                <2>  out %1, al
    12                              <1>         outp    0xA1, 0x28
    12 00001659 B028                <2>  mov al, %2
    12 0000165B E6A1                <2>  out %1, al
    13                              <1>         outp    0xA1, 0x02
    13 0000165D B002                <2>  mov al, %2
    13 0000165F E6A1                <2>  out %1, al
    14                              <1>         outp    0xA1, 0x01
    14 00001661 B001                <2>  mov al, %2
    14 00001663 E6A1                <2>  out %1, al
    15                              <1>         outp    0xA1, 0xFF
    15 00001665 B0FF                <2>  mov al, %2
    15 00001667 E6A1                <2>  out %1, al
    16                              <1> 
    17 00001669 58                  <1>         pop     eax
    18                              <1> 
    19 0000166A C3                  <1>         ret
   138                                  %include    "../modules/protect/int_rtc.s"
     1                              <1> rtc_int_en:
     2                              <1> 
     3 0000166B 55                  <1>         push    ebp
     4 0000166C 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 0000166E 50                  <1>         push    eax
     7                              <1> 
     8                              <1>         outp    0x70, 0x0B
     8 0000166F B00B                <2>  mov al, %2
     8 00001671 E670                <2>  out %1, al
     9                              <1> 
    10 00001673 E471                <1>         in      al, 0x71
    11 00001675 0A4508              <1>         or      al, [ebp + 8]
    12                              <1> 
    13 00001678 E671                <1>         out     0x71, al
    14                              <1> 
    15 0000167A 58                  <1>         pop     eax
    16                              <1> 
    17 0000167B 89EC                <1>         mov     esp, ebp
    18 0000167D 5D                  <1>         pop     ebp
    19                              <1> 
    20 0000167E C3                  <1>         ret
    21                              <1> 
    22                              <1> 
    23                              <1> int_rtc:
    24                              <1> 
    25 0000167F 60                  <1>         pusha
    26 00001680 1E                  <1>         push    ds
    27 00001681 06                  <1>         push    es
    28                              <1> 
    29 00001682 66B81000            <1>         mov     ax, 0x0010
    30 00001686 8ED8                <1>         mov     ds, ax
    31 00001688 8EC0                <1>         mov     es, ax
    32                              <1> 
    33 0000168A 68[FC020000]E844FD- <1>         cdecl   rtc_get_time, RTC_TIME
    33 00001692 FFFF6683C404        <1>
    34                              <1> 
    35                              <1>         outp    0x70, 0x0C
    35 00001698 B00C                <2>  mov al, %2
    35 0000169A E670                <2>  out %1, al
    36 0000169C E471                <1>         in      al, 0x71
    37                              <1> 
    38                              <1>         outp    0xA0, 0x20
    38 0000169E B020                <2>  mov al, %2
    38 000016A0 E6A0                <2>  out %1, al
    39                              <1>         outp    0x20, 0x20
    39 000016A2 B020                <2>  mov al, %2
    39 000016A4 E620                <2>  out %1, al
    40                              <1> 
    41 000016A6 07                  <1>         pop     es
    42 000016A7 1F                  <1>         pop     ds
    43 000016A8 61                  <1>         popa
    44                              <1> 
    45 000016A9 CF                  <1>         iret
   139                                  %include    "../modules/protect/int_keyboard.s"
     1                              <1> int_keyboard:
     2                              <1> 
     3 000016AA 60                  <1>         pusha
     4 000016AB 1E                  <1>         push    ds
     5 000016AC 06                  <1>         push    es
     6                              <1> 
     7 000016AD 66B81000            <1>         mov     ax, 0x0010
     8 000016B1 8ED8                <1>         mov     ds, ax
     9 000016B3 8EC0                <1>         mov     es, ax
    10                              <1> 
    11 000016B5 E460                <1>         in      al, 0x60
    12                              <1> 
    13 000016B7 5068[D0160000]E856- <1>         cdecl   ring_wr, _KEY_BUFF, eax
    13 000016BF 0000006683C408      <1>
    14                              <1> 
    15                              <1>         outp    0x20, 0x20
    15 000016C6 B020                <2>  mov al, %2
    15 000016C8 E620                <2>  out %1, al
    16                              <1> 
    17 000016CA 07                  <1>         pop     es
    18 000016CB 1F                  <1>         pop     ds
    19 000016CC 61                  <1>         popa
    20                              <1> 
    21 000016CD CF                  <1>         iret
    22                              <1> 
    23 000016CE 00<rept>            <1> ALIGN 4, db 0
    24 000016D0 00<rept>            <1> _KEY_BUFF:  times ring_buff_size db 0
   140                                  %include    "../modules/protect/ring_buff.s"
     1                              <1> ring_rd:
     2                              <1> 
     3 000016E8 55                  <1>         push    ebp
     4 000016E9 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 000016EB 53                  <1>         push    ebx
     7 000016EC 56                  <1>         push    esi
     8 000016ED 57                  <1>         push    edi
     9                              <1> 
    10 000016EE 8B7508              <1>         mov     esi, [ebp + 8]
    11 000016F1 8B7D0C              <1>         mov     edi, [ebp + 12]
    12                              <1> 
    13 000016F4 B800000000          <1>         mov     eax, 0
    14 000016F9 8B1E                <1>         mov     ebx, [esi + ring_buff.rp]
    15 000016FB 3B5E04              <1>         cmp     ebx, [esi + ring_buff.wp]
    16 000016FE 7411                <1>         je      .10E
    17                              <1> 
    18 00001700 8A441E08            <1>         mov     al, [esi + ring_buff.item + ebx]
    19                              <1> 
    20 00001704 8807                <1>         mov     [edi], al
    21                              <1> 
    22 00001706 43                  <1>         inc     ebx
    23 00001707 83E30F              <1>         and     ebx, RING_INDEX_MASK
    24 0000170A 891E                <1>         mov     [esi + ring_buff.rp], ebx
    25                              <1> 
    26 0000170C B801000000          <1>         mov     eax, 1
    27                              <1> .10E:
    28                              <1> 
    29 00001711 5F                  <1>         pop     edi
    30 00001712 5E                  <1>         pop     esi
    31 00001713 5B                  <1>         pop     ebx
    32                              <1> 
    33 00001714 89EC                <1>         mov     esp, ebp
    34 00001716 5D                  <1>         pop     ebp
    35                              <1> 
    36 00001717 C3                  <1>         ret
    37                              <1> 
    38                              <1> 
    39                              <1> ring_wr:
    40                              <1> 
    41 00001718 55                  <1>         push    ebp
    42 00001719 89E5                <1>         mov     ebp, esp
    43                              <1> 
    44 0000171B 53                  <1>         push    ebx
    45 0000171C 51                  <1>         push    ecx
    46 0000171D 56                  <1>         push    esi
    47                              <1> 
    48 0000171E 8B7508              <1>         mov     esi, [ebp + 8]
    49                              <1> 
    50 00001721 B800000000          <1>         mov     eax, 0
    51 00001726 8B5E04              <1>         mov     ebx, [esi + ring_buff.wp]
    52 00001729 89D9                <1>         mov     ecx, ebx
    53 0000172B 41                  <1>         inc     ecx
    54 0000172C 83E10F              <1>         and     ecx, RING_INDEX_MASK
    55                              <1> 
    56 0000172F 3B0E                <1>         cmp     ecx, [esi + ring_buff.rp]
    57 00001731 740F                <1>         je      .10E
    58                              <1> 
    59 00001733 8A450C              <1>         mov     al, [ebp + 12]
    60                              <1> 
    61 00001736 88441E08            <1>         mov     [esi + ring_buff.item + ebx], al
    62 0000173A 894E04              <1>         mov     [esi + ring_buff.wp], ecx
    63 0000173D B801000000          <1>         mov     eax, 1
    64                              <1> .10E:
    65                              <1> 
    66 00001742 5E                  <1>         pop     esi
    67 00001743 59                  <1>         pop     ecx
    68 00001744 5B                  <1>         pop     ebx
    69                              <1> 
    70 00001745 89EC                <1>         mov     esp, ebp
    71 00001747 5D                  <1>         pop     ebp
    72                              <1> 
    73 00001748 C3                  <1>         ret
    74                              <1> 
    75                              <1> 
    76                              <1> draw_key:
    77                              <1> 
    78 00001749 55                  <1>         push    ebp
    79 0000174A 89E5                <1>         mov     ebp, esp
    80                              <1> 
    81 0000174C 60                  <1>         pusha
    82                              <1> 
    83 0000174D 8B5508              <1>         mov     edx, [ebp + 8]
    84 00001750 8B7D0C              <1>         mov     edi, [ebp + 12]
    85 00001753 8B7510              <1>         mov     esi, [ebp + 16]
    86                              <1> 
    87 00001756 8B1E                <1>         mov     ebx, [esi + ring_buff.rp]
    88 00001758 8D7608              <1>         lea     esi, [esi + ring_buff.item]
    89 0000175B B910000000          <1>         mov     ecx, RING_ITEM_SIZE
    90                              <1> 
    91                              <1> .10L:
    92                              <1> 
    93 00001760 4B                  <1>         dec     ebx
    94 00001761 83E30F              <1>         and     ebx, RING_INDEX_MASK
    95 00001764 8A041E              <1>         mov     al, [esi + ebx]
    96                              <1> 
    97 00001767 6A046A106A0268-     <1>         cdecl   itoa, eax, .tmp, 2, 16, 0b0100
    97 0000176E [98170000]50E8D6FB- <1>
    97 00001776 FFFF6683C414        <1>
    98 0000177C 68[98170000]6A0257- <1>         cdecl   draw_str, edx, edi, 0x02, .tmp
    98 00001784 52E833F9FFFF6683C4- <1>
    98 0000178D 10                  <1>
    99                              <1> 
   100 0000178E 83C203              <1>         add     edx, 3
   101                              <1> 
   102 00001791 E2CD                <1>         loop    .10L
   103                              <1> .10E:
   104                              <1> 
   105 00001793 61                  <1>         popa
   106                              <1> 
   107 00001794 89EC                <1>         mov     esp, ebp
   108 00001796 5D                  <1>         pop     ebp
   109                              <1> 
   110 00001797 C3                  <1>         ret
   111                              <1> 
   112 00001798 2D2D2000            <1> .tmp    db "-- ", 0
   141                                  %include    "../modules/protect/timer.s"
     1                              <1> int_en_timer0:
     2                              <1> 
     3 0000179C 50                  <1>         push    eax
     4                              <1> 
     5                              <1>         outp    0x43, 0b_00_11_010_0
     5 0000179D B034                <2>  mov al, %2
     5 0000179F E643                <2>  out %1, al
     6                              <1>         outp    0x40, 0x9C
     6 000017A1 B09C                <2>  mov al, %2
     6 000017A3 E640                <2>  out %1, al
     7                              <1>         outp    0x40, 0x2E
     7 000017A5 B02E                <2>  mov al, %2
     7 000017A7 E640                <2>  out %1, al
     8                              <1> 
     9 000017A9 58                  <1>         pop     eax
    10                              <1> 
    11 000017AA C3                  <1>         ret
   142                                  %include    "../modules/protect/draw_rotation_bar.s"
     1                              <1> draw_rotation_bar:
     2                              <1> 
     3 000017AB 50                  <1>         push    eax
     4                              <1> 
     5 000017AC A1[AC0A0000]        <1>         mov     eax, [TIMER_COUNT]
     6 000017B1 C1E804              <1>         shr     eax, 4
     7 000017B4 3B05[DC170000]      <1>         cmp     eax, [.index]
     8 000017BA 741E                <1>         je      .10E
     9                              <1> 
    10 000017BC A3[DC170000]        <1>         mov     [.index], eax
    11 000017C1 83E003              <1>         and     eax, 0x03
    12                              <1> 
    13 000017C4 8A80[E0170000]      <1>         mov     al, [.table + eax]
    14 000017CA 506A0F6A1D6A00E8C1- <1>         cdecl   draw_char, 0, 29, 0x000F, eax
    14 000017D3 F7FFFF6683C410      <1>
    15                              <1> 
    16                              <1> .10E:
    17                              <1> 
    18 000017DA 58                  <1>         pop     eax
    19                              <1> 
    20 000017DB C3                  <1>         ret
    21                              <1> 
    22                              <1> ALIGN 4, db 0
    23 000017DC 00000000            <1> .index      dd 0
    24 000017E0 7C2F2D5C            <1> .table      db "|/-\"
   143                                  %include    "../modules/protect/call_gate.s"
     1                              <1> call_gate:
     2                              <1> 
     3 000017E4 55                  <1>         push    ebp
     4 000017E5 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 000017E7 60                  <1>         pusha
     7 000017E8 1E                  <1>         push    ds
     8 000017E9 06                  <1>         push    es
     9                              <1> 
    10 000017EA 66B81000            <1>         mov     ax, 0x0010
    11 000017EE 8ED8                <1>         mov     ds, ax
    12 000017F0 8EC0                <1>         mov     es, ax
    13                              <1> 
    14 000017F2 8B450C              <1>         mov     eax, dword [ebp + 12]
    15 000017F5 8B5D10              <1>         mov     ebx, dword [ebp + 16]
    16 000017F8 8B4D14              <1>         mov     ecx, dword [ebp + 20]
    17 000017FB 8B5518              <1>         mov     edx, dword [ebp + 24]
    18 000017FE 52515350E8B6F8FFFF- <1>         cdecl   draw_str, eax, ebx, ecx, edx
    18 00001807 6683C410            <1>
    19                              <1> 
    20 0000180B 07                  <1>         pop     es
    21 0000180C 1F                  <1>         pop     ds
    22 0000180D 61                  <1>         popa
    23                              <1> 
    24 0000180E 89EC                <1>         mov     esp, ebp
    25 00001810 5D                  <1>         pop     ebp
    26                              <1> 
    27 00001811 CA1000              <1>         retf    4 * 4
   144                                  %include    "../modules/protect/trap_gate.s"
     1                              <1> trap_gate_81:
     2                              <1> 
     3 00001814 50535251E87AF7FFFF- <1>         cdecl   draw_char, ecx, edx, ebx, eax
     3 0000181D 6683C410            <1>
     4                              <1> 
     5 00001821 CF                  <1>         iret
     6                              <1> 
     7                              <1> 
     8                              <1> trap_gate_82:
     9                              <1> 
    10 00001822 535251E84CF9FFFF66- <1>         cdecl   draw_pixel, ecx, edx, ebx
    10 0000182B 83C40C              <1>
    11                              <1> 
    12 0000182E CF                  <1>         iret
   145                                  %include    "../modules/protect/test_and_set.s"
     1                              <1> test_and_set:
     2                              <1> 
     3 0000182F 55                  <1>         push    ebp
     4 00001830 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00001832 50                  <1>         push    eax
     7 00001833 53                  <1>         push    ebx
     8                              <1> 
     9 00001834 B800000000          <1>         mov     eax, 0
    10 00001839 8B5D08              <1>         mov     ebx, [ebp + 8]
    11                              <1> .10L:
    12                              <1> 
    13 0000183C F00FAB03            <1>         lock bts [ebx], eax
    14 00001840 7307                <1>         jnc     .10E
    15                              <1> .12L:
    16                              <1> 
    17 00001842 0FA303              <1>         bt      [ebx], eax
    18 00001845 72FB                <1>         jc      .12L
    19                              <1> 
    20 00001847 EBF3                <1>         jmp     .10L
    21                              <1> .10E:
    22                              <1> 
    23 00001849 5B                  <1>         pop     ebx
    24 0000184A 58                  <1>         pop     eax
    25                              <1> 
    26 0000184B 89EC                <1>         mov     esp, ebp
    27 0000184D 5D                  <1>         pop     ebp
    28                              <1> 
    29 0000184E C3                  <1>         ret
   146                                  %include    "../modules/protect/int_nm.s"
     1                              <1> int_nm:
     2                              <1> 
     3 0000184F 60                  <1>         pusha
     4 00001850 1E                  <1>         push    ds
     5 00001851 06                  <1>         push    es
     6                              <1> 
     7 00001852 66B81000            <1>         mov     ax, DS_KERNEL
     8 00001856 8ED8                <1>         mov     ds, ax
     9 00001858 8EC0                <1>         mov     es, ax
    10                              <1> 
    11 0000185A 0F06                <1>         clts
    12                              <1> 
    13 0000185C 8B3D[A8180000]      <1>         mov     edi, [.last_tss]
    14 00001862 0F00CE              <1>         str     esi
    15 00001865 83E6F8              <1>         and     esi, ~0x0007
    16                              <1> 
    17 00001868 83FF00              <1>         cmp     edi, 0
    18 0000186B 7420                <1>         je      .10F
    19                              <1> 
    20 0000186D 39FE                <1>         cmp     esi, edi
    21 0000186F 741A                <1>         je      .12E
    22                              <1> 
    23 00001871 FA                  <1>         cli
    24                              <1> 
    25 00001872 89FB                <1>         mov     ebx, edi
    26 00001874 E833000000          <1>         call    get_tss_base
    27 00001879 E841000000          <1>         call    save_fpu_context
    28                              <1> 
    29 0000187E 89F3                <1>         mov     ebx, esi
    30 00001880 E827000000          <1>         call    get_tss_base
    31 00001885 E843000000          <1>         call    load_fpu_context
    32                              <1> 
    33 0000188A FB                  <1>         sti
    34                              <1> .12E:
    35 0000188B EB0E                <1>         jmp     .10E
    36                              <1> .10F:
    37                              <1> 
    38 0000188D FA                  <1>         cli
    39                              <1>         
    40 0000188E 89F3                <1>         mov     ebx, esi
    41 00001890 E817000000          <1>         call    get_tss_base
    42 00001895 E833000000          <1>         call    load_fpu_context
    43                              <1> 
    44 0000189A FB                  <1>         sti
    45                              <1> .10E:
    46                              <1> 
    47 0000189B 8935[A8180000]      <1>         mov     [.last_tss], esi
    48                              <1> 
    49 000018A1 07                  <1>         pop     es
    50 000018A2 1F                  <1>         pop     ds
    51 000018A3 61                  <1>         popa
    52                              <1> 
    53 000018A4 CF                  <1>         iret
    54                              <1> 
    55 000018A5 00<rept>            <1> ALIGN 4, db 0
    56 000018A8 00000000            <1> .last_tss:  dd      0
    57                              <1> 
    58                              <1> 
    59                              <1> get_tss_base:
    60 000018AC 8B83[EA080000]      <1>         mov     eax, [GDT + ebx + 2]
    61 000018B2 C1E008              <1>         shl     eax, 8
    62 000018B5 8A83[EF080000]      <1>         mov     al, [GDT + ebx + 7]
    63 000018BB C1C808              <1>         ror     eax, 8
    64                              <1> 
    65 000018BE C3                  <1>         ret
    66                              <1> 
    67                              <1> 
    68                              <1> save_fpu_context:
    69 000018BF DD7068              <1>         fnsave  [eax + 104]
    70 000018C2 C780D4000000010000- <1>         mov     [eax + 104 + 108], dword 1
    70 000018CB 00                  <1>
    71                              <1> 
    72 000018CC C3                  <1>         ret
    73                              <1> 
    74                              <1> 
    75                              <1> load_fpu_context:
    76 000018CD 83B8D400000000      <1>         cmp     [eax + 104 + 108], dword 0
    77 000018D4 7504                <1>         jne     .10F
    78 000018D6 DBE3                <1>         fninit
    79 000018D8 EB03                <1>         jmp     .10E
    80                              <1> .10F:
    81                              <1> 
    82 000018DA DD6068              <1>         frstor  [eax + 104]
    83                              <1> .10E:
    84 000018DD C3                  <1>         ret
   147                                  %include    "../modules/protect/wait_tick.s"
     1                              <1> wait_tick:
     2                              <1> 
     3 000018DE 55                  <1>         push    ebp
     4 000018DF 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 000018E1 50                  <1>         push    eax
     7 000018E2 51                  <1>         push    ecx
     8                              <1> 
     9 000018E3 8B4D08              <1>         mov     ecx, [ebp + 8]
    10 000018E6 A1[AC0A0000]        <1>         mov     eax, [TIMER_COUNT]
    11                              <1> 
    12                              <1> .10L:
    13 000018EB 3905[AC0A0000]      <1>         cmp     [TIMER_COUNT], eax
    14 000018F1 74F8                <1>         je      .10L
    15 000018F3 40                  <1>         inc     eax
    16 000018F4 E2F5                <1>         loop    .10L
    17                              <1> 
    18 000018F6 59                  <1>         pop     ecx
    19 000018F7 58                  <1>         pop     eax
    20                              <1> 
    21 000018F8 89EC                <1>         mov     esp, ebp
    22 000018FA 5D                  <1>         pop     ebp
    23                              <1> 
    24 000018FB C3                  <1>         ret
   148                                  %include    "../modules/protect/memcpy.s"
     1                              <1> memcpy:
     2                              <1> 
     3 000018FC 55                  <1>     push    ebp
     4 000018FD 89E5                <1>     mov     ebp, esp
     5                              <1> 
     6 000018FF 51                  <1>     push    ecx
     7 00001900 56                  <1>     push    esi
     8 00001901 57                  <1>     push    edi
     9                              <1> 
    10 00001902 FC                  <1>     cld
    11 00001903 8B7D08              <1>     mov     edi, [ebp + 8]
    12 00001906 8B750C              <1>     mov     esi, [ebp + 12]
    13 00001909 8B4D10              <1>     mov     ecx, [ebp + 16]
    14                              <1> 
    15 0000190C F3A4                <1>     rep movsb
    16                              <1> 
    17 0000190E 5F                  <1>     pop     edi
    18 0000190F 5E                  <1>     pop     esi
    19 00001910 59                  <1>     pop     ecx
    20                              <1> 
    21 00001911 89EC                <1>     mov     esp, ebp
    22 00001913 5D                  <1>     pop     ebp
    23                              <1> 
    24 00001914 C3                  <1>     ret
   149                                  %include    "../modules/protect/ctrl_alt_end.s"
     1                              <1> ctrl_alt_end:
     2 00001915 55                  <1>         push    ebp
     3 00001916 89E5                <1>         mov     ebp, esp
     4                              <1> 
     5 00001918 8B4508              <1>         mov     eax, [ebp + 8]
     6 0000191B 0FBAF007            <1>         btr     eax, 7
     7 0000191F 7209                <1>         jc      .10F
     8 00001921 0FAB05[67190000]    <1>         bts     [.key_state], eax
     9 00001928 EB07                <1>         jmp     .10E
    10                              <1> .10F:
    11 0000192A 0FBB05[67190000]    <1>         btc     [.key_state], eax
    12                              <1> .10E:
    13 00001931 B81D000000          <1>         mov     eax, 0x1D
    14 00001936 0FA305[67190000]    <1>         bt      [.key_state], eax
    15 0000193D 7321                <1>         jnc     .20E
    16                              <1> 
    17 0000193F B838000000          <1>         mov     eax, 0x38
    18 00001944 0FA305[67190000]    <1>         bt      [.key_state], eax
    19 0000194B 7313                <1>         jnc     .20E
    20                              <1> 
    21 0000194D B84F000000          <1>         mov     eax, 0x4F
    22 00001952 0FA305[67190000]    <1>         bt      [.key_state], eax
    23 00001959 7305                <1>         jnc     .20E
    24                              <1> 
    25 0000195B B8FFFFFFFF          <1>         mov     eax, -1
    26                              <1> 
    27                              <1> .20E:
    28 00001960 C1F808              <1>         sar     eax, 8
    29                              <1> 
    30 00001963 89EC                <1>         mov     esp, ebp
    31 00001965 5D                  <1>         pop     ebp
    32                              <1> 
    33 00001966 C3                  <1>         ret
    34                              <1> 
    35 00001967 00<rept>            <1> .key_state: times 32 db 0
   150                                  %include    "../modules/protect/power_off.s"
     1                              <1> power_off:
     2 00001987 50                  <1>         push    eax
     3 00001988 53                  <1>         push    ebx
     4 00001989 51                  <1>         push    ecx
     5 0000198A 52                  <1>         push    edx
     6 0000198B 56                  <1>         push    esi
     7                              <1> 
     8 0000198C 68[0C1B0000]680F02- <1>         cdecl   draw_str, 25, 14, 0x020F, .s0
     8 00001994 00006A0E6A19E81EF7- <1>
     8 0000199D FFFF6683C410        <1>
     9                              <1> 
    10 000019A3 0F20C0              <1>         mov     eax, cr0
    11 000019A6 25FFFFFF7F          <1>         and     eax, 0x7FFF_FFFF
    12 000019AB 0F22C0              <1>         mov     cr0, eax
    13 000019AE EB00                <1>         jmp     $ + 2
    14                              <1> 
    15 000019B0 A1047E0000          <1>         mov     eax, [0x7C00 + 512 + 4]
    16 000019B5 8B1D087E0000        <1>         mov     ebx, [0x7C00 + 512 + 8]
    17 000019BB 83F800              <1>         cmp     eax, 0
    18 000019BE 7473                <1>         je      .10E
    19                              <1> 
    20 000019C0 68525344545350E868- <1>         cdecl   acpi_find, eax, ebx, 'RSDT'
    20 000019C9 0100006683C40C      <1>
    21 000019D0 83F800              <1>         cmp     eax, 0
    22 000019D3 745E                <1>         je      .10E
    23                              <1> 
    24 000019D5 684641435050E88201- <1>         cdecl   find_rsdt_entry, eax, 'FACP'
    24 000019DE 00006683C408        <1>
    25 000019E4 83F800              <1>         cmp     eax, 0
    26 000019E7 744A                <1>         je      .10E
    27                              <1> 
    28 000019E9 8B5828              <1>         mov     ebx, [eax + 40]
    29 000019EC 83FB00              <1>         cmp     ebx, 0
    30 000019EF 7442                <1>         je      .10E
    31                              <1> 
    32 000019F1 8B4840              <1>         mov     ecx, [eax + 64]
    33 000019F4 890D[281B0000]      <1>         mov     [PM1a_CNT_BLK], ecx
    34                              <1> 
    35 000019FA 8B4844              <1>         mov     ecx, [eax + 68]
    36 000019FD 890D[2C1B0000]      <1>         mov     [PM1b_CNT_BLK], ecx
    37                              <1> 
    38 00001A03 8B4B04              <1>         mov     ecx, [ebx + 4]
    39 00001A06 83E924              <1>         sub     ecx, 36
    40 00001A09 83C324              <1>         add     ebx, 36
    41 00001A0C 685F53355F5153E81C- <1>         cdecl   acpi_find, ebx, ecx, '_S5_'
    41 00001A15 0100006683C40C      <1>
    42 00001A1C 83F800              <1>         cmp     eax, 0
    43 00001A1F 7412                <1>         je      .10E
    44                              <1> 
    45 00001A21 83C004              <1>         add     eax, 4
    46 00001A24 50E86B0100006683C4- <1>         cdecl   acpi_package_value, eax
    46 00001A2D 04                  <1>
    47 00001A2E A3[301B0000]        <1>         mov     [S5_PACKAGE], eax
    48                              <1> 
    49                              <1> .10E:
    50 00001A33 0F20C0              <1>         mov     eax, cr0
    51 00001A36 0D00000080          <1>         or      eax, (1 << 31)
    52 00001A3B 0F22C0              <1>         mov     cr0, eax
    53 00001A3E EB00                <1>         jmp     $ + 2
    54                              <1> 
    55 00001A40 8B15[281B0000]      <1>         mov     edx, [PM1a_CNT_BLK]
    56 00001A46 83FA00              <1>         cmp     edx, 0
    57 00001A49 0F8495000000        <1>         je      .20E
    58                              <1> 
    59 00001A4F 68[211B0000]680F02- <1>         cdecl   draw_str, 38, 14, 0x020F, .s3
    59 00001A57 00006A0E6A26E85BF6- <1>
    59 00001A60 FFFF6683C410        <1>
    60 00001A66 6A64E871FEFFFF6683- <1>         cdecl   wait_tick, 100
    60 00001A6F C404                <1>
    61 00001A71 68[1E1B0000]680F02- <1>         cdecl   draw_str, 38, 14, 0x020F, .s2
    61 00001A79 00006A0E6A26E839F6- <1>
    61 00001A82 FFFF6683C410        <1>
    62 00001A88 6A64E84FFEFFFF6683- <1>         cdecl   wait_tick, 100
    62 00001A91 C404                <1>
    63 00001A93 68[1B1B0000]680F02- <1>         cdecl   draw_str, 38, 14, 0x020F, .s1
    63 00001A9B 00006A0E6A26E817F6- <1>
    63 00001AA4 FFFF6683C410        <1>
    64 00001AAA 6A64E82DFEFFFF6683- <1>         cdecl   wait_tick, 100
    64 00001AB3 C404                <1>
    65                              <1> 
    66 00001AB5 660FB605[301B0000]  <1>         movzx   ax, [S5_PACKAGE.0]
    67 00001ABD 66C1E00A            <1>         shl     ax, 10
    68 00001AC1 660D0020            <1>         or      ax, 1 << 13
    69 00001AC5 66EF                <1>         out     dx, ax
    70                              <1> 
    71 00001AC7 8B15[2C1B0000]      <1>         mov     edx, [PM1b_CNT_BLK]
    72 00001ACD 83FA00              <1>         cmp     edx, 0
    73 00001AD0 7412                <1>         je      .20E
    74                              <1> 
    75 00001AD2 660FB605[311B0000]  <1>         movzx   ax, [S5_PACKAGE.1]
    76 00001ADA 66C1E00A            <1>         shl     ax, 10
    77 00001ADE 660D0020            <1>         or      ax, 1 << 13
    78 00001AE2 66EF                <1>         out     dx, ax
    79                              <1> 
    80                              <1> .20E:
    81 00001AE4 6A64E8F3FDFFFF6683- <1>         cdecl   wait_tick, 100
    81 00001AED C404                <1>
    82                              <1> 
    83 00001AEF 68[241B0000]680F02- <1>         cdecl   draw_str, 38, 14, 0x020F, .s4
    83 00001AF7 00006A0E6A26E8BBF5- <1>
    83 00001B00 FFFF6683C410        <1>
    84                              <1> 
    85 00001B06 5E                  <1>         pop     esi
    86 00001B07 5A                  <1>         pop     edx
    87 00001B08 59                  <1>         pop     ecx
    88 00001B09 5B                  <1>         pop     ebx
    89 00001B0A 58                  <1>         pop     eax
    90                              <1> 
    91 00001B0B C3                  <1>         ret
    92                              <1> 
    93 00001B0C 506F776572206F6666- <1> .s0     db  "Power off...  ", 0
    93 00001B15 2E2E2E202000        <1>
    94 00001B1B 203100              <1> .s1     db  " 1", 0
    95 00001B1E 203200              <1> .s2     db  " 2", 0
    96 00001B21 203300              <1> .s3     db  " 3", 0
    97 00001B24 4E4700              <1> .s4     db  "NG", 0
    98                              <1> 
    99 00001B27 00                  <1> ALIGN 4, db 0
   100 00001B28 00000000            <1> PM1a_CNT_BLK    dd  0
   101 00001B2C 00000000            <1> PM1b_CNT_BLK    dd  0
   102                              <1> S5_PACKAGE:
   103 00001B30 00                  <1> .0              db  0
   104 00001B31 00                  <1> .1              db  0
   105 00001B32 00                  <1> .2              db  0
   106 00001B33 00                  <1> .3              db  0
   151                                  %include    "../modules/protect/acpi_find.s"
     1                              <1> acpi_find:
     2 00001B34 55                  <1>         push    ebp
     3 00001B35 89E5                <1>         mov     ebp, esp
     4                              <1> 
     5 00001B37 53                  <1>         push    ebx
     6 00001B38 51                  <1>         push    ecx
     7 00001B39 57                  <1>         push    edi
     8                              <1> 
     9 00001B3A 8B7D08              <1>         mov     edi, [ebp + 8]
    10 00001B3D 8B4D0C              <1>         mov     ecx, [ebp + 12]
    11 00001B40 8B4510              <1>         mov     eax, [ebp + 16]
    12                              <1> 
    13 00001B43 FC                  <1>         cld
    14                              <1> 
    15                              <1> .10L:
    16 00001B44 F2AE                <1>         repne   scasb
    17                              <1> 
    18 00001B46 83F900              <1>         cmp     ecx, 0
    19 00001B49 7507                <1>         jnz     .11E
    20 00001B4B B800000000          <1>         mov     eax, 0
    21 00001B50 EB09                <1>         jmp     .10E
    22                              <1> 
    23                              <1> .11E:
    24 00001B52 263B47FF            <1>         cmp     eax, [es:edi - 1]
    25 00001B56 75EC                <1>         jne     .10L
    26                              <1> 
    27 00001B58 4F                  <1>         dec     edi
    28 00001B59 89F8                <1>         mov     eax, edi
    29                              <1> 
    30                              <1> .10E:
    31 00001B5B 5F                  <1>         pop     edi
    32 00001B5C 59                  <1>         pop     ecx
    33 00001B5D 5B                  <1>         pop     ebx
    34                              <1> 
    35 00001B5E 89EC                <1>         mov     esp, ebp
    36 00001B60 5D                  <1>         pop     ebp
    37                              <1> 
    38 00001B61 C3                  <1>         ret
   152                                  %include    "../modules/protect/find_rsdt_entry.s"
     1                              <1> find_rsdt_entry:
     2 00001B62 55                  <1>         push    ebp
     3 00001B63 89E5                <1>         mov     ebp, esp
     4                              <1> 
     5 00001B65 53                  <1>         push    ebx
     6 00001B66 51                  <1>         push    ecx
     7 00001B67 56                  <1>         push    esi
     8 00001B68 57                  <1>         push    edi
     9                              <1> 
    10 00001B69 8B7508              <1>         mov     esi, [ebp + 8]
    11 00001B6C 8B4D0C              <1>         mov     ecx, [ebp + 12]
    12                              <1> 
    13 00001B6F BB00000000          <1>         mov     ebx, 0
    14                              <1> 
    15 00001B74 89F7                <1>         mov     edi, esi
    16 00001B76 037E04              <1>         add     edi, [esi + 4]
    17 00001B79 83C624              <1>         add     esi, 36
    18                              <1> 
    19                              <1> .10L:
    20 00001B7C 39FE                <1>         cmp     esi, edi
    21 00001B7E 7D0B                <1>         jge     .10E
    22                              <1> 
    23 00001B80 AD                  <1>         lodsd
    24                              <1> 
    25 00001B81 3908                <1>         cmp     [eax], ecx
    26 00001B83 7504                <1>         jne     .12E
    27 00001B85 89C3                <1>         mov     ebx, eax
    28 00001B87 EB02                <1>         jmp     .10E
    29 00001B89 EBF1                <1> .12E:   jmp     .10L
    30                              <1> .10E:
    31 00001B8B 89D8                <1>         mov     eax, ebx
    32                              <1> 
    33 00001B8D 5F                  <1>         pop     edi
    34 00001B8E 5E                  <1>         pop     esi
    35 00001B8F 59                  <1>         pop     ecx
    36 00001B90 5B                  <1>         pop     ebx
    37                              <1> 
    38 00001B91 89EC                <1>         mov     esp, ebp
    39 00001B93 5D                  <1>         pop     ebp
    40                              <1> 
    41 00001B94 C3                  <1>         ret
   153                                  %include    "../modules/protect/acpi_package_value.s"
     1                              <1> acpi_package_value:
     2 00001B95 55                  <1>         push    ebp
     3 00001B96 89E5                <1>         mov     ebp, esp
     4                              <1> 
     5 00001B98 56                  <1>         push    esi
     6                              <1> 
     7 00001B99 8B7508              <1>         mov     esi, [ebp + 8]
     8                              <1> 
     9 00001B9C 46                  <1>         inc     esi
    10 00001B9D 46                  <1>         inc     esi
    11 00001B9E 46                  <1>         inc     esi
    12                              <1> 
    13 00001B9F 8A06                <1>         mov     al, [esi]
    14 00001BA1 3C0B                <1>         cmp     al, 0x0B
    15 00001BA3 740A                <1>         je      .C0B
    16 00001BA5 3C0C                <1>         cmp     al, 0x0C
    17 00001BA7 7406                <1>         je      .C0C
    18 00001BA9 3C0E                <1>         cmp     al, 0x0E
    19 00001BAB 7402                <1>         je      .C0E
    20 00001BAD EB08                <1>         jmp     .C0A
    21                              <1> .C0B:
    22                              <1> .C0C:
    23                              <1> .C0E:
    24 00001BAF 8A4601              <1>         mov     al, [esi + 1]
    25 00001BB2 8A6602              <1>         mov     ah, [esi + 2]
    26 00001BB5 EB13                <1>         jmp     .10E
    27                              <1> 
    28                              <1> .C0A:
    29 00001BB7 3C0A                <1>         cmp     al, 0x0A
    30 00001BB9 7504                <1>         jne     .11E
    31 00001BBB 8A4601              <1>         mov     al, [esi + 1]
    32 00001BBE 46                  <1>         inc     esi
    33                              <1> 
    34                              <1> .11E:
    35 00001BBF 46                  <1>         inc     esi
    36                              <1> 
    37 00001BC0 8A26                <1>         mov     ah, [esi]
    38 00001BC2 80FC0A              <1>         cmp     ah, 0x0A
    39 00001BC5 7503                <1>         jne     .12E
    40 00001BC7 8A6601              <1>         mov     ah, [esi + 1]
    41                              <1> .12E:
    42                              <1> .10E:
    43 00001BCA 5E                  <1>         pop     esi
    44                              <1> 
    45 00001BCB 89EC                <1>         mov     esp, ebp
    46 00001BCD 5D                  <1>         pop     ebp
    47                              <1> 
    48 00001BCE C3                  <1>         ret
   154                                  
   155 00001BCF 00<rept>                        times KERNEL_SIZE - ($ - $$) db 0x00
   156                                  
   157                                  %include    "fat.s"
     1                              <1>         times (FAT1_START) - ($ - $$)   db  0x00
     2                              <1> 
     3                              <1> FAT1:
     4 00002000 FFFF                <1>         db      0xFF, 0xFF
     5 00002002 FFFF                <1>         dw      0xFFFF
     6 00002004 FFFF                <1>         dw      0xFFFF
     7                              <1> 
     8 00002006 00<rept>            <1>         times (FAT2_START) - ($ - $$)   db  0x00
     9                              <1> 
    10                              <1> 
    11                              <1> FAT2:
    12 00022000 FFFF                <1>         db      0xFF, 0xFF
    13 00022002 FFFF                <1>         dw      0xFFFF
    14 00022004 FFFF                <1>         dw      0xFFFF
    15                              <1> 
    16 00022006 00<rept>            <1>         times (ROOT_START) - ($ - $$)   db  0x00
    17                              <1> 
    18                              <1> 
    19                              <1> FAT_ROOT:
    20 00042000 424F4F5441424C4544- <1>         db      'BOOTABLE', 'DSK'
    20 00042009 534B                <1>
    21 0004200B 28                  <1>         db      ATTR_ARCHIVE | ATTR_VOLUME_ID
    22 0004200C 00                  <1>         db      0x00
    23 0004200D 00                  <1>         db      0x00
    24 0004200E 0000                <1>         dw      (0 << 11) | (0 << 5) | (0 / 2)
    25 00042010 0100                <1>         dw      (0 << 9) | (0 << 5) | (1)
    26 00042012 0100                <1>         dw      (0 << 9) | (0 << 5) | (1)
    27 00042014 0000                <1>         dw      0x0000
    28 00042016 0000                <1>         dw      (0 << 11) | (0 << 5) | (0 / 2)
    29 00042018 0100                <1>         dw      (0 << 9) | (0 << 5) | (1)
    30 0004201A 0000                <1>         dw      0
    31 0004201C 00000000            <1>         dd      0
    32                              <1> 
    33 00042020 5350454349414C2054- <1>         db      'SPECIAL ', 'TXT'
    33 00042029 5854                <1>
    34 0004202B 20                  <1>         db      ATTR_ARCHIVE
    35 0004202C 00                  <1>         db      0x00
    36 0004202D 00                  <1>         db      0
    37 0004202E 0000                <1>         dw      (0 << 11) | (0 << 5) | (0 / 2)
    38 00042030 2100                <1>         dw      (0 << 9) | (1 << 5) | (1)
    39 00042032 2100                <1>         dw      (0 << 9) | (1 << 5) | (1)
    40 00042034 0000                <1>         dw      0x0000
    41 00042036 0000                <1>         dw      (0 << 11) | (0 << 5) | (0 / 2)
    42 00042038 2100                <1>         dw      (0 << 9) | (1 << 5) | (1)
    43 0004203A 0200                <1>         dw      2
    44 0004203C 0B000000            <1>         dd      FILE.end - FILE
    45                              <1> 
    46 00042040 00<rept>            <1>         times FILE_START - ($ - $$) db  0x00
    47                              <1> 
    48 00046000 68656C6C6F2C204641- <1> FILE:   db      'hello, FAT!'
    48 00046009 5421                <1>
    49 0004600B 00                  <1> .end:   db      0
    50                              <1> 
    51 0004600C 00<rept>            <1> ALIGN 512, db 0x00
