     1                                  %include    "../include/define.s"
     1                              <1>         BOOT_LOAD           equ     0x7C00
     2                              <1> 
     3                              <1>         BOOT_SIZE           equ     (1024 * 8)
     4                              <1>         SECT_SIZE           equ     (512)
     5                              <1>         BOOT_SECT           equ     (BOOT_SIZE / SECT_SIZE)
     6                              <1>         BOOT_END            equ     (BOOT_LOAD + BOOT_SIZE)
     7                              <1> 
     8                              <1>         E820_RECORD_SIZE    equ     20
     9                              <1> 
    10                              <1>         KERNEL_LOAD         equ     0x0010_1000
    11                              <1> 
    12                              <1>         KERNEL_SIZE         equ     (1024 * 8)
    13                              <1>         KERNEL_SECT         equ     (KERNEL_SIZE / SECT_SIZE)
    14                              <1> 
    15                              <1>         VECT_BASE           equ     0x0010_0000
     2                                  %include    "../include/macro.s"
     1                              <1> %macro  cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep  %0 -1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate -1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if  1 < %0
    12                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> %macro  set_vect 1-*.nolist
    18                              <1> 		push	eax
    19                              <1> 		push	edi
    20                              <1> 
    21                              <1> 		mov		edi, VECT_BASE + (%1 * 8)
    22                              <1> 		mov		eax, %2
    23                              <1> 
    24                              <1> 	%if 3 == %0
    25                              <1> 		mov		[edi + 4], %3
    26                              <1> 	%endif
    27                              <1> 
    28                              <1>         mov		[edi + 0], ax
    29                              <1> 		shr		eax, 16 
    30                              <1> 		mov		[edi + 6], ax
    31                              <1> 
    32                              <1> 		pop		edi
    33                              <1> 		pop		eax
    34                              <1> %endmacro
    35                              <1> 
    36                              <1> %macro  outp 2
    37                              <1>         mov     al, %2
    38                              <1>         out     %1, al
    39                              <1> %endmacro
    40                              <1> 
    41                              <1> struc drive
    42 00000000 <res 00000002>      <1>         .no     resw    1
    43 00000002 <res 00000002>      <1>         .cyln   resw    1
    44 00000004 <res 00000002>      <1>         .head   resw    1
    45 00000006 <res 00000002>      <1>         .sect   resw    1
    46                              <1> endstruc
    47                              <1> 
    48                              <1> %define		RING_ITEM_SIZE		(1 << 4)
    49                              <1> %define		RING_INDEX_MASK		(RING_ITEM_SIZE - 1)
    50                              <1> 
    51                              <1> struc ring_buff
    52 00000000 <res 00000004>      <1>         .rp     resd    1
    53 00000004 <res 00000004>      <1>         .wp     resd    1
    54 00000008 <res 00000010>      <1>         .item   resb    RING_ITEM_SIZE
    55                              <1> endstruc
     3                                  
     4                                          ORG     KERNEL_LOAD
     5                                  
     6                                  [BITS 32]
     7                                  
     8                                  kernel:
     9                                  
    10 00000000 BE007E0000                      mov     esi, BOOT_LOAD + SECT_SIZE
    11 00000005 0FB706                          movzx   eax, word [esi + 0]
    12 00000008 0FB75E02                        movzx   ebx, word [esi + 2]
    13 0000000C C1E004                          shl     eax, 4
    14 0000000F 01D8                            add     eax, ebx
    15 00000011 A3[08010000]                    mov     [FONT_ADR], eax
    16                                  
    17 00000016 E8BB060000                      cdecl   init_int
    18 0000001B E83C080000                      cdecl   init_pic
    19                                  
    20 00000020 5057BF00001000B8-               set_vect    0x00, int_zero_div
    20 00000028 [3E080000]668907C1-
    20 00000030 E810668947065F58   
    21 00000038 5057BF08011000B8-               set_vect    0x21, int_keyboard
    21 00000040 [C6080000]668907C1-
    21 00000048 E810668947065F58   
    22 00000050 5057BF40011000B8-               set_vect    0x28, int_rtc
    22 00000058 [9B080000]668907C1-
    22 00000060 E810668947065F58   
    23                                  
    24 00000068 6A10E8180800006683-             cdecl   rtc_int_en, 0x10
    24 00000071 C404               
    25                                  
    26                                          outp    0x21, 0b1111_1001
    26 00000073 B0F9                <1>  mov al, %2
    26 00000075 E621                <1>  out %1, al
    27                                          outp    0xA1, 0b1111_1110
    27 00000077 B0FE                <1>  mov al, %2
    27 00000079 E6A1                <1>  out %1, al
    28                                  
    29 0000007B FB                              sti
    30                                  
    31 0000007C 6A0D6A3FE802020000-             cdecl   draw_font, 63, 13
    31 00000085 6683C408           
    32 00000089 6A046A3FE883020000-             cdecl   draw_color_bar, 63, 4
    32 00000092 6683C408           
    33 00000096 68[F1000000]680F01-             cdecl   draw_str, 25, 14, 0x010F, .s0
    33 0000009E 00006A0E6A19E82302-
    33 000000A7 00006683C410       
    34                                  
    35                                  .10L:
    36                                  
    37 000000AD A1[0C010000]                    mov     eax, [RTC_TIME]
    38 000000B2 5068000700006A006A-             cdecl   draw_time, 72, 0, 0x0700, eax
    38 000000BB 48E8750500006683C4-
    38 000000C4 10                 
    39                                  
    40 000000C5 68[04010000]68-                 cdecl   ring_rd, _KEY_BUFF, .int_key
    40 000000CB [EC080000]E8300800-
    40 000000D3 006683C408         
    41 000000D8 83F800                          cmp     eax, 0
    42 000000DB 7412                            je      .10E
    43                                  
    44 000000DD 68[EC080000]6A1D6A-             cdecl   draw_key, 2, 29, _KEY_BUFF
    44 000000E5 02E87A0800006683C4-
    44 000000EE 0C                 
    45                                  .10E:
    46                                  
    47 000000EF EBBC                            jmp     .10L
    48                                  
    49 000000F1 2048656C6C6F2C206B-     .s0 	db	" Hello, kernel! ", 0
    49 000000FA 65726E656C212000   
    50                                  
    51 00000102 00<rept>                ALIGN 4, db 0
    52 00000104 00000000                .int_key    dd 0
    53                                  
    54                                  ALIGN 4, db 0
    55 00000108 00000000                FONT_ADR:   dd 0
    56 0000010C 00000000                RTC_TIME:   dd 0
    57                                  
    58                                  %include    "../modules/protect/vga.s"
     1                              <1> vga_set_read_plane:
     2                              <1> 
     3 00000110 55                  <1>         push    ebp
     4 00000111 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000113 50                  <1>         push    eax
     7 00000114 52                  <1>         push    edx
     8                              <1> 
     9 00000115 8A6508              <1>         mov     ah, [ebp + 8]
    10 00000118 80E403              <1>         and     ah, 0x03
    11 0000011B B004                <1>         mov     al, 0x04
    12 0000011D 66BACE03            <1>         mov     dx, 0x03CE
    13 00000121 66EF                <1>         out     dx, ax
    14                              <1> 
    15 00000123 5A                  <1>         pop     edx
    16 00000124 58                  <1>         pop     eax
    17                              <1> 
    18 00000125 89EC                <1>         mov     esp, ebp
    19 00000127 5D                  <1>         pop     ebp
    20                              <1> 
    21 00000128 C3                  <1>         ret
    22                              <1> 
    23                              <1> 
    24                              <1> vga_set_write_plane:
    25                              <1> 
    26 00000129 55                  <1>          push    ebp
    27 0000012A 89E5                <1>          mov     ebp, esp
    28                              <1>  
    29 0000012C 50                  <1>          push    eax
    30 0000012D 52                  <1>          push    edx
    31                              <1>  
    32 0000012E 8A6508              <1>          mov     ah, [ebp + 8]
    33 00000131 80E40F              <1>          and     ah, 0x0F
    34 00000134 B002                <1>          mov     al, 0x02
    35 00000136 66BAC403            <1>          mov     dx, 0x03C4
    36 0000013A 66EF                <1>          out     dx, ax
    37                              <1>  
    38 0000013C 5A                  <1>          pop     edx
    39 0000013D 58                  <1>          pop     eax
    40                              <1>  
    41 0000013E 89EC                <1>          mov     esp, ebp
    42 00000140 5D                  <1>          pop     ebp
    43                              <1>  
    44 00000141 C3                  <1>          ret
    45                              <1> 
    46                              <1> 
    47                              <1> vram_font_copy:
    48                              <1> 
    49 00000142 55                  <1>         push    ebp
    50 00000143 89E5                <1>         mov     ebp, esp
    51                              <1> 
    52 00000145 50                  <1>         push    eax
    53 00000146 53                  <1>         push    ebx
    54 00000147 51                  <1>         push    ecx
    55 00000148 52                  <1>         push    edx
    56 00000149 56                  <1>         push    esi
    57 0000014A 57                  <1>         push    edi
    58                              <1> 
    59 0000014B 8B7508              <1>         mov     esi, [ebp + 8]
    60 0000014E 8B7D0C              <1>         mov     edi, [ebp + 12]
    61 00000151 0FB64510            <1>         movzx   eax, byte [ebp + 16]
    62 00000155 0FB75D14            <1>         movzx   ebx, word [ebp + 20]
    63                              <1> 
    64 00000159 84C7                <1>         test    bh, al
    65 0000015B 0F94C6              <1>         setz    dh
    66 0000015E FECE                <1>         dec     dh
    67                              <1> 
    68 00000160 84C3                <1>         test    bl, al
    69 00000162 0F94C2              <1>         setz    dl
    70 00000165 FECA                <1>         dec     dl
    71                              <1> 
    72 00000167 FC                  <1>         cld
    73                              <1> 
    74 00000168 B910000000          <1>         mov     ecx, 16
    75                              <1> .10L:
    76                              <1> 
    77 0000016D AC                  <1>         lodsb
    78 0000016E 88C4                <1>         mov     ah, al
    79 00000170 F6D4                <1>         not     ah
    80                              <1> 
    81 00000172 20D0                <1>         and     al, dl
    82                              <1> 
    83 00000174 F7C310000000        <1>         test    ebx, 0x0010
    84 0000017A 7404                <1>         jz      .11F
    85 0000017C 2227                <1>         and     ah, [edi]
    86 0000017E EB02                <1>         jmp     .11E
    87                              <1> .11F:
    88                              <1> 
    89 00000180 20F4                <1>         and     ah, dh
    90                              <1> .11E:
    91                              <1> 
    92 00000182 08E0                <1>         or      al, ah
    93                              <1> 
    94 00000184 8807                <1>         mov     [edi], al
    95                              <1> 
    96 00000186 83C750              <1>         add     edi, 80
    97 00000189 E2E2                <1>         loop    .10L
    98                              <1> .10E:
    99                              <1> 
   100 0000018B 5F                  <1>         pop     edi
   101 0000018C 5E                  <1>         pop     esi
   102 0000018D 5A                  <1>         pop     edx
   103 0000018E 59                  <1>         pop     ecx
   104 0000018F 5B                  <1>         pop     ebx
   105 00000190 58                  <1>         pop     eax
   106                              <1> 
   107 00000191 89EC                <1>         mov     esp, ebp
   108 00000193 5D                  <1>         pop     ebp
   109                              <1> 
   110 00000194 C3                  <1>         ret
   111                              <1> 
   112                              <1> 
   113                              <1> 
   114                              <1> vram_bit_copy:
   115                              <1> 
   116 00000195 55                  <1>         push    ebp
   117 00000196 89E5                <1>         mov     ebp, esp
   118                              <1> 
   119 00000198 50                  <1>         push    eax
   120 00000199 53                  <1>         push    ebx
   121 0000019A 57                  <1>         push    edi
   122                              <1> 
   123 0000019B 8B7D0C              <1>         mov     edi, [ebp + 12]
   124 0000019E 0FB64510            <1>         movzx   eax, byte [ebp + 16]
   125 000001A2 0FB75D14            <1>         movzx   ebx, word [ebp + 20]
   126                              <1> 
   127 000001A6 84C3                <1>         test    bl, al
   128 000001A8 0F94C3              <1>         setz    bl
   129 000001AB FECB                <1>         dec     bl
   130                              <1> 
   131 000001AD 8A4508              <1>         mov     al, [ebp + 8]
   132 000001B0 88C4                <1>         mov     ah, al
   133 000001B2 F6D4                <1>         not     ah
   134                              <1> 
   135 000001B4 2227                <1>         and     ah, [edi]
   136 000001B6 20D8                <1>         and     al, bl
   137 000001B8 08E0                <1>         or      al, ah
   138                              <1> 
   139 000001BA 8807                <1>         mov     [edi], al
   140                              <1> 
   141 000001BC 5F                  <1>         pop     edi
   142 000001BD 5B                  <1>         pop     ebx
   143 000001BE 58                  <1>         pop     eax
   144                              <1> 
   145 000001BF 89EC                <1>         mov     esp, ebp
   146 000001C1 5D                  <1>         pop     ebp
   147                              <1> 
   148 000001C2 C3                  <1>         ret
    59                                  %include    "../modules/protect/draw_char.s"
     1                              <1> draw_char:
     2                              <1> 
     3 000001C3 55                  <1>         push    ebp
     4 000001C4 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 000001C6 50                  <1>         push    eax
     7 000001C7 53                  <1>         push    ebx
     8 000001C8 51                  <1>         push    ecx
     9 000001C9 52                  <1>         push    edx
    10 000001CA 56                  <1>         push    esi
    11 000001CB 57                  <1>         push    edi
    12                              <1> 
    13 000001CC 0FB67514            <1>         movzx   esi, byte [ebp + 20]
    14 000001D0 C1E604              <1>         shl     esi, 4
    15 000001D3 0335[08010000]      <1>         add     esi, [FONT_ADR]
    16                              <1> 
    17 000001D9 8B7D0C              <1>         mov     edi, [ebp + 12]
    18 000001DC C1E708              <1>         shl     edi, 8
    19 000001DF 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA0000]
    20 000001E6 037D08              <1>         add     edi, [ebp + 8]
    21                              <1> 
    22 000001E9 0FB75D10            <1>         movzx   ebx, word [ebp + 16]
    23                              <1> 
    24 000001ED 6A03E81CFFFFFF6683- <1>         cdecl   vga_set_read_plane, 0x03
    24 000001F6 C404                <1>
    25 000001F8 6A08E82AFFFFFF6683- <1>         cdecl   vga_set_write_plane, 0x08
    25 00000201 C404                <1>
    26 00000203 536A085756E835FFFF- <1>         cdecl   vram_font_copy, esi, edi, 0x08, ebx
    26 0000020C FF6683C410          <1>
    27                              <1> 
    28 00000211 6A02E8F8FEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x02
    28 0000021A C404                <1>
    29 0000021C 6A04E806FFFFFF6683- <1>         cdecl   vga_set_write_plane, 0x04
    29 00000225 C404                <1>
    30 00000227 536A045756E811FFFF- <1>         cdecl   vram_font_copy, esi, edi, 0x04, ebx
    30 00000230 FF6683C410          <1>
    31                              <1> 
    32 00000235 6A01E8D4FEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x01
    32 0000023E C404                <1>
    33 00000240 6A02E8E2FEFFFF6683- <1>         cdecl   vga_set_write_plane, 0x02
    33 00000249 C404                <1>
    34 0000024B 536A025756E8EDFEFF- <1>         cdecl   vram_font_copy, esi, edi, 0x02, ebx
    34 00000254 FF6683C410          <1>
    35                              <1> 
    36 00000259 6A00E8B0FEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x00
    36 00000262 C404                <1>
    37 00000264 6A01E8BEFEFFFF6683- <1>         cdecl   vga_set_write_plane, 0x01
    37 0000026D C404                <1>
    38 0000026F 536A015756E8C9FEFF- <1>         cdecl   vram_font_copy, esi, edi, 0x01, ebx
    38 00000278 FF6683C410          <1>
    39                              <1> 
    40 0000027D 5F                  <1>         pop     edi
    41 0000027E 5E                  <1>         pop     esi
    42 0000027F 5A                  <1>         pop     edx
    43 00000280 59                  <1>         pop     ecx
    44 00000281 5B                  <1>         pop     ebx
    45 00000282 58                  <1>         pop     eax
    46                              <1> 
    47 00000283 89EC                <1>         mov     esp, ebp
    48 00000285 5D                  <1>         pop     ebp
    49                              <1> 
    50 00000286 C3                  <1>         ret
    60                                  %include    "../modules/protect/draw_font.s"
     1                              <1> draw_font:
     2                              <1> 
     3 00000287 55                  <1>         push    ebp
     4 00000288 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 0000028A 50                  <1>         push    eax
     7 0000028B 53                  <1>         push    ebx
     8 0000028C 51                  <1>         push    ecx
     9 0000028D 52                  <1>         push    edx
    10 0000028E 56                  <1>         push    esi
    11 0000028F 57                  <1>         push    edi
    12                              <1> 
    13 00000290 8B7508              <1>         mov     esi, [ebp + 8]
    14 00000293 8B7D0C              <1>         mov     edi, [ebp + 12]
    15                              <1> 
    16 00000296 B900000000          <1>         mov     ecx, 0
    17 0000029B 81F900010000        <1> .10L:   cmp     ecx, 256
    18 000002A1 731F                <1>         jae     .10E
    19                              <1> 
    20 000002A3 89C8                <1>         mov     eax, ecx
    21 000002A5 83E00F              <1>         and     eax, 0x0F
    22 000002A8 01F0                <1>         add     eax, esi
    23                              <1> 
    24 000002AA 89CB                <1>         mov     ebx, ecx
    25 000002AC C1EB04              <1>         shr     ebx, 4
    26 000002AF 01FB                <1>         add     ebx, edi
    27                              <1> 
    28 000002B1 516A075350E808FFFF- <1>         cdecl   draw_char, eax, ebx, 0x07, ecx
    28 000002BA FF6683C410          <1>
    29                              <1> 
    30 000002BF 41                  <1>         inc     ecx
    31 000002C0 EBD9                <1>         jmp     .10L
    32                              <1> .10E:
    33                              <1> 
    34 000002C2 5F                  <1>         pop     edi
    35 000002C3 5E                  <1>         pop     esi
    36 000002C4 5A                  <1>         pop     edx
    37 000002C5 59                  <1>         pop     ecx
    38 000002C6 5B                  <1>         pop     ebx
    39 000002C7 58                  <1>         pop     eax
    40                              <1> 
    41 000002C8 89EC                <1>         mov     esp, ebp
    42 000002CA 5D                  <1>         pop     ebp
    43                              <1> 
    44 000002CB C3                  <1>         ret
    61                                  %include    "../modules/protect/draw_str.s"
     1                              <1> draw_str:
     2                              <1> 
     3 000002CC 55                  <1>         push    ebp
     4 000002CD 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 000002CF 50                  <1>         push    eax
     7 000002D0 53                  <1>         push    ebx
     8 000002D1 51                  <1>         push    ecx
     9 000002D2 52                  <1>         push    edx
    10 000002D3 56                  <1>         push    esi
    11                              <1> 
    12 000002D4 8B4D08              <1>         mov     ecx, [ebp + 8]
    13 000002D7 8B550C              <1>         mov     edx, [ebp + 12]
    14 000002DA 0FB75D10            <1>         movzx   ebx, word [ebp + 16]
    15 000002DE 8B7514              <1>         mov     esi, [ebp + 20]
    16                              <1> 
    17 000002E1 FC                  <1>         cld
    18                              <1> .10L:
    19                              <1> 
    20 000002E2 AC                  <1>         lodsb
    21 000002E3 3C00                <1>         cmp     al, 0
    22 000002E5 7425                <1>         je      .10E
    23                              <1> 
    24 000002E7 50535251E8D3FEFFFF- <1>         cdecl   draw_char, ecx, edx, ebx, eax
    24 000002F0 6683C410            <1>
    25                              <1> 
    26 000002F4 41                  <1>         inc     ecx
    27 000002F5 83F950              <1>         cmp     ecx, 80
    28 000002F8 7C10                <1>         jl      .12E
    29 000002FA B900000000          <1>         mov     ecx, 0
    30 000002FF 42                  <1>         inc     edx
    31 00000300 83FA1E              <1>         cmp     edx, 30
    32 00000303 7C05                <1>         jl      .12E
    33 00000305 BA00000000          <1>         mov     edx, 0
    34                              <1> 
    35                              <1> .12E:
    36 0000030A EBD6                <1>         jmp     .10L
    37                              <1> .10E:
    38                              <1> 
    39 0000030C 5E                  <1>         pop     esi
    40 0000030D 5A                  <1>         pop     edx
    41 0000030E 59                  <1>         pop     ecx
    42 0000030F 5B                  <1>         pop     ebx
    43 00000310 58                  <1>         pop     eax
    44                              <1> 
    45 00000311 89EC                <1>         mov     esp, ebp
    46 00000313 5D                  <1>         pop     ebp
    47                              <1> 
    48 00000314 C3                  <1>         ret
    62                                  %include    "../modules/protect/draw_color_bar.s"
     1                              <1> draw_color_bar:
     2                              <1> 
     3 00000315 55                  <1>         push    ebp
     4 00000316 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000318 50                  <1>         push    eax
     7 00000319 53                  <1>         push    ebx
     8 0000031A 51                  <1>         push    ecx
     9 0000031B 52                  <1>         push    edx
    10 0000031C 56                  <1>         push    esi
    11 0000031D 57                  <1>         push    edi
    12                              <1> 
    13 0000031E 8B7508              <1>         mov     esi, [ebp + 8]
    14 00000321 8B7D0C              <1>         mov     edi, [ebp + 12]
    15                              <1> 
    16 00000324 B900000000          <1>         mov     ecx, 0
    17 00000329 83F910              <1> .10L:   cmp     ecx, 16
    18 0000032C 732E                <1>         jae     .10E
    19                              <1> 
    20 0000032E 89C8                <1>         mov     eax, ecx
    21 00000330 83E001              <1>         and     eax, 0x01
    22 00000333 C1E003              <1>         shl     eax, 3
    23 00000336 01F0                <1>         add     eax, esi
    24                              <1> 
    25 00000338 89CB                <1>         mov     ebx, ecx
    26 0000033A D1EB                <1>         shr     ebx, 1
    27 0000033C 01FB                <1>         add     ebx, edi
    28                              <1> 
    29 0000033E 89CA                <1>         mov     edx, ecx
    30 00000340 D1E2                <1>         shl     edx, 1
    31 00000342 8B92[70030000]      <1>         mov     edx, [.t0 + edx]
    32                              <1> 
    33 00000348 68[66030000]525350- <1>         cdecl   draw_str, eax, ebx, edx, .s0
    33 00000350 E877FFFFFF6683C410  <1>
    34                              <1> 
    35 00000359 41                  <1>         inc     ecx
    36 0000035A EBCD                <1>         jmp     .10L
    37                              <1> .10E:
    38                              <1> 
    39 0000035C 5F                  <1>         pop     edi
    40 0000035D 5E                  <1>         pop     esi
    41 0000035E 5A                  <1>         pop     edx
    42 0000035F 59                  <1>         pop     ecx
    43 00000360 5B                  <1>         pop     ebx
    44 00000361 58                  <1>         pop     eax
    45                              <1> 
    46 00000362 89EC                <1>         mov     esp, ebp
    47 00000364 5D                  <1>         pop     ebp
    48                              <1> 
    49 00000365 C3                  <1>         ret
    50                              <1> 
    51 00000366 202020202020202020- <1> .s0     db  '         ', 0
    51 0000036F 00                  <1>
    52                              <1> 
    53 00000370 00000008            <1> .t0     dw  0x0000, 0x0800
    54 00000374 00010009            <1> 		dw	0x0100, 0x0900
    55 00000378 0002000A            <1> 		dw	0x0200, 0x0A00
    56 0000037C 0003000B            <1> 		dw	0x0300, 0x0B00
    57 00000380 0004000C            <1> 		dw	0x0400, 0x0C00
    58 00000384 0005000D            <1> 		dw	0x0500, 0x0D00
    59 00000388 0006000E            <1> 		dw	0x0600, 0x0E00
    60 0000038C 0007000F            <1> 		dw	0x0700, 0x0F00
    63                                  %include    "../modules/protect/draw_pixel.s"
     1                              <1> draw_pixel:
     2                              <1> 
     3 00000390 55                  <1>         push    ebp
     4 00000391 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000393 50                  <1>         push    eax
     7 00000394 53                  <1>         push    ebx
     8 00000395 51                  <1>         push    ecx
     9 00000396 57                  <1>         push    edi
    10                              <1> 
    11 00000397 8B7D0C              <1>         mov     edi, [ebp + 12]
    12 0000039A C1E704              <1>         shl     edi, 4
    13 0000039D 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA_0000]
    14                              <1> 
    15 000003A4 8B5D08              <1>         mov     ebx, [ebp + 8]
    16 000003A7 89D9                <1>         mov     ecx, ebx
    17 000003A9 C1EB03              <1>         shr     ebx, 3
    18 000003AC 01DF                <1>         add     edi, ebx
    19                              <1> 
    20 000003AE 83E107              <1>         and     ecx, 0x07
    21 000003B1 BB80000000          <1>         mov     ebx, 0x80
    22 000003B6 D3EB                <1>         shr     ebx, cl
    23                              <1> 
    24 000003B8 8B4D10              <1>         mov     ecx, [ebp + 16]
    25                              <1> 
    26 000003BB 6A03E84EFDFFFF6683- <1>         cdecl   vga_set_read_plane, 0x03
    26 000003C4 C404                <1>
    27 000003C6 6A08E85CFDFFFF6683- <1>         cdecl   vga_set_write_plane, 0x08
    27 000003CF C404                <1>
    28 000003D1 516A085753E8BAFDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x08, ecx
    28 000003DA FF6683C410          <1>
    29                              <1> 
    30 000003DF 6A02E82AFDFFFF6683- <1>         cdecl   vga_set_read_plane, 0x02
    30 000003E8 C404                <1>
    31 000003EA 6A04E838FDFFFF6683- <1>         cdecl   vga_set_write_plane, 0x04
    31 000003F3 C404                <1>
    32 000003F5 516A045753E896FDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x04, ecx
    32 000003FE FF6683C410          <1>
    33                              <1> 
    34 00000403 6A01E806FDFFFF6683- <1>         cdecl   vga_set_read_plane, 0x01
    34 0000040C C404                <1>
    35 0000040E 6A02E814FDFFFF6683- <1>         cdecl   vga_set_write_plane, 0x02
    35 00000417 C404                <1>
    36 00000419 516A025753E872FDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x02, ecx
    36 00000422 FF6683C410          <1>
    37                              <1> 
    38 00000427 6A00E8E2FCFFFF6683- <1>         cdecl   vga_set_read_plane, 0x00
    38 00000430 C404                <1>
    39 00000432 6A01E8F0FCFFFF6683- <1>         cdecl   vga_set_write_plane, 0x01
    39 0000043B C404                <1>
    40 0000043D 516A015753E84EFDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x01, ecx
    40 00000446 FF6683C410          <1>
    41                              <1> 
    42 0000044B 5F                  <1>         pop     edi
    43 0000044C 59                  <1>         pop     ecx
    44 0000044D 5B                  <1>         pop     ebx
    45 0000044E 58                  <1>         pop     eax
    46                              <1> 
    47 0000044F 89EC                <1>         mov     esp, ebp
    48 00000451 5D                  <1>         pop     ebp
    49                              <1> 
    50 00000452 C3                  <1>         ret
    64                                  %include    "../modules/protect/draw_line.s"
     1                              <1> draw_line:
     2                              <1> 
     3 00000453 55                  <1>         push    ebp
     4 00000454 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000456 6A00                <1>         push    dword 0
     7 00000458 6A00                <1>         push    dword 0
     8 0000045A 6A00                <1>         push    dword 0
     9 0000045C 6A00                <1>         push    dword 0
    10 0000045E 6A00                <1>         push    dword 0
    11 00000460 6A00                <1>         push    dword 0
    12 00000462 6A00                <1>         push    dword 0
    13                              <1> 
    14 00000464 50                  <1>         push    eax
    15 00000465 53                  <1>         push    ebx
    16 00000466 51                  <1>         push    ecx
    17 00000467 52                  <1>         push    edx
    18 00000468 56                  <1>         push    esi
    19 00000469 57                  <1>         push    edi
    20                              <1> 
    21 0000046A 8B4508              <1>         mov     eax, [ebp + 8]
    22 0000046D 8B5D10              <1>         mov     ebx, [ebp + 16]
    23 00000470 29C3                <1>         sub     ebx, eax
    24 00000472 7D09                <1>         jge     .10F
    25                              <1> 
    26 00000474 F7DB                <1>         neg     ebx
    27 00000476 BEFFFFFFFF          <1>         mov     esi, -1
    28 0000047B EB05                <1>         jmp     .10E
    29                              <1> .10F:
    30                              <1> 
    31 0000047D BE01000000          <1>         mov     esi, 1
    32                              <1> .10E:
    33                              <1> 
    34 00000482 8B4D0C              <1>         mov     ecx, [ebp + 12]
    35 00000485 8B5514              <1>         mov     edx, [ebp + 20]
    36 00000488 29CA                <1>         sub     edx, ecx
    37 0000048A 7D09                <1>         jge     .20F
    38                              <1> 
    39 0000048C F7DA                <1>         neg     edx
    40 0000048E BFFFFFFFFF          <1>         mov     edi, -1
    41 00000493 EB05                <1>         jmp     .20E
    42                              <1> .20F:
    43                              <1> 
    44 00000495 BF01000000          <1>         mov     edi, 1
    45                              <1> .20E:
    46                              <1> 
    47 0000049A 8945F8              <1>         mov     [ebp - 8], eax
    48 0000049D 895DF4              <1>         mov     [ebp - 12], ebx
    49 000004A0 8975F0              <1>         mov     [ebp - 16], esi
    50                              <1> 
    51 000004A3 894DEC              <1>         mov     [ebp - 20], ecx
    52 000004A6 8955E8              <1>         mov     [ebp - 24], edx
    53 000004A9 897DE4              <1>         mov     [ebp - 28], edi
    54                              <1> 
    55 000004AC 39D3                <1>         cmp     ebx, edx
    56 000004AE 7F08                <1>         jg      .22F
    57                              <1> 
    58 000004B0 8D75EC              <1>         lea     esi, [ebp - 20]
    59 000004B3 8D7DF8              <1>         lea     edi, [ebp - 8]
    60                              <1> 
    61 000004B6 EB06                <1>         jmp     .22E
    62                              <1> .22F:
    63                              <1> 
    64 000004B8 8D75F8              <1>         lea     esi, [ebp - 8]
    65 000004BB 8D7DEC              <1>         lea     edi, [ebp - 20]
    66                              <1> .22E:
    67                              <1> 
    68 000004BE 8B4EFC              <1>         mov     ecx, [esi - 4]
    69 000004C1 83F900              <1>         cmp     ecx, 0
    70 000004C4 7505                <1>         jnz     .30E
    71 000004C6 B901000000          <1>         mov     ecx, 1
    72                              <1> .30E:
    73                              <1> 
    74                              <1> .50L:
    75                              <1> 
    76 000004CB FF7518FF75ECFF75F8- <1>         cdecl   draw_pixel, dword [ebp - 8], dword [ebp - 20], dword [ebp + 24]
    76 000004D4 E8B7FEFFFF6683C40C  <1>
    77                              <1> 
    78 000004DD 8B46F8              <1>         mov     eax, [esi - 8]
    79 000004E0 0106                <1>         add     [esi - 0], eax
    80                              <1> 
    81 000004E2 8B45FC              <1>         mov     eax, [ebp - 4]
    82 000004E5 0347FC              <1>         add     eax, [edi - 4]
    83 000004E8 8B5EFC              <1>         mov     ebx, [esi - 4]
    84                              <1> 
    85 000004EB 39D8                <1>         cmp     eax, ebx
    86 000004ED 7C07                <1>         jl      .52E
    87 000004EF 29D8                <1>         sub     eax, ebx
    88                              <1> 
    89 000004F1 8B5FF8              <1>         mov     ebx, [edi - 8]
    90 000004F4 011F                <1>         add     [edi - 0], ebx
    91                              <1> .52E:
    92                              <1> 
    93 000004F6 8945FC              <1>         mov     [ebp - 4], eax
    94                              <1> 
    95 000004F9 E2D0                <1>         loop    .50L
    96                              <1> .50E:
    97                              <1> 
    98 000004FB 5F                  <1>         pop     edi
    99 000004FC 5E                  <1>         pop     esi
   100 000004FD 5A                  <1>         pop     edx
   101 000004FE 59                  <1>         pop     ecx
   102 000004FF 5B                  <1>         pop     ebx
   103 00000500 58                  <1>         pop     eax
   104                              <1> 
   105 00000501 89EC                <1>         mov     esp, ebp
   106 00000503 5D                  <1>         pop     ebp
   107                              <1> 
   108 00000504 C3                  <1>         ret
    65                                  %include    "../modules/protect/draw_rect.s"
     1                              <1> draw_rect:
     2                              <1> 
     3 00000505 55                  <1>         push    ebp
     4 00000506 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000508 50                  <1>         push    eax
     7 00000509 53                  <1>         push    ebx
     8 0000050A 51                  <1>         push    ecx
     9 0000050B 52                  <1>         push    edx
    10 0000050C 56                  <1>         push    esi
    11                              <1> 
    12 0000050D 8B4508              <1>         mov     eax, [ebp + 8]
    13 00000510 8B5D0C              <1>         mov     ebx, [ebp + 12]
    14 00000513 8B4D10              <1>         mov     ecx, [ebp + 16]
    15 00000516 8B5514              <1>         mov     edx, [ebp + 20]
    16 00000519 8B7518              <1>         mov     esi, [ebp + 24]
    17                              <1> 
    18 0000051C 39C8                <1>         cmp     eax, ecx
    19 0000051E 7C01                <1>         jl      .10E
    20 00000520 91                  <1>         xchg    eax, ecx
    21                              <1> .10E:
    22                              <1> 
    23 00000521 39D3                <1>         cmp     ebx, edx
    24 00000523 7C02                <1>         jl      .20E
    25 00000525 87DA                <1>         xchg    ebx, edx
    26                              <1> .20E:
    27                              <1> 
    28 00000527 5653515350E822FFFF- <1>         cdecl   draw_line, eax, ebx, ecx, ebx, esi
    28 00000530 FF6683C414          <1>
    29 00000535 5652505350E814FFFF- <1>         cdecl   draw_line, eax, ebx, eax, edx, esi
    29 0000053E FF6683C414          <1>
    30                              <1> 
    31 00000543 4A                  <1>         dec     edx
    32 00000544 5652515250E805FFFF- <1>         cdecl   draw_line, eax, edx, ecx, edx, esi
    32 0000054D FF6683C414          <1>
    33 00000552 42                  <1>         inc     edx
    34                              <1> 
    35 00000553 4A                  <1>         dec     edx
    36 00000554 5652515351E8F5FEFF- <1>         cdecl   draw_line, ecx, ebx, ecx, edx, esi
    36 0000055D FF6683C414          <1>
    37                              <1> 
    38 00000562 5E                  <1>         pop     esi
    39 00000563 5A                  <1>         pop     edx
    40 00000564 59                  <1>         pop     ecx
    41 00000565 5B                  <1>         pop     ebx
    42 00000566 58                  <1>         pop     eax
    43                              <1> 
    44 00000567 89EC                <1>         mov     esp, ebp
    45 00000569 5D                  <1>         pop     ebp
    46                              <1> 
    47 0000056A C3                  <1>         ret
    66                                  %include    "../modules/protect/itoa.s"
     1                              <1> itoa:
     2                              <1> 
     3 0000056B 55                  <1>         push    ebp
     4 0000056C 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 0000056E 50                  <1>         push    eax
     7 0000056F 53                  <1>         push    ebx
     8 00000570 51                  <1>         push    ecx
     9 00000571 52                  <1>         push    edx
    10 00000572 56                  <1>         push    esi
    11 00000573 57                  <1>         push    edi
    12                              <1> 
    13 00000574 8B4508              <1>         mov     eax, [ebp + 8]
    14 00000577 8B750C              <1>         mov     esi, [ebp + 12]
    15 0000057A 8B4D10              <1>         mov     ecx, [ebp + 16]
    16                              <1> 
    17 0000057D 89F7                <1>         mov     edi, esi
    18 0000057F 01CF                <1>         add     edi, ecx
    19 00000581 4F                  <1>         dec     edi
    20                              <1> 
    21 00000582 8B5D18              <1>         mov     ebx, [ebp + 24]
    22                              <1> 
    23 00000585 F7C301000000        <1>         test    ebx, 0b0001
    24 0000058B 7408                <1> .10Q:   je      .10E
    25 0000058D 83F800              <1>         cmp     eax, 0
    26 00000590 7D03                <1> .12Q:   jge     .12E
    27 00000592 83CB02              <1>         or      ebx, 0b0010
    28                              <1> .12E:
    29                              <1> .10E:
    30                              <1> 
    31 00000595 F7C302000000        <1>         test    ebx, 0b0010
    32 0000059B 7410                <1> .20Q:   je      .20E
    33 0000059D 83F800              <1>         cmp     eax, 0
    34 000005A0 7D07                <1> .22Q:   jge     .22F
    35 000005A2 F7D8                <1>         neg     eax
    36 000005A4 C6062D              <1>         mov     [esi], byte '-'
    37 000005A7 EB03                <1>         jmp     .22E
    38                              <1> .22F:
    39                              <1> 
    40 000005A9 C6062B              <1>         mov     [esi], byte '+'
    41                              <1> .22E:
    42 000005AC 49                  <1>         dec     ecx
    43                              <1> .20E:
    44                              <1> 
    45 000005AD 8B5D14              <1>         mov     ebx, [ebp + 20]
    46                              <1> .30L:
    47                              <1> 
    48 000005B0 BA00000000          <1>         mov     edx, 0
    49 000005B5 F7F3                <1>         div     ebx
    50                              <1> 
    51 000005B7 89D6                <1>         mov     esi, edx
    52 000005B9 8A96[E5050000]      <1>         mov     dl, byte [.ascii + esi]
    53                              <1> 
    54 000005BF 8817                <1>         mov     [edi], dl
    55 000005C1 4F                  <1>         dec     edi
    56                              <1> 
    57 000005C2 83F800              <1>         cmp     eax, 0
    58 000005C5 E0E9                <1>         loopnz  .30L
    59                              <1> .30E:
    60                              <1> 
    61 000005C7 83F900              <1>         cmp     ecx, 0
    62 000005CA 740F                <1> .40Q:   je      .40E
    63 000005CC B020                <1>         mov     al, ' '
    64 000005CE 6667837E1804        <1>         cmp     [bp + 24], word 0b0100
    65 000005D4 7502                <1> .42Q:   jne     .42E
    66 000005D6 B030                <1>         mov     al, '0'
    67                              <1> .42E:
    68 000005D8 FD                  <1>         std
    69 000005D9 F3AA                <1>         rep stosb
    70                              <1> .40E:
    71                              <1> 
    72 000005DB 5F                  <1>         pop     edi
    73 000005DC 5E                  <1>         pop     esi
    74 000005DD 5A                  <1>         pop     edx
    75 000005DE 59                  <1>         pop     ecx
    76 000005DF 5B                  <1>         pop     ebx
    77 000005E0 58                  <1>         pop     eax
    78                              <1> 
    79 000005E1 89EC                <1>         mov     esp, ebp
    80 000005E3 5D                  <1>         pop     ebp
    81                              <1> 
    82 000005E4 C3                  <1>         ret
    83                              <1> 
    84 000005E5 303132333435363738- <1> .ascii  db      "0123456789ABCDEF"
    84 000005EE 39414243444546      <1>
    67                                  %include    "../modules/protect/rtc.s"
     1                              <1> rtc_get_time:
     2                              <1> 
     3 000005F5 55                  <1>         push    ebp
     4 000005F6 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 000005F8 53                  <1>         push    ebx
     7                              <1> 
     8 000005F9 B00A                <1>         mov     al, 0x0A
     9 000005FB E670                <1>         out     0x70, al
    10 000005FD E471                <1>         in      al, 0x71
    11 000005FF A880                <1>         test    al, 0x80
    12 00000601 7407                <1>         je      .10F
    13 00000603 B801000000          <1>         mov     eax, 1
    14 00000608 EB27                <1>         jmp     .10E
    15                              <1> .10F:
    16                              <1> 
    17 0000060A B004                <1>         mov     al, 0x04
    18 0000060C E670                <1>         out     0x70, al
    19 0000060E E471                <1>         in      al, 0x71
    20                              <1> 
    21 00000610 C1E008              <1>         shl     eax, 8
    22                              <1> 
    23 00000613 B002                <1>         mov     al, 0x02
    24 00000615 E670                <1>         out     0x70, al
    25 00000617 E471                <1>         in      al, 0x71
    26                              <1> 
    27 00000619 C1E008              <1>         shl     eax, 8
    28                              <1> 
    29 0000061C B000                <1>         mov     al, 0x00
    30 0000061E E670                <1>         out     0x70, al
    31 00000620 E471                <1>         in      al, 0x71
    32                              <1> 
    33 00000622 25FFFFFF00          <1>         and     eax, 0x00_FF_FF_FF
    34                              <1> 
    35 00000627 8B5D08              <1>         mov     ebx, [ebp + 8]
    36 0000062A 8903                <1>         mov     [ebx], eax
    37                              <1> 
    38 0000062C B800000000          <1>         mov     eax, 0
    39                              <1> .10E:
    40                              <1> 
    41 00000631 5B                  <1>         pop     ebx
    42                              <1> 
    43 00000632 89EC                <1>         mov     esp, ebp
    44 00000634 5D                  <1>         pop     ebp
    45                              <1> 
    46 00000635 C3                  <1>         ret
    68                                  %include    "../modules/protect/draw_time.s"
     1                              <1> draw_time:
     2                              <1> 
     3 00000636 55                  <1>         push    ebp
     4 00000637 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000639 50                  <1>         push    eax
     7 0000063A 53                  <1>         push    ebx
     8                              <1> 
     9 0000063B 8B4514              <1>         mov     eax, [ebp + 20]
    10 0000063E 3B05[BC060000]      <1>         cmp     eax, [.last]
    11 00000644 7468                <1>         je      .10E
    12                              <1> 
    13 00000646 A3[BC060000]        <1>         mov     [.last], eax
    14                              <1> 
    15 0000064B BB00000000          <1>         mov     ebx, 0
    16 00000650 0FB6D8              <1>         movzx   ebx, al
    17 00000653 6A046A106A0268-     <1>         cdecl   itoa, ebx, .sec, 2, 16, 0b0100
    17 0000065A [CA060000]53E807FF- <1>
    17 00000662 FFFF6683C414        <1>
    18                              <1> 
    19 00000668 88E3                <1>         mov     bl, ah
    20 0000066A 6A046A106A0268-     <1>         cdecl   itoa, ebx, .min, 2, 16, 0b0100
    20 00000671 [C7060000]53E8F0FE- <1>
    20 00000679 FFFF6683C414        <1>
    21                              <1> 
    22 0000067F C1E810              <1>         shr     eax, 16
    23 00000682 6A046A106A0268-     <1>         cdecl   itoa, eax, .hour, 2, 16, 0b0100
    23 00000689 [C4060000]50E8D8FE- <1>
    23 00000691 FFFF6683C414        <1>
    24                              <1> 
    25 00000697 68[C4060000]FF7510- <1>         cdecl   draw_str, dword [ebp + 8], dword [ebp + 12], dword [ebp + 16], .hour
    25 0000069F FF750CFF7508E822FC- <1>
    25 000006A8 FFFF6683C410        <1>
    26                              <1> 
    27                              <1> .10E:
    28                              <1> 
    29 000006AE 5B                  <1>         pop     ebx
    30 000006AF 58                  <1>         pop     eax
    31                              <1> 
    32 000006B0 89EC                <1>         mov     esp, ebp
    33 000006B2 5D                  <1>         pop     ebp
    34                              <1> 
    35 000006B3 C3                  <1>         ret
    36                              <1> 
    37                              <1> ALIGN 2, db 0
    38 000006B4 0000000000000000    <1> .temp   dq  0
    39 000006BC 0000000000000000    <1> .last   dq  0
    40 000006C4 5A5A3A              <1> .hour   db  "ZZ:"
    41 000006C7 5A5A3A              <1> .min    db  "ZZ:"
    42 000006CA 5A5A00              <1> .sec    db  "ZZ", 0
    69                                  %include    "../modules/protect/interrupt.s"
     1 000006CD 90<rept>            <1> ALIGN 4
     2 000006D0 FF07                <1> IDTR:   dw      8 * 256 -1
     3 000006D2 00001000            <1>         dd      VECT_BASE
     4                              <1> 
     5                              <1> init_int:
     6                              <1> 
     7 000006D6 50                  <1>         push    eax
     8 000006D7 53                  <1>         push    ebx
     9 000006D8 51                  <1>         push    ecx
    10 000006D9 57                  <1>         push    edi
    11                              <1> 
    12 000006DA 8D05[20080000]      <1>         lea     eax, [int_default]
    13 000006E0 BB008E0800          <1>         mov     ebx, 0x0008_8E00
    14 000006E5 6693                <1>         xchg    ax, bx
    15                              <1> 
    16 000006E7 B900010000          <1>         mov     ecx, 256
    17 000006EC BF00001000          <1>         mov     edi, VECT_BASE
    18                              <1> 
    19                              <1> .10L:
    20                              <1> 
    21 000006F1 891F                <1>         mov     [edi + 0], ebx
    22 000006F3 894704              <1>         mov     [edi + 4], eax
    23 000006F6 83C708              <1>         add     edi, 8
    24 000006F9 E2F6                <1>         loop    .10L
    25                              <1> 
    26 000006FB 0F011D[D0060000]    <1>         lidt    [IDTR]
    27                              <1> 
    28 00000702 5F                  <1>         pop     edi
    29 00000703 59                  <1>         pop     ecx
    30 00000704 5B                  <1>         pop     ebx
    31 00000705 58                  <1>         pop     eax
    32                              <1> 
    33 00000706 C3                  <1>         ret
    34                              <1> 
    35                              <1> 
    36                              <1> int_stop:
    37                              <1> 
    38 00000707 FB                  <1>         sti
    39                              <1> 
    40 00000708 50680F0600006A0F6A- <1>         cdecl   draw_str, 25, 15, 0x060F, eax
    40 00000711 19E8B5FBFFFF6683C4- <1>
    40 0000071A 10                  <1>
    41                              <1> 
    42 0000071B 8B0424              <1>         mov     eax, [esp + 0]
    43 0000071E 6A046A106A0868-     <1>         cdecl   itoa, eax, .p1, 8, 16, 0b0100
    43 00000725 [E3070000]50E83CFE- <1>
    43 0000072D FFFF6683C414        <1>
    44                              <1> 
    45 00000733 8B442404            <1>         mov     eax, [esp + 4]
    46 00000737 6A046A106A0868-     <1>         cdecl   itoa, eax, .p2, 8, 16, 0b0100
    46 0000073E [F4070000]50E823FE- <1>
    46 00000746 FFFF6683C414        <1>
    47                              <1> 
    48 0000074C 8B442408            <1>         mov     eax, [esp + 8]
    49 00000750 6A046A106A0868-     <1>         cdecl   itoa, eax, .p3, 8, 16, 0b0100
    49 00000757 [05080000]50E80AFE- <1>
    49 0000075F FFFF6683C414        <1>
    50                              <1> 
    51 00000765 8B44240C            <1>         mov     eax, [esp + 12]
    52 00000769 6A046A106A0868-     <1>         cdecl   itoa, eax, .p4, 8, 16, 0b0100
    52 00000770 [16080000]50E8F1FD- <1>
    52 00000778 FFFF6683C414        <1>
    53                              <1> 
    54 0000077E 68[DC070000]68040F- <1>         cdecl   draw_str, 25, 16, 0x0F04, .s1
    54 00000786 00006A106A19E83BFB- <1>
    54 0000078F FFFF6683C410        <1>
    55 00000795 68[ED070000]68040F- <1>         cdecl   draw_str, 25, 17, 0x0F04, .s2
    55 0000079D 00006A116A19E824FB- <1>
    55 000007A6 FFFF6683C410        <1>
    56 000007AC 68[FE070000]68040F- <1>         cdecl   draw_str, 25, 18, 0x0F04, .s3
    56 000007B4 00006A126A19E80DFB- <1>
    56 000007BD FFFF6683C410        <1>
    57 000007C3 68[0F080000]68040F- <1>         cdecl   draw_str, 25, 19, 0x0F04, .s4
    57 000007CB 00006A136A19E8F6FA- <1>
    57 000007D4 FFFF6683C410        <1>
    58                              <1> 
    59 000007DA EBFE                <1>         jmp     $
    60                              <1> 
    61 000007DC 4553502B20303A      <1> .s1		db	"ESP+ 0:"
    62 000007E3 5F5F5F5F5F5F5F5F20- <1> .p1		db	"________ ", 0
    62 000007EC 00                  <1>
    63 000007ED 2020202B20343A      <1> .s2		db	"   + 4:"
    64 000007F4 5F5F5F5F5F5F5F5F20- <1> .p2		db	"________ ", 0
    64 000007FD 00                  <1>
    65 000007FE 2020202B20383A      <1> .s3		db	"   + 8:"
    66 00000805 5F5F5F5F5F5F5F5F20- <1> .p3		db	"________ ", 0
    66 0000080E 00                  <1>
    67 0000080F 2020202B31323A      <1> .s4		db	"   +12:"
    68 00000816 5F5F5F5F5F5F5F5F20- <1> .p4		db	"________ ", 0
    68 0000081F 00                  <1>
    69                              <1> 
    70                              <1> 
    71                              <1> int_default:
    72                              <1> 
    73 00000820 9C                  <1>         pushf
    74 00000821 0E                  <1>         push    cs
    75 00000822 68[07070000]        <1>         push    int_stop
    76                              <1> 
    77 00000827 B8[2D080000]        <1>         mov     eax, .s0
    78 0000082C CF                  <1>         iret
    79                              <1> 
    80 0000082D 203C2020202053544F- <1> .s0     db  " <    STOP    > ", 0
    80 00000836 50202020203E2000    <1>
    81                              <1> 
    82                              <1> 
    83                              <1> int_zero_div:
    84                              <1> 
    85 0000083E 9C                  <1>         pushf
    86 0000083F 0E                  <1>         push    cs
    87 00000840 68[07070000]        <1>         push    int_stop
    88                              <1> 
    89 00000845 B8[4B080000]        <1>         mov     eax, .s0
    90 0000084A CF                  <1>         iret
    91                              <1> 
    92 0000084B 203C20205A45524F20- <1> .s0     db  " <  ZERO DIV  > ", 0
    92 00000854 44495620203E2000    <1>
    70                                  %include    "../modules/protect/pic.s"
     1                              <1> init_pic:
     2                              <1> 
     3 0000085C 50                  <1>         push    eax
     4                              <1> 
     5                              <1>         outp    0x20, 0x11
     5 0000085D B011                <2>  mov al, %2
     5 0000085F E620                <2>  out %1, al
     6                              <1>         outp    0x21, 0x20
     6 00000861 B020                <2>  mov al, %2
     6 00000863 E621                <2>  out %1, al
     7                              <1>         outp    0x21, 0x04
     7 00000865 B004                <2>  mov al, %2
     7 00000867 E621                <2>  out %1, al
     8                              <1>         outp    0x21, 0x05
     8 00000869 B005                <2>  mov al, %2
     8 0000086B E621                <2>  out %1, al
     9                              <1>         outp    0x21, 0xFF
     9 0000086D B0FF                <2>  mov al, %2
     9 0000086F E621                <2>  out %1, al
    10                              <1> 
    11                              <1>         outp    0xA0, 0x11
    11 00000871 B011                <2>  mov al, %2
    11 00000873 E6A0                <2>  out %1, al
    12                              <1>         outp    0xA1, 0x28
    12 00000875 B028                <2>  mov al, %2
    12 00000877 E6A1                <2>  out %1, al
    13                              <1>         outp    0xA1, 0x02
    13 00000879 B002                <2>  mov al, %2
    13 0000087B E6A1                <2>  out %1, al
    14                              <1>         outp    0xA1, 0x01
    14 0000087D B001                <2>  mov al, %2
    14 0000087F E6A1                <2>  out %1, al
    15                              <1>         outp    0xA1, 0xFF
    15 00000881 B0FF                <2>  mov al, %2
    15 00000883 E6A1                <2>  out %1, al
    16                              <1> 
    17 00000885 58                  <1>         pop     eax
    18                              <1> 
    19 00000886 C3                  <1>         ret
    71                                  %include    "../modules/protect/int_rtc.s"
     1                              <1> rtc_int_en:
     2                              <1> 
     3 00000887 55                  <1>         push    ebp
     4 00000888 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 0000088A 50                  <1>         push    eax
     7                              <1> 
     8                              <1>         outp    0x70, 0x0B
     8 0000088B B00B                <2>  mov al, %2
     8 0000088D E670                <2>  out %1, al
     9                              <1> 
    10 0000088F E471                <1>         in      al, 0x71
    11 00000891 0A4508              <1>         or      al, [ebp + 8]
    12                              <1> 
    13 00000894 E671                <1>         out     0x71, al
    14                              <1> 
    15 00000896 58                  <1>         pop     eax
    16                              <1> 
    17 00000897 89EC                <1>         mov     esp, ebp
    18 00000899 5D                  <1>         pop     ebp
    19                              <1> 
    20 0000089A C3                  <1>         ret
    21                              <1> 
    22                              <1> 
    23                              <1> int_rtc:
    24                              <1> 
    25 0000089B 60                  <1>         pusha
    26 0000089C 1E                  <1>         push    ds
    27 0000089D 06                  <1>         push    es
    28                              <1> 
    29 0000089E 66B81000            <1>         mov     ax, 0x0010
    30 000008A2 8ED8                <1>         mov     ds, ax
    31 000008A4 8EC0                <1>         mov     es, ax
    32                              <1> 
    33 000008A6 68[0C010000]E845FD- <1>         cdecl   rtc_get_time, RTC_TIME
    33 000008AE FFFF6683C404        <1>
    34                              <1> 
    35                              <1>         outp    0x70, 0x0C
    35 000008B4 B00C                <2>  mov al, %2
    35 000008B6 E670                <2>  out %1, al
    36 000008B8 E471                <1>         in      al, 0x71
    37                              <1> 
    38                              <1>         outp    0xA0, 0x20
    38 000008BA B020                <2>  mov al, %2
    38 000008BC E6A0                <2>  out %1, al
    39                              <1>         outp    0x20, 0x20
    39 000008BE B020                <2>  mov al, %2
    39 000008C0 E620                <2>  out %1, al
    40                              <1> 
    41 000008C2 07                  <1>         pop     es
    42 000008C3 1F                  <1>         pop     ds
    43 000008C4 61                  <1>         popa
    44                              <1> 
    45 000008C5 CF                  <1>         iret
    72                                  %include    "../modules/protect/int_keyboard.s"
     1                              <1> int_keyboard:
     2                              <1> 
     3 000008C6 60                  <1>         pusha
     4 000008C7 1E                  <1>         push    ds
     5 000008C8 06                  <1>         push    es
     6                              <1> 
     7 000008C9 66B81000            <1>         mov     ax, 0x0010
     8 000008CD 8ED8                <1>         mov     ds, ax
     9 000008CF 8EC0                <1>         mov     es, ax
    10                              <1> 
    11 000008D1 E460                <1>         in      al, 0x60
    12                              <1> 
    13 000008D3 5068[EC080000]E856- <1>         cdecl   ring_wr, _KEY_BUFF, eax
    13 000008DB 0000006683C408      <1>
    14                              <1> 
    15                              <1>         outp    0x20, 0x20
    15 000008E2 B020                <2>  mov al, %2
    15 000008E4 E620                <2>  out %1, al
    16                              <1> 
    17 000008E6 07                  <1>         pop     es
    18 000008E7 1F                  <1>         pop     ds
    19 000008E8 61                  <1>         popa
    20                              <1> 
    21 000008E9 CF                  <1>         iret
    22                              <1> 
    23 000008EA 00<rept>            <1> ALIGN 4, db 0
    24 000008EC 00<rept>            <1> _KEY_BUFF:  times ring_buff_size db 0
    73                                  %include    "../modules/protect/ring_buff.s"
     1                              <1> ring_rd:
     2                              <1> 
     3 00000904 55                  <1>         push    ebp
     4 00000905 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000907 53                  <1>         push    ebx
     7 00000908 56                  <1>         push    esi
     8 00000909 57                  <1>         push    edi
     9                              <1> 
    10 0000090A 8B7508              <1>         mov     esi, [ebp + 8]
    11 0000090D 8B7D0C              <1>         mov     edi, [ebp + 12]
    12                              <1> 
    13 00000910 B800000000          <1>         mov     eax, 0
    14 00000915 8B1E                <1>         mov     ebx, [esi + ring_buff.rp]
    15 00000917 3B5E04              <1>         cmp     ebx, [esi + ring_buff.wp]
    16 0000091A 7411                <1>         je      .10E
    17                              <1> 
    18 0000091C 8A441E08            <1>         mov     al, [esi + ring_buff.item + ebx]
    19                              <1> 
    20 00000920 8807                <1>         mov     [edi], al
    21                              <1> 
    22 00000922 43                  <1>         inc     ebx
    23 00000923 83E30F              <1>         and     ebx, RING_INDEX_MASK
    24 00000926 891E                <1>         mov     [esi + ring_buff.rp], ebx
    25                              <1> 
    26 00000928 B801000000          <1>         mov     eax, 1
    27                              <1> .10E:
    28                              <1> 
    29 0000092D 5F                  <1>         pop     edi
    30 0000092E 5E                  <1>         pop     esi
    31 0000092F 5B                  <1>         pop     ebx
    32                              <1> 
    33 00000930 89EC                <1>         mov     esp, ebp
    34 00000932 5D                  <1>         pop     ebp
    35                              <1> 
    36 00000933 C3                  <1>         ret
    37                              <1> 
    38                              <1> 
    39                              <1> ring_wr:
    40                              <1> 
    41 00000934 55                  <1>         push    ebp
    42 00000935 89E5                <1>         mov     ebp, esp
    43                              <1> 
    44 00000937 53                  <1>         push    ebx
    45 00000938 51                  <1>         push    ecx
    46 00000939 56                  <1>         push    esi
    47                              <1> 
    48 0000093A 8B7508              <1>         mov     esi, [ebp + 8]
    49                              <1> 
    50 0000093D B800000000          <1>         mov     eax, 0
    51 00000942 8B5E04              <1>         mov     ebx, [esi + ring_buff.wp]
    52 00000945 89D9                <1>         mov     ecx, ebx
    53 00000947 41                  <1>         inc     ecx
    54 00000948 83E10F              <1>         and     ecx, RING_INDEX_MASK
    55                              <1> 
    56 0000094B 3B0E                <1>         cmp     ecx, [esi + ring_buff.rp]
    57 0000094D 740F                <1>         je      .10E
    58                              <1> 
    59 0000094F 8A450C              <1>         mov     al, [ebp + 12]
    60                              <1> 
    61 00000952 88441E08            <1>         mov     [esi + ring_buff.item + ebx], al
    62 00000956 894E04              <1>         mov     [esi + ring_buff.wp], ecx
    63 00000959 B801000000          <1>         mov     eax, 1
    64                              <1> .10E:
    65                              <1> 
    66 0000095E 5E                  <1>         pop     esi
    67 0000095F 59                  <1>         pop     ecx
    68 00000960 5B                  <1>         pop     ebx
    69                              <1> 
    70 00000961 89EC                <1>         mov     esp, ebp
    71 00000963 5D                  <1>         pop     ebp
    72                              <1> 
    73 00000964 C3                  <1>         ret
    74                              <1> 
    75                              <1> 
    76                              <1> draw_key:
    77                              <1> 
    78 00000965 55                  <1>         push    ebp
    79 00000966 89E5                <1>         mov     ebp, esp
    80                              <1> 
    81 00000968 60                  <1>         pusha
    82                              <1> 
    83 00000969 8B5508              <1>         mov     edx, [ebp + 8]
    84 0000096C 8B7D0C              <1>         mov     edi, [ebp + 12]
    85 0000096F 8B7510              <1>         mov     esi, [ebp + 16]
    86                              <1> 
    87 00000972 8B1E                <1>         mov     ebx, [esi + ring_buff.rp]
    88 00000974 8D7608              <1>         lea     esi, [esi + ring_buff.item]
    89 00000977 B910000000          <1>         mov     ecx, RING_ITEM_SIZE
    90                              <1> 
    91                              <1> .10L:
    92                              <1> 
    93 0000097C 4B                  <1>         dec     ebx
    94 0000097D 83E30F              <1>         and     ebx, RING_INDEX_MASK
    95 00000980 8A041E              <1>         mov     al, [esi + ebx]
    96                              <1> 
    97 00000983 6A046A106A0268-     <1>         cdecl   itoa, eax, .tmp, 2, 16, 0b0100
    97 0000098A [B4090000]50E8D7FB- <1>
    97 00000992 FFFF6683C414        <1>
    98 00000998 68[B4090000]6A0257- <1>         cdecl   draw_str, edx, edi, 0x02, .tmp
    98 000009A0 52E826F9FFFF6683C4- <1>
    98 000009A9 10                  <1>
    99                              <1> 
   100 000009AA 83C203              <1>         add     edx, 3
   101                              <1> 
   102 000009AD E2CD                <1>         loop    .10L
   103                              <1> .10E:
   104                              <1> 
   105 000009AF 61                  <1>         popa
   106                              <1> 
   107 000009B0 89EC                <1>         mov     esp, ebp
   108 000009B2 5D                  <1>         pop     ebp
   109                              <1> 
   110 000009B3 C3                  <1>         ret
   111                              <1> 
   112 000009B4 2D2D2000            <1> .tmp    db "-- ", 0
    74                                  
    75 000009B8 00<rept>                        times KERNEL_SIZE -($ - $$) db 0
