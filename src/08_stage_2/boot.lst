     1                                          BOOT_LOAD       equ     0x7C00
     2                                  
     3                                          ORG     BOOT_LOAD
     4                                  
     5                                  %include    "../include/macro.s"
     1                              <1> %macro  cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep  %0 -1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate -1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if  1 < %0
    12                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
     6                                  
     7                                  entry:
     8                                  
     9 00000000 EB58                            jmp     ipl
    10 00000002 90<rept>                     times   90 - ($ - $$) db 0x90
    11                                  
    12                                  ipl:
    13 0000005A FA                              cli
    14                                      
    15 0000005B B80000                          mov     ax, 0x0000
    16 0000005E 8ED8                            mov     ds, ax
    17 00000060 8EC0                            mov     es, ax
    18 00000062 8ED0                            mov     ss, ax
    19 00000064 BC007C                          mov     sp, BOOT_LOAD
    20                                  
    21 00000067 FB                              sti
    22                                  
    23 00000068 8816[B800]                      mov     [BOOT.DRIVE], dl
    24                                  
    25 0000006C 68[9800]E8480083C4-             cdecl   puts, .s0
    25 00000074 02                 
    26                                  
    27 00000075 B402                            mov     ah, 0x02
    28 00000077 B001                            mov     al, 1
    29 00000079 B90200                          mov     cx, 0x0002
    30 0000007C B600                            mov     dh, 0x00
    31 0000007E 8A16[B800]                      mov     dl, [BOOT.DRIVE]
    32 00000082 BB007E                          mov     bx, 0x7C00 + 512
    33 00000085 CD13                            int     0x13
    34 00000087 730C                    .10Q:   jnc     .10E
    35 00000089 68[A500]E82B0083C4-     .10T:   cdecl   puts, .e0
    35 00000091 02                 
    36 00000092 E8C400                          call    reboot
    37                                  .10E:
    38                                  
    39 00000095 E96801                          jmp     stage_2
    40                                  
    41 00000098 426F6F74696E672E2E-     .s0     db  "Booting...", 0x0A, 0x0D, 0
    41 000000A1 2E0A0D00           
    42 000000A5 4572726F723A207365-     .e0     db  "Error: sector read", 0
    42 000000AE 63746F722072656164-
    42 000000B7 00                 
    43                                  
    44                                  ALIGN 2, db 0
    45                                  BOOT:
    46 000000B8 0000                    .DRIVE:     dw 0
    47                                  
    48                                  %include    "../modules/real/puts.s"
     1                              <1> puts:
     2                              <1> 
     3 000000BA 55                  <1>     push    bp
     4 000000BB 89E5                <1>     mov     bp, sp
     5                              <1> 
     6 000000BD 50                  <1>     push    ax
     7 000000BE 53                  <1>     push    bx
     8 000000BF 56                  <1>     push    si
     9                              <1> 
    10 000000C0 8B7604              <1>     mov     si, [bp + 4]
    11                              <1> 
    12 000000C3 B40E                <1>     mov     ah, 0x0E
    13 000000C5 BB0000              <1>     mov     bx, 0x0000
    14 000000C8 FC                  <1>     cld
    15                              <1> .10L:
    16                              <1> 
    17 000000C9 AC                  <1>     lodsb
    18                              <1> 
    19 000000CA 3C00                <1>     cmp     al, 0
    20 000000CC 7404                <1>     je      .10E
    21                              <1> 
    22 000000CE CD10                <1>     int     0x10
    23 000000D0 EBF7                <1>     jmp     .10L
    24                              <1> .10E:
    25                              <1> 
    26 000000D2 5E                  <1>     pop     si
    27 000000D3 5B                  <1>     pop     bx
    28 000000D4 58                  <1>     pop     ax
    29                              <1> 
    30 000000D5 89EC                <1>     mov     sp, bp
    31 000000D7 5D                  <1>     pop     bp
    32                              <1> 
    33 000000D8 C3                  <1>     ret
    49                                  %include    "../modules/real/itoa.s"
     1                              <1> itoa:
     2                              <1> 
     3 000000D9 55                  <1>         push    bp
     4 000000DA 89E5                <1>         mov     bp, sp
     5                              <1> 
     6 000000DC 50                  <1>         push    ax
     7 000000DD 53                  <1>         push    bx
     8 000000DE 51                  <1>         push    cx
     9 000000DF 52                  <1>         push    dx
    10 000000E0 56                  <1>         push    si
    11 000000E1 57                  <1>         push    di
    12                              <1> 
    13 000000E2 8B4604              <1>         mov     ax, [bp + 4]
    14 000000E5 8B7606              <1>         mov     si, [bp + 6]
    15 000000E8 8B4E08              <1>         mov     cx, [bp + 8]
    16                              <1> 
    17 000000EB 89F7                <1>         mov     di, si
    18 000000ED 01CF                <1>         add     di, cx
    19 000000EF 4F                  <1>         dec     di
    20                              <1> 
    21 000000F0 8B5E0C              <1>         mov     bx, word [bp + 12]
    22                              <1> 
    23 000000F3 F7C30100            <1>         test    bx, 0b0001
    24 000000F7 7408                <1> .10Q:   je      .10E
    25 000000F9 83F800              <1>         cmp     ax, 0
    26 000000FC 7D03                <1> .12Q:   jge     .12E
    27 000000FE 83CB02              <1>         or      bx, 0b0010
    28                              <1> .12E:
    29                              <1> .10E:
    30                              <1> 
    31 00000101 F7C30200            <1>         test    bx, 0b0010
    32 00000105 7410                <1> .20Q:   je      .20E
    33 00000107 83F800              <1>         cmp     ax, 0
    34 0000010A 7D07                <1> .22Q:   jge     .22F
    35 0000010C F7D8                <1>         neg     ax
    36 0000010E C6042D              <1>         mov     [si], byte '-'
    37 00000111 EB03                <1>         jmp     .22E
    38                              <1> .22F:
    39                              <1> 
    40 00000113 C6042B              <1>         mov     [si], byte '+'
    41                              <1> .22E:
    42 00000116 49                  <1>         dec     cx
    43                              <1> .20E:
    44                              <1> 
    45 00000117 8B5E0A              <1>         mov     bx, [bp + 10]
    46                              <1> .30L:
    47                              <1> 
    48 0000011A BA0000              <1>         mov     dx, 0
    49 0000011D F7F3                <1>         div     bx
    50                              <1> 
    51 0000011F 89D6                <1>         mov     si, dx
    52 00000121 8A94[4901]          <1>         mov     dl, byte [.ascii + si]
    53                              <1> 
    54 00000125 8815                <1>         mov     [di], dl
    55 00000127 4F                  <1>         dec     di
    56                              <1> 
    57 00000128 83F800              <1>         cmp     ax, 0
    58 0000012B E0ED                <1>         loopnz  .30L
    59                              <1> .30E:
    60                              <1> 
    61 0000012D 83F900              <1>         cmp     cx, 0
    62 00000130 740D                <1> .40Q:   je      .40E
    63 00000132 B020                <1>         mov     al, ' '
    64 00000134 837E0C04            <1>         cmp     [bp + 12], word 0b0100
    65 00000138 7502                <1> .42Q:   jne     .42E
    66 0000013A B030                <1>         mov     al, '0'
    67                              <1> .42E:
    68 0000013C FD                  <1>         std
    69 0000013D F3AA                <1>         rep stosb
    70                              <1> .40E:
    71                              <1> 
    72 0000013F 5F                  <1>         pop     di
    73 00000140 5E                  <1>         pop     si
    74 00000141 5A                  <1>         pop     dx
    75 00000142 59                  <1>         pop     cx
    76 00000143 5B                  <1>         pop     bx
    77 00000144 58                  <1>         pop     ax
    78                              <1> 
    79 00000145 89EC                <1>         mov     sp, bp
    80 00000147 5D                  <1>         pop     bp
    81                              <1> 
    82 00000148 C3                  <1>         ret
    83                              <1> 
    84 00000149 303132333435363738- <1> .ascii  db      "0123456789ABCDEF"
    84 00000152 39414243444546      <1>
    50                                  %include    "../modules/real/reboot.s"
     1                              <1> reboot:
     2                              <1> 
     3 00000159 68[7501]E85BFF83C4- <1>         cdecl   puts, .s0
     3 00000161 02                  <1>
     4                              <1> 
     5                              <1> .10L:
     6                              <1> 
     7 00000162 B410                <1>         mov     ah, 0x10
     8 00000164 CD16                <1>         int     0x16
     9                              <1> 
    10 00000166 3C20                <1>         cmp     al, ' '
    11 00000168 75F8                <1>         jne     .10L
    12                              <1> 
    13 0000016A 68[9301]E84AFF83C4- <1>         cdecl   puts, .s1
    13 00000172 02                  <1>
    14                              <1> 
    15 00000173 CD19                <1>         int     0x19
    16                              <1> 
    17 00000175 0A0D50757368205350- <1> .s0     db  0x0A, 0x0D, "Push SPACE Key to reboot...", 0
    17 0000017E 414345204B65792074- <1>
    17 00000187 6F207265626F6F742E- <1>
    17 00000190 2E2E00              <1>
    18 00000193 0A0D0A0D00          <1> .s1     db  0x0A, 0x0D, 0x0A, 0x0D, 0
    51                                  
    52 00000198 00<rept>                        times   510 - ($ - $$) db 0x00
    53 000001FE 55AA                            db      0x55, 0xAA
    54                                  
    55                                  
    56                                  stage_2:
    57                                  
    58 00000200 68[0B02]E8B4FE83C4-             cdecl   puts, .s0
    58 00000208 02                 
    59                                  
    60 00000209 EBFE                            jmp     $
    61                                  
    62 0000020B 326E64207374616765-     .s0     db  "2nd stage...", 0x0A, 0x0D, 0
    62 00000214 2E2E2E0A0D00       
    63                                  
    64 0000021A 00<rept>                        times   (1024 * 8) - ($ - $$)   db 0
