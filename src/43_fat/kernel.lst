     1                                  %define USE_SYSTEM_CALL
     2                                  %define USE_TEST_AND_SET
     3                                  
     4                                  %include    "../include/define.s"
     1                              <1>         BOOT_LOAD           equ     0x7C00
     2                              <1> 
     3                              <1>         BOOT_SIZE           equ     (1024 * 8)
     4                              <1>         SECT_SIZE           equ     (512)
     5                              <1>         BOOT_SECT           equ     (BOOT_SIZE / SECT_SIZE)
     6                              <1>         BOOT_END            equ     (BOOT_LOAD + BOOT_SIZE)
     7                              <1> 
     8                              <1>         E820_RECORD_SIZE    equ     20
     9                              <1> 
    10                              <1>         KERNEL_LOAD         equ     0x0010_1000
    11                              <1> 
    12                              <1>         KERNEL_SIZE         equ     (1024 * 8)
    13                              <1>         KERNEL_SECT         equ     (KERNEL_SIZE / SECT_SIZE)
    14                              <1> 
    15                              <1>         VECT_BASE           equ     0x0010_0000
    16                              <1> 
    17                              <1> 
    18                              <1>         STACK_BASE          equ     0x0010_3000
    19                              <1>         STACK_SIZE          equ     1024
    20                              <1> 
    21                              <1>         SP_TASK_0           equ     STACK_BASE + (STACK_SIZE * 1)
    22                              <1>         SP_TASK_1           equ     STACK_BASE + (STACK_SIZE * 2)
    23                              <1>         SP_TASK_2           equ     STACK_BASE + (STACK_SIZE * 3)
    24                              <1>         SP_TASK_3           equ     STACK_BASE + (STACK_SIZE * 4)
    25                              <1>         SP_TASK_4           equ     STACK_BASE + (STACK_SIZE * 5)
    26                              <1>         SP_TASK_5           equ     STACK_BASE + (STACK_SIZE * 6)
    27                              <1>         SP_TASK_6           equ     STACK_BASE + (STACK_SIZE * 7)
    28                              <1> 
    29                              <1>         CR3_BASE            equ     0x0010_5000
    30                              <1> 
    31                              <1>         PARAM_TASK_4        equ     0x0010_8000
    32                              <1>         PARAM_TASK_5        equ     0x0010_9000
    33                              <1>         PARAM_TASK_6        equ     0x0010_A000
    34                              <1> 
    35                              <1>         CR3_TASK_4          equ     0x0020_0000
    36                              <1>         CR3_TASK_5          equ     0x0020_2000
    37                              <1>         CR3_TASK_6          equ     0x0020_4000
     5                                  %include    "../include/macro.s"
     1                              <1> %macro  cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep  %0 -1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate -1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if  1 < %0
    12                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> %macro  set_vect 1-*.nolist
    18                              <1> 		push	eax
    19                              <1> 		push	edi
    20                              <1> 
    21                              <1> 		mov		edi, VECT_BASE + (%1 * 8)
    22                              <1> 		mov		eax, %2
    23                              <1> 
    24                              <1> 	%if 3 == %0
    25                              <1> 		mov		[edi + 4], %3
    26                              <1> 	%endif
    27                              <1> 
    28                              <1>         mov		[edi + 0], ax
    29                              <1> 		shr		eax, 16 
    30                              <1> 		mov		[edi + 6], ax
    31                              <1> 
    32                              <1> 		pop		edi
    33                              <1> 		pop		eax
    34                              <1> %endmacro
    35                              <1> 
    36                              <1> %macro  outp 2
    37                              <1>         mov     al, %2
    38                              <1>         out     %1, al
    39                              <1> %endmacro
    40                              <1> 
    41                              <1> %macro  set_desc 2-*
    42                              <1>         push    eax
    43                              <1>         push    edi
    44                              <1> 
    45                              <1>         mov     edi, %1
    46                              <1>         mov     eax, %2
    47                              <1> 
    48                              <1>     %if 3 == %0
    49                              <1>         mov     [edi + 0], %3
    50                              <1>     %endif
    51                              <1> 
    52                              <1>         mov     [edi + 2], ax
    53                              <1>         shr     eax, 16
    54                              <1>         mov     [edi + 4], al
    55                              <1>         mov     [edi + 7], ah
    56                              <1> 
    57                              <1>         pop     edi
    58                              <1>         pop     eax
    59                              <1> %endmacro
    60                              <1> 
    61                              <1> %macro  set_gate 2-*
    62                              <1>         push    eax
    63                              <1>         push    edi
    64                              <1> 
    65                              <1>         mov     edi, %1
    66                              <1>         mov     eax, %2
    67                              <1> 
    68                              <1>         mov     [edi + 0], ax
    69                              <1>         shr     eax, 16
    70                              <1>         mov     [edi + 6], ax
    71                              <1> 
    72                              <1>         pop     edi
    73                              <1>         pop     eax
    74                              <1> %endmacro
    75                              <1> 
    76                              <1> struc drive
    77 00000000 <res 00000002>      <1>         .no         resw    1
    78 00000002 <res 00000002>      <1>         .cyln       resw    1
    79 00000004 <res 00000002>      <1>         .head       resw    1
    80 00000006 <res 00000002>      <1>         .sect       resw    1
    81                              <1> endstruc
    82                              <1> 
    83                              <1> %define		RING_ITEM_SIZE		(1 << 4)
    84                              <1> %define		RING_INDEX_MASK		(RING_ITEM_SIZE - 1)
    85                              <1> 
    86                              <1> struc ring_buff
    87 00000000 <res 00000004>      <1>         .rp         resd    1
    88 00000004 <res 00000004>      <1>         .wp         resd    1
    89 00000008 <res 00000010>      <1>         .item       resb    RING_ITEM_SIZE
    90                              <1> endstruc
    91                              <1> 
    92                              <1> struc rose
    93 00000000 <res 00000004>      <1>         .x0         resd    1
    94 00000004 <res 00000004>      <1>         .y0         resd    1
    95 00000008 <res 00000004>      <1>         .x1         resd    1
    96 0000000C <res 00000004>      <1>         .y1         resd    1
    97                              <1> 
    98 00000010 <res 00000004>      <1>         .n          resd    1
    99 00000014 <res 00000004>      <1>         .d          resd    1
   100                              <1> 
   101 00000018 <res 00000004>      <1>         .color_x    resd    1
   102 0000001C <res 00000004>      <1>         .color_y    resd    1
   103 00000020 <res 00000004>      <1>         .color_z    resd    1
   104 00000024 <res 00000004>      <1>         .color_s    resd    1
   105 00000028 <res 00000004>      <1>         .color_f    resd    1
   106 0000002C <res 00000004>      <1>         .color_b    resd    1
   107                              <1> 
   108 00000030 <res 00000010>      <1>         .title      resb    16
   109                              <1> endstruc
     6                                  
     7                                          ORG     KERNEL_LOAD
     8                                  
     9                                  [BITS 32]
    10                                  
    11                                  kernel:
    12                                  
    13 00000000 BE007E0000                      mov     esi, BOOT_LOAD + SECT_SIZE
    14 00000005 0FB706                          movzx   eax, word [esi + 0]
    15 00000008 0FB75E02                        movzx   ebx, word [esi + 2]
    16 0000000C C1E004                          shl     eax, 4
    17 0000000F 01D8                            add     eax, ebx
    18 00000011 A3[A0020000]                    mov     [FONT_ADR], eax
    19                                  
    20                                          set_desc    GDT.tss_0, TSS_0
    20 00000016 50                  <1>  push eax
    20 00000017 57                  <1>  push edi
    20                              <1> 
    20 00000018 BF[B0080000]        <1>  mov edi, %1
    20 0000001D B8[A8020000]        <1>  mov eax, %2
    20                              <1> 
    20                              <1>  %if 3 == %0
    20                              <1>  mov [edi + 0], %3
    20                              <1>  %endif
    20                              <1> 
    20 00000022 66894702            <1>  mov [edi + 2], ax
    20 00000026 C1E810              <1>  shr eax, 16
    20 00000029 884704              <1>  mov [edi + 4], al
    20 0000002C 886707              <1>  mov [edi + 7], ah
    20                              <1> 
    20 0000002F 5F                  <1>  pop edi
    20 00000030 58                  <1>  pop eax
    21                                          set_desc    GDT.tss_1, TSS_1
    21 00000031 50                  <1>  push eax
    21 00000032 57                  <1>  push edi
    21                              <1> 
    21 00000033 BF[B8080000]        <1>  mov edi, %1
    21 00000038 B8[80030000]        <1>  mov eax, %2
    21                              <1> 
    21                              <1>  %if 3 == %0
    21                              <1>  mov [edi + 0], %3
    21                              <1>  %endif
    21                              <1> 
    21 0000003D 66894702            <1>  mov [edi + 2], ax
    21 00000041 C1E810              <1>  shr eax, 16
    21 00000044 884704              <1>  mov [edi + 4], al
    21 00000047 886707              <1>  mov [edi + 7], ah
    21                              <1> 
    21 0000004A 5F                  <1>  pop edi
    21 0000004B 58                  <1>  pop eax
    22                                          set_desc    GDT.tss_2, TSS_2
    22 0000004C 50                  <1>  push eax
    22 0000004D 57                  <1>  push edi
    22                              <1> 
    22 0000004E BF[C0080000]        <1>  mov edi, %1
    22 00000053 B8[58040000]        <1>  mov eax, %2
    22                              <1> 
    22                              <1>  %if 3 == %0
    22                              <1>  mov [edi + 0], %3
    22                              <1>  %endif
    22                              <1> 
    22 00000058 66894702            <1>  mov [edi + 2], ax
    22 0000005C C1E810              <1>  shr eax, 16
    22 0000005F 884704              <1>  mov [edi + 4], al
    22 00000062 886707              <1>  mov [edi + 7], ah
    22                              <1> 
    22 00000065 5F                  <1>  pop edi
    22 00000066 58                  <1>  pop eax
    23                                          set_desc    GDT.tss_3, TSS_3
    23 00000067 50                  <1>  push eax
    23 00000068 57                  <1>  push edi
    23                              <1> 
    23 00000069 BF[C8080000]        <1>  mov edi, %1
    23 0000006E B8[30050000]        <1>  mov eax, %2
    23                              <1> 
    23                              <1>  %if 3 == %0
    23                              <1>  mov [edi + 0], %3
    23                              <1>  %endif
    23                              <1> 
    23 00000073 66894702            <1>  mov [edi + 2], ax
    23 00000077 C1E810              <1>  shr eax, 16
    23 0000007A 884704              <1>  mov [edi + 4], al
    23 0000007D 886707              <1>  mov [edi + 7], ah
    23                              <1> 
    23 00000080 5F                  <1>  pop edi
    23 00000081 58                  <1>  pop eax
    24                                          set_desc    GDT.tss_4, TSS_4
    24 00000082 50                  <1>  push eax
    24 00000083 57                  <1>  push edi
    24                              <1> 
    24 00000084 BF[D0080000]        <1>  mov edi, %1
    24 00000089 B8[08060000]        <1>  mov eax, %2
    24                              <1> 
    24                              <1>  %if 3 == %0
    24                              <1>  mov [edi + 0], %3
    24                              <1>  %endif
    24                              <1> 
    24 0000008E 66894702            <1>  mov [edi + 2], ax
    24 00000092 C1E810              <1>  shr eax, 16
    24 00000095 884704              <1>  mov [edi + 4], al
    24 00000098 886707              <1>  mov [edi + 7], ah
    24                              <1> 
    24 0000009B 5F                  <1>  pop edi
    24 0000009C 58                  <1>  pop eax
    25                                          set_desc    GDT.tss_5, TSS_5
    25 0000009D 50                  <1>  push eax
    25 0000009E 57                  <1>  push edi
    25                              <1> 
    25 0000009F BF[D8080000]        <1>  mov edi, %1
    25 000000A4 B8[E0060000]        <1>  mov eax, %2
    25                              <1> 
    25                              <1>  %if 3 == %0
    25                              <1>  mov [edi + 0], %3
    25                              <1>  %endif
    25                              <1> 
    25 000000A9 66894702            <1>  mov [edi + 2], ax
    25 000000AD C1E810              <1>  shr eax, 16
    25 000000B0 884704              <1>  mov [edi + 4], al
    25 000000B3 886707              <1>  mov [edi + 7], ah
    25                              <1> 
    25 000000B6 5F                  <1>  pop edi
    25 000000B7 58                  <1>  pop eax
    26                                          set_desc    GDT.tss_6, TSS_6
    26 000000B8 50                  <1>  push eax
    26 000000B9 57                  <1>  push edi
    26                              <1> 
    26 000000BA BF[E0080000]        <1>  mov edi, %1
    26 000000BF B8[B8070000]        <1>  mov eax, %2
    26                              <1> 
    26                              <1>  %if 3 == %0
    26                              <1>  mov [edi + 0], %3
    26                              <1>  %endif
    26                              <1> 
    26 000000C4 66894702            <1>  mov [edi + 2], ax
    26 000000C8 C1E810              <1>  shr eax, 16
    26 000000CB 884704              <1>  mov [edi + 4], al
    26 000000CE 886707              <1>  mov [edi + 7], ah
    26                              <1> 
    26 000000D1 5F                  <1>  pop edi
    26 000000D2 58                  <1>  pop eax
    27                                  
    28                                          set_gate    GDT.call_gate, call_gate
    28 000000D3 50                  <1>  push eax
    28 000000D4 57                  <1>  push edi
    28                              <1> 
    28 000000D5 BF[E8080000]        <1>  mov edi, %1
    28 000000DA B8[7C170000]        <1>  mov eax, %2
    28                              <1> 
    28 000000DF 668907              <1>  mov [edi + 0], ax
    28 000000E2 C1E810              <1>  shr eax, 16
    28 000000E5 66894706            <1>  mov [edi + 6], ax
    28                              <1> 
    28 000000E9 5F                  <1>  pop edi
    28 000000EA 58                  <1>  pop eax
    29                                  
    30                                          set_desc    GDT.ldt, LDT, word LDT_LIMIT
    30 000000EB 50                  <1>  push eax
    30 000000EC 57                  <1>  push edi
    30                              <1> 
    30 000000ED BF[A8080000]        <1>  mov edi, %1
    30 000000F2 B8[F6080000]        <1>  mov eax, %2
    30                              <1> 
    30                              <1>  %if 3 == %0
    30 000000F7 66C7075F00          <1>  mov [edi + 0], %3
    30                              <1>  %endif
    30                              <1> 
    30 000000FC 66894702            <1>  mov [edi + 2], ax
    30 00000100 C1E810              <1>  shr eax, 16
    30 00000103 884704              <1>  mov [edi + 4], al
    30 00000106 886707              <1>  mov [edi + 7], ah
    30                              <1> 
    30 00000109 5F                  <1>  pop edi
    30 0000010A 58                  <1>  pop eax
    31                                  
    32 0000010B 0F0115[F0080000]                lgdt    [GDTR]
    33                                  
    34 00000112 BC00341000                      mov     esp, SP_TASK_0
    35                                  
    36 00000117 66B82000                        mov     ax, SS_TASK_0
    37 0000011B 0F00D8                          ltr     ax
    38                                  
    39 0000011E E82F130000                      cdecl   init_int
    40 00000123 E8B0140000                      cdecl   init_pic
    41 00000128 E81B090000                      cdecl   init_page
    42                                  
    43 0000012D 5057BF00001000B8-               set_vect    0x00, int_zero_div
    43 00000135 [BA150000]668907C1-
    43 0000013D E810668947065F58   
    44 00000145 5057BF38001000B8-               set_vect    0x07, int_nm
    44 0000014D [E7170000]668907C1-
    44 00000155 E810668947065F58   
    45 0000015D 5057BF70001000B8-               set_vect    0x0E, int_pf
    45 00000165 [56090000]668907C1-
    45 0000016D E810668947065F58   
    46 00000175 5057BF00011000B8-               set_vect    0x20, int_timer
    46 0000017D [C4090000]668907C1-
    46 00000185 E810668947065F58   
    47 0000018D 5057BF08011000B8-               set_vect    0x21, int_keyboard
    47 00000195 [42160000]668907C1-
    47 0000019D E810668947065F58   
    48 000001A5 5057BF40011000B8-               set_vect    0x28, int_rtc
    48 000001AD [17160000]668907C1-
    48 000001B5 E810668947065F58   
    49 000001BD 5057BF08041000B8-               set_vect    0x81, trap_gate_81, word 0xEF00
    49 000001C5 [AC170000]66C74704-
    49 000001CD 00EF668907C1E81066-
    49 000001D6 8947065F58         
    50 000001DB 5057BF10041000B8-               set_vect    0x82, trap_gate_82, word 0xEF00
    50 000001E3 [BA170000]66C74704-
    50 000001EB 00EF668907C1E81066-
    50 000001F4 8947065F58         
    51                                  
    52 000001F9 6A10E8031400006683-             cdecl   rtc_int_en, 0x10
    52 00000202 C404               
    53 00000204 E82B150000                      cdecl   int_en_timer0
    54                                  
    55                                          outp    0x21, 0b1111_1000
    55 00000209 B0F8                <1>  mov al, %2
    55 0000020B E621                <1>  out %1, al
    56                                          outp    0xA1, 0b1111_1110
    56 0000020D B0FE                <1>  mov al, %2
    56 0000020F E6A1                <1>  out %1, al
    57                                  
    58 00000211 B800501000                      mov     eax, CR3_BASE
    59 00000216 0F22D8                          mov     cr3, eax
    60                                  
    61 00000219 0F20C0                          mov     eax, cr0
    62 0000021C 0D00000080                      or      eax, (1 << 31)
    63 00000221 0F22C0                          mov     cr0, eax
    64 00000224 EB00                            jmp     $ + 2
    65                                  
    66 00000226 FB                              sti
    67                                  
    68 00000227 6A0D6A3FE8E00D0000-             cdecl   draw_font, 63, 13
    68 00000230 6683C408           
    69 00000234 6A046A3FE8560E0000-             cdecl   draw_color_bar, 63, 4
    69 0000023D 6683C408           
    70 00000241 68[89020000]680F01-             cdecl   draw_str, 25, 14, 0x010F, .s0
    70 00000249 00006A0E6A19E8010E-
    70 00000252 00006683C410       
    71                                  
    72                                  .10L:
    73                                  
    74 00000258 E8E6140000                      cdecl   draw_rotation_bar
    75                                  
    76 0000025D 68[9C020000]68-                 cdecl   ring_rd, _KEY_BUFF, .int_key
    76 00000263 [68160000]E8141400-
    76 0000026B 006683C408         
    77 00000270 83F800                          cmp     eax, 0
    78 00000273 7412                            je      .10E
    79                                  
    80 00000275 68[68160000]6A1D6A-             cdecl   draw_key, 2, 29, _KEY_BUFF
    80 0000027D 02E85E1400006683C4-
    80 00000286 0C                 
    81                                  .10E:
    82                                  
    83 00000287 EBCF                            jmp     .10L
    84                                  
    85 00000289 2048656C6C6F2C206B-     .s0 	db	" Hello, kernel! ", 0
    85 00000292 65726E656C212000   
    86                                  
    87 0000029A 00<rept>                ALIGN 4, db 0
    88 0000029C 00000000                .int_key    dd 0
    89                                  
    90                                  ALIGN 4, db 0
    91 000002A0 00000000                FONT_ADR:   dd 0
    92 000002A4 00000000                RTC_TIME:   dd 0
    93                                  
    94                                  %include    "descriptor.s"
     1                              <1> TSS_0:
     2 000002A8 00000000            <1> .link:          dd  0
     3 000002AC 00321000            <1> .esp0:          dd  SP_TASK_0 - 512
     4 000002B0 10000000            <1> .ss0:           dd  DS_KERNEL
     5 000002B4 00000000            <1> .esp1:          dd  0
     6 000002B8 00000000            <1> .ss1:           dd  0
     7 000002BC 00000000            <1> .esp2:          dd  0
     8 000002C0 00000000            <1> .ss2:           dd  0
     9 000002C4 00501000            <1> .cr3:           dd  CR3_BASE
    10 000002C8 00000000            <1> .eip:           dd  0
    11 000002CC 00000000            <1> .eflags:        dd  0
    12 000002D0 00000000            <1> .eax:           dd  0
    13 000002D4 00000000            <1> .ecx:           dd  0
    14 000002D8 00000000            <1> .edx:           dd  0
    15 000002DC 00000000            <1> .ebx:           dd  0
    16 000002E0 00000000            <1> .esp:           dd  0
    17 000002E4 00000000            <1> .ebp:           dd  0
    18 000002E8 00000000            <1> .esi:           dd  0
    19 000002EC 00000000            <1> .edi:           dd  0
    20 000002F0 00000000            <1> .es:            dd  0
    21 000002F4 00000000            <1> .cs:            dd  0
    22 000002F8 00000000            <1> .ss:            dd  0
    23 000002FC 00000000            <1> .ds:            dd  0
    24 00000300 00000000            <1> .fs:            dd  0
    25 00000304 00000000            <1> .gs:            dd  0
    26 00000308 00000000            <1> .ldt:           dd  0
    27 0000030C 00000000            <1> .io:            dd  0
    28 00000310 00<rept>            <1> .fp_sava:   times 108 + 4 db 0
    29                              <1> 
    30                              <1> TSS_1:
    31 00000380 00000000            <1> .link:          dd  0
    32 00000384 00361000            <1> .esp0:          dd  SP_TASK_1 - 512
    33 00000388 10000000            <1> .ss0:           dd  DS_KERNEL
    34 0000038C 00000000            <1> .esp1:          dd  0
    35 00000390 00000000            <1> .ss1:           dd  0
    36 00000394 00000000            <1> .esp2:          dd  0
    37 00000398 00000000            <1> .ss2:           dd  0
    38 0000039C 00501000            <1> .cr3:           dd  CR3_BASE
    39 000003A0 [250B0000]          <1> .eip:           dd  task_1
    40 000003A4 02020000            <1> .eflags:        dd  0x0202
    41 000003A8 00000000            <1> .eax:           dd  0
    42 000003AC 00000000            <1> .ecx:           dd  0
    43 000003B0 00000000            <1> .edx:           dd  0
    44 000003B4 00000000            <1> .ebx:           dd  0
    45 000003B8 00381000            <1> .esp:           dd  SP_TASK_1
    46 000003BC 00000000            <1> .ebp:           dd  0
    47 000003C0 00000000            <1> .esi:           dd  0
    48 000003C4 00000000            <1> .edi:           dd  0
    49 000003C8 27000000            <1> .es:            dd  DS_TASK_1
    50 000003CC 1F000000            <1> .cs:            dd  CS_TASK_1
    51 000003D0 27000000            <1> .ss:            dd  DS_TASK_1
    52 000003D4 27000000            <1> .ds:            dd  DS_TASK_1
    53 000003D8 27000000            <1> .fs:            dd  DS_TASK_1
    54 000003DC 27000000            <1> .gs:            dd  DS_TASK_1
    55 000003E0 18000000            <1> .ldt:           dd  SS_LDT
    56 000003E4 00000000            <1> .io:            dd  0
    57 000003E8 00<rept>            <1> .fp_save:   times 108 + 4 db 0
    58                              <1> 
    59                              <1> TSS_2:
    60 00000458 00000000            <1> .link:          dd  0
    61 0000045C 003A1000            <1> .esp0:          dd  SP_TASK_2 - 512
    62 00000460 10000000            <1> .ss0:           dd  DS_KERNEL
    63 00000464 00000000            <1> .esp1:          dd  0
    64 00000468 00000000            <1> .ss1:           dd  0
    65 0000046C 00000000            <1> .esp2:          dd  0
    66 00000470 00000000            <1> .ss2:           dd  0
    67 00000474 00501000            <1> .cr3:           dd  CR3_BASE
    68 00000478 [5A0B0000]          <1> .eip:           dd  task_2
    69 0000047C 02020000            <1> .eflags:        dd  0x0202
    70 00000480 00000000            <1> .eax:           dd  0
    71 00000484 00000000            <1> .ecx:           dd  0
    72 00000488 00000000            <1> .edx:           dd  0
    73 0000048C 00000000            <1> .ebx:           dd  0
    74 00000490 003C1000            <1> .esp:           dd  SP_TASK_2
    75 00000494 00000000            <1> .ebp:           dd  0
    76 00000498 00000000            <1> .esi:           dd  0
    77 0000049C 00000000            <1> .edi:           dd  0
    78 000004A0 37000000            <1> .es:            dd  DS_TASK_2
    79 000004A4 2F000000            <1> .cs:            dd  CS_TASK_2
    80 000004A8 37000000            <1> .ss:            dd  DS_TASK_2
    81 000004AC 37000000            <1> .ds:            dd  DS_TASK_2
    82 000004B0 37000000            <1> .fs:            dd  DS_TASK_2
    83 000004B4 37000000            <1> .gs:            dd  DS_TASK_2
    84 000004B8 18000000            <1> .ldt:           dd  SS_LDT
    85 000004BC 00000000            <1> .io:            dd  0
    86 000004C0 00<rept>            <1> .fp_save:   times 108 + 4 db 0
    87                              <1> 
    88                              <1> TSS_3:
    89 00000530 00000000            <1> .link:          dd  0
    90 00000534 003E1000            <1> .esp0:          dd  SP_TASK_3 - 512
    91 00000538 10000000            <1> .ss0:           dd  DS_KERNEL
    92 0000053C 00000000            <1> .esp1:          dd  0
    93 00000540 00000000            <1> .ss1:           dd  0
    94 00000544 00000000            <1> .esp2:          dd  0
    95 00000548 00000000            <1> .ss2:           dd  0
    96 0000054C 00501000            <1> .cr3:           dd  CR3_BASE
    97 00000550 [340C0000]          <1> .eip:           dd  task_3
    98 00000554 02020000            <1> .eflags:        dd  0x0202
    99 00000558 00000000            <1> .eax:           dd  0
   100 0000055C 00000000            <1> .ecx:           dd  0
   101 00000560 00000000            <1> .edx:           dd  0
   102 00000564 00000000            <1> .ebx:           dd  0
   103 00000568 00401000            <1> .esp:           dd  SP_TASK_3
   104 0000056C 00000000            <1> .ebp:           dd  0
   105 00000570 00000000            <1> .esi:           dd  0
   106 00000574 00000000            <1> .edi:           dd  0
   107 00000578 47000000            <1> .es:            dd  DS_TASK_3
   108 0000057C 3F000000            <1> .cs:            dd  CS_TASK_3
   109 00000580 47000000            <1> .ss:            dd  DS_TASK_3
   110 00000584 47000000            <1> .ds:            dd  DS_TASK_3
   111 00000588 47000000            <1> .fs:            dd  DS_TASK_3
   112 0000058C 47000000            <1> .gs:            dd  DS_TASK_3
   113 00000590 18000000            <1> .ldt:           dd  SS_LDT
   114 00000594 00000000            <1> .io:            dd  0
   115 00000598 00<rept>            <1> .fp_save:   times 108 + 4 db 0
   116                              <1> 
   117                              <1> TSS_4:
   118 00000608 00000000            <1> .link:          dd  0
   119 0000060C 00421000            <1> .esp0:          dd  SP_TASK_4 - 512
   120 00000610 10000000            <1> .ss0:           dd  DS_KERNEL
   121 00000614 00000000            <1> .esp1:          dd  0
   122 00000618 00000000            <1> .ss1:           dd  0
   123 0000061C 00000000            <1> .esp2:          dd  0
   124 00000620 00000000            <1> .ss2:           dd  0
   125 00000624 00002000            <1> .cr3:           dd  CR3_TASK_4
   126 00000628 [340C0000]          <1> .eip:           dd  task_3
   127 0000062C 02020000            <1> .eflags:        dd  0x0202
   128 00000630 00000000            <1> .eax:           dd  0
   129 00000634 00000000            <1> .ecx:           dd  0
   130 00000638 00000000            <1> .edx:           dd  0
   131 0000063C 00000000            <1> .ebx:           dd  0
   132 00000640 00441000            <1> .esp:           dd  SP_TASK_4
   133 00000644 00000000            <1> .ebp:           dd  0
   134 00000648 00000000            <1> .esi:           dd  0
   135 0000064C 00000000            <1> .edi:           dd  0
   136 00000650 4F000000            <1> .es:            dd  DS_TASK_4
   137 00000654 3F000000            <1> .cs:            dd  CS_TASK_3
   138 00000658 4F000000            <1> .ss:            dd  DS_TASK_4
   139 0000065C 4F000000            <1> .ds:            dd  DS_TASK_4
   140 00000660 4F000000            <1> .fs:            dd  DS_TASK_4
   141 00000664 4F000000            <1> .gs:            dd  DS_TASK_4
   142 00000668 18000000            <1> .ldt:           dd  SS_LDT
   143 0000066C 00000000            <1> .io:            dd  0
   144 00000670 00<rept>            <1> .fp_save:   times 108 + 4 db 0
   145                              <1> 
   146                              <1> TSS_5:
   147 000006E0 00000000            <1> .link:          dd  0
   148 000006E4 00461000            <1> .esp0:          dd  SP_TASK_5 - 512
   149 000006E8 10000000            <1> .ss0:           dd  DS_KERNEL
   150 000006EC 00000000            <1> .esp1:          dd  0
   151 000006F0 00000000            <1> .ss1:           dd  0
   152 000006F4 00000000            <1> .esp2:          dd  0
   153 000006F8 00000000            <1> .ss2:           dd  0
   154 000006FC 00202000            <1> .cr3:           dd  CR3_TASK_5
   155 00000700 [340C0000]          <1> .eip:           dd  task_3
   156 00000704 02020000            <1> .eflags:        dd  0x0202
   157 00000708 00000000            <1> .eax:           dd  0
   158 0000070C 00000000            <1> .ecx:           dd  0
   159 00000710 00000000            <1> .edx:           dd  0
   160 00000714 00000000            <1> .ebx:           dd  0
   161 00000718 00481000            <1> .esp:           dd  SP_TASK_5
   162 0000071C 00000000            <1> .ebp:           dd  0
   163 00000720 00000000            <1> .esi:           dd  0
   164 00000724 00000000            <1> .edi:           dd  0
   165 00000728 57000000            <1> .es:            dd  DS_TASK_5
   166 0000072C 3F000000            <1> .cs:            dd  CS_TASK_3
   167 00000730 57000000            <1> .ss:            dd  DS_TASK_5
   168 00000734 57000000            <1> .ds:            dd  DS_TASK_5
   169 00000738 57000000            <1> .fs:            dd  DS_TASK_5
   170 0000073C 57000000            <1> .gs:            dd  DS_TASK_5
   171 00000740 18000000            <1> .ldt:           dd  SS_LDT
   172 00000744 00000000            <1> .io:            dd  0
   173 00000748 00<rept>            <1> .fp_save:   times 108 + 4 db 0
   174                              <1> 
   175                              <1> TSS_6:
   176 000007B8 00000000            <1> .link:          dd  0
   177 000007BC 004A1000            <1> .esp0:          dd  SP_TASK_6 - 512
   178 000007C0 10000000            <1> .ss0:           dd  DS_KERNEL
   179 000007C4 00000000            <1> .esp1:          dd  0
   180 000007C8 00000000            <1> .ss1:           dd  0
   181 000007CC 00000000            <1> .esp2:          dd  0
   182 000007D0 00000000            <1> .ss2:           dd  0
   183 000007D4 00402000            <1> .cr3:           dd  CR3_TASK_6
   184 000007D8 [340C0000]          <1> .eip:           dd  task_3
   185 000007DC 02020000            <1> .eflags:        dd  0x0202
   186 000007E0 00000000            <1> .eax:           dd  0
   187 000007E4 00000000            <1> .ecx:           dd  0
   188 000007E8 00000000            <1> .edx:           dd  0
   189 000007EC 00000000            <1> .ebx:           dd  0
   190 000007F0 004C1000            <1> .esp:           dd  SP_TASK_6
   191 000007F4 00000000            <1> .ebp:           dd  0
   192 000007F8 00000000            <1> .esi:           dd  0
   193 000007FC 00000000            <1> .edi:           dd  0
   194 00000800 5F000000            <1> .es:            dd  DS_TASK_6
   195 00000804 3F000000            <1> .cs:            dd  CS_TASK_3
   196 00000808 5F000000            <1> .ss:            dd  DS_TASK_6
   197 0000080C 5F000000            <1> .ds:            dd  DS_TASK_6
   198 00000810 5F000000            <1> .fs:            dd  DS_TASK_6
   199 00000814 5F000000            <1> .gs:            dd  DS_TASK_6
   200 00000818 18000000            <1> .ldt:           dd  SS_LDT
   201 0000081C 00000000            <1> .io:            dd  0
   202 00000820 00<rept>            <1> .fp_save:   times 108 + 4 db 0
   203                              <1> 
   204 00000890 0000000000000000    <1> GDT:            dq  0x0000000000000000
   205 00000898 FFFF0000009ACF00    <1> .cs_kernel:     dq  0x00CF9A000000FFFF
   206 000008A0 FFFF00000092CF00    <1> .ds_kernel:     dq  0x00CF92000000FFFF
   207 000008A8 0000000000820000    <1> .ldt            dq  0x0000820000000000
   208 000008B0 6700000000890000    <1> .tss_0:         dq  0x0000890000000067
   209 000008B8 6700000000890000    <1> .tss_1:         dq  0x0000890000000067
   210 000008C0 6700000000890000    <1> .tss_2:         dq  0x0000890000000067
   211 000008C8 6700000000890000    <1> .tss_3:         dq  0x0000890000000067
   212 000008D0 6700000000890000    <1> .tss_4:         dq  0x0000890000000067
   213 000008D8 6700000000890000    <1> .tss_5:         dq  0x0000890000000067
   214 000008E0 6700000000890000    <1> .tss_6:         dq  0x0000890000000067
   215 000008E8 0000080004EC0000    <1> .call_gate:     dq  0x0000EC0400080000
   216                              <1> .end:
   217                              <1> 
   218                              <1> CS_KERNEL       equ .cs_kernel  - GDT
   219                              <1> DS_KERNEL       equ .ds_kernel  - GDT
   220                              <1> SS_LDT          equ .ldt        - GDT
   221                              <1> SS_TASK_0       equ .tss_0      - GDT
   222                              <1> SS_TASK_1       equ .tss_1      - GDT
   223                              <1> SS_TASK_2       equ .tss_2      - GDT
   224                              <1> SS_TASK_3       equ .tss_3      - GDT
   225                              <1> SS_TASK_4       equ .tss_4      - GDT
   226                              <1> SS_TASK_5       equ .tss_5      - GDT
   227                              <1> SS_TASK_6       equ .tss_6      - GDT
   228                              <1> SS_GATE_0       equ .call_gate  - GDT
   229                              <1> 
   230 000008F0 5F00                <1> GDTR:   dw      GDT.end - GDT - 1
   231 000008F2 [90080000]          <1>         dd      GDT
   232                              <1> 
   233 000008F6 0000000000000000    <1> LDT:            dq  0x0000000000000000
   234 000008FE FFFF0000009ACF00    <1> .cs_task_0:     dq  0x00CF9A000000FFFF
   235 00000906 FFFF00000092CF00    <1> .ds_task_0:     dq  0x00CF92000000FFFF
   236 0000090E FFFF000000FACF00    <1> .cs_task_1:     dq  0x00CFFA000000FFFF
   237 00000916 FFFF000000F2CF00    <1> .ds_task_1:     dq  0x00CFF2000000FFFF
   238 0000091E FFFF000000FACF00    <1> .cs_task_2:     dq  0x00CFFA000000FFFF
   239 00000926 FFFF000000F2CF00    <1> .ds_task_2:     dq  0x00CFF2000000FFFF
   240 0000092E FFFF000000FACF00    <1> .cs_task_3:     dq  0x00CFFA000000FFFF
   241 00000936 FFFF000000F2CF00    <1> .ds_task_3:     dq  0x00CFF2000000FFFF
   242 0000093E FFFF000000F2CF00    <1> .ds_task_4:     dq  0x00CFF2000000FFFF
   243 00000946 FFFF000000F2CF00    <1> .ds_task_5:     dq  0x00CFF2000000FFFF
   244 0000094E FFFF000000F2CF00    <1> .ds_task_6:     dq  0x00CFF2000000FFFF
   245                              <1> .end:
   246                              <1> 
   247                              <1> CS_TASK_0       equ (.cs_task_0 - LDT) | 4
   248                              <1> DS_TASK_0       equ (.ds_task_0 - LDT) | 4
   249                              <1> CS_TASK_1       equ (.cs_task_1 - LDT) | 4 | 3
   250                              <1> DS_TASK_1       equ (.ds_task_1 - LDT) | 4 | 3
   251                              <1> CS_TASK_2       equ (.cs_task_2 - LDT) | 4 | 3
   252                              <1> DS_TASK_2       equ (.ds_task_2 - LDT) | 4 | 3
   253                              <1> CS_TASK_3       equ (.cs_task_3 - LDT) | 4 | 3
   254                              <1> DS_TASK_3       equ (.ds_task_3 - LDT) | 4 | 3
   255                              <1> DS_TASK_4       equ (.ds_task_4 - LDT) | 4 | 3
   256                              <1> DS_TASK_5       equ (.ds_task_5 - LDT) | 4 | 3
   257                              <1> DS_TASK_6       equ (.ds_task_6 - LDT) | 4 | 3
   258                              <1> 
   259                              <1> LDT_LIMIT       equ .end        - LDT - 1
    95                                  %include    "modules/int_pf.s"
     1                              <1> int_pf:
     2                              <1> 
     3 00000956 55                  <1>         push    ebp
     4 00000957 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000959 60                  <1>         pusha
     7 0000095A 1E                  <1>         push    ds
     8 0000095B 06                  <1>         push    es
     9                              <1> 
    10 0000095C 66B81000            <1>         mov     ax, 0x0010
    11 00000960 8ED8                <1>         mov     ds, ax
    12 00000962 8EC0                <1>         mov     es, ax
    13                              <1> 
    14 00000964 0F20D0              <1>         mov     eax, cr2
    15 00000967 2500F0FFFF          <1>         and     eax, ~0x0FFF
    16 0000096C 3D00701000          <1>         cmp     eax, 0x0010_7000
    17 00000971 7521                <1>         jne     .10F
    18                              <1> 
    19 00000973 C7051C641000077010- <1>         mov     [0x00106000 + 0x107 * 4], dword 0x00107007
    19 0000097C 00                  <1>
    20                              <1> 
    21 0000097D 6A4068[340D0000]68- <1>         cdecl   memcpy, 0x0010_7000, DRAW_PARAM, rose_size
    21 00000985 00701000E8060F0000- <1>
    21 0000098E 6683C40C            <1>
    22                              <1> 
    23 00000992 EB15                <1>         jmp     .10E
    24                              <1> .10F:
    25 00000994 83C404              <1>         add     esp, 4
    26 00000997 83C404              <1>         add     esp, 4
    27 0000099A 61                  <1>         popa
    28 0000099B 5D                  <1>         pop     ebp
    29                              <1> 
    30 0000099C 9C                  <1>         pushf
    31 0000099D 0E                  <1>         push    cs
    32 0000099E 68[83140000]        <1>         push    int_stop
    33                              <1> 
    34 000009A3 B8[B3090000]        <1>         mov     eax, .s0
    35 000009A8 CF                  <1>         iret
    36                              <1> .10E:
    37 000009A9 07                  <1>         pop     es
    38 000009AA 1F                  <1>         pop     ds
    39 000009AB 61                  <1>         popa
    40                              <1> 
    41 000009AC 89EC                <1>         mov     esp, ebp
    42 000009AE 5D                  <1>         pop     ebp
    43                              <1> 
    44 000009AF 83C404              <1>         add     esp, 4
    45                              <1> 
    46 000009B2 CF                  <1>         iret
    47                              <1> 
    48 000009B3 203C20504147452046- <1> .s0     db  " < PAGE FAULT > ", 0
    48 000009BC 41554C54203E2000    <1>
    96                                  %include    "modules/int_timer.s"
     1                              <1> int_timer:
     2                              <1> 
     3 000009C4 60                  <1>         pusha
     4 000009C5 1E                  <1>         push    ds
     5 000009C6 06                  <1>         push    es
     6                              <1> 
     7 000009C7 66B81000            <1>         mov     ax, 0x0010
     8 000009CB 8ED8                <1>         mov     ds, ax
     9 000009CD 8EC0                <1>         mov     es, ax
    10                              <1> 
    11 000009CF FF05[440A0000]      <1>         inc     dword [TIMER_COUNT]
    12                              <1> 
    13                              <1>         outp    0x20, 0x20
    13 000009D5 B020                <2>  mov al, %2
    13 000009D7 E620                <2>  out %1, al
    14                              <1> 
    15 000009D9 660F00C8            <1>         str     ax
    16 000009DD 6683F820            <1>         cmp     ax, SS_TASK_0
    17 000009E1 7427                <1>         je      .11L
    18 000009E3 6683F828            <1>         cmp     ax, SS_TASK_1
    19 000009E7 742A                <1>         je      .12L
    20 000009E9 6683F830            <1>         cmp     ax, SS_TASK_2
    21 000009ED 742D                <1>         je      .13L
    22 000009EF 6683F838            <1>         cmp     ax, SS_TASK_3
    23 000009F3 7430                <1>         je      .14L
    24 000009F5 6683F840            <1>         cmp     ax, SS_TASK_4
    25 000009F9 7433                <1>         je      .15L
    26 000009FB 6683F848            <1>         cmp     ax, SS_TASK_5
    27 000009FF 7436                <1>         je      .16L
    28                              <1> 
    29 00000A01 EA000000002000      <1>         jmp     SS_TASK_0:0
    30 00000A08 EB36                <1>         jmp     .10E
    31                              <1> 
    32                              <1> .11L:
    33 00000A0A EA000000002800      <1>         jmp     SS_TASK_1:0
    34 00000A11 EB2D                <1>         jmp     .10E
    35                              <1> 
    36                              <1> .12L:
    37 00000A13 EA000000003000      <1>         jmp     SS_TASK_2:0
    38 00000A1A EB24                <1>         jmp     .10E
    39                              <1> 
    40                              <1> .13L:
    41 00000A1C EA000000003800      <1>         jmp     SS_TASK_3:0
    42 00000A23 EB1B                <1>         jmp     .10E
    43                              <1> 
    44                              <1> .14L:
    45 00000A25 EA000000004000      <1>         jmp     SS_TASK_4:0
    46 00000A2C EB12                <1>         jmp     .10E
    47                              <1> 
    48                              <1> .15L:
    49 00000A2E EA000000004800      <1>         jmp     SS_TASK_5:0
    50 00000A35 EB09                <1>         jmp     .10E
    51                              <1> 
    52                              <1> .16L:
    53 00000A37 EA000000005000      <1>         jmp     SS_TASK_6:0
    54 00000A3E EB00                <1>         jmp     .10E
    55                              <1> 
    56                              <1> .10E:
    57                              <1> 
    58 00000A40 07                  <1>         pop     es
    59 00000A41 1F                  <1>         pop     ds
    60 00000A42 61                  <1>         popa
    61                              <1> 
    62 00000A43 CF                  <1>         iret
    63                              <1> 
    64                              <1> ALIGN 4, db 0
    65 00000A44 00000000            <1> TIMER_COUNT     dd 0
    97                                  %include    "modules/paging.s"
     1                              <1> init_page:
     2                              <1> 
     3 00000A48 60                  <1>         pusha
     4                              <1> 
     5 00000A49 6800501000E8970000- <1>         cdecl   page_set_4m, CR3_BASE
     5 00000A52 006683C404          <1>
     6 00000A57 6800002000E8890000- <1>         cdecl   page_set_4m, CR3_TASK_4
     6 00000A60 006683C404          <1>
     7 00000A65 6800202000E87B0000- <1>         cdecl   page_set_4m, CR3_TASK_5
     7 00000A6E 006683C404          <1>
     8 00000A73 6800402000E86D0000- <1>         cdecl   page_set_4m, CR3_TASK_6
     8 00000A7C 006683C404          <1>
     9                              <1> 
    10 00000A81 C7051C641000000000- <1>         mov     [0x0010_6000 + 0x107 * 4], dword 0
    10 00000A8A 00                  <1>
    11                              <1> 
    12 00000A8B C7051C142000078010- <1>         mov     [0x0020_1000 + 0x107 * 4], dword PARAM_TASK_4 + 7
    12 00000A94 00                  <1>
    13 00000A95 C7051C342000079010- <1>         mov     [0x0020_3000 + 0x107 * 4], dword PARAM_TASK_5 + 7
    13 00000A9E 00                  <1>
    14 00000A9F C7051C54200007A010- <1>         mov     [0x0020_5000 + 0x107 * 4], dword PARAM_TASK_6 + 7
    14 00000AA8 00                  <1>
    15                              <1> 
    16 00000AA9 6A4068[740D0000]68- <1>         cdecl   memcpy, PARAM_TASK_4, DRAW_PARAM.t4, rose_size
    16 00000AB1 00801000E8DA0D0000- <1>
    16 00000ABA 6683C40C            <1>
    17 00000ABE 6A4068[B40D0000]68- <1>         cdecl   memcpy, PARAM_TASK_5, DRAW_PARAM.t5, rose_size
    17 00000AC6 00901000E8C50D0000- <1>
    17 00000ACF 6683C40C            <1>
    18 00000AD3 6A4068[F40D0000]68- <1>         cdecl   memcpy, PARAM_TASK_6, DRAW_PARAM.t6, rose_size
    18 00000ADB 00A01000E8B00D0000- <1>
    18 00000AE4 6683C40C            <1>
    19                              <1> 
    20 00000AE8 61                  <1>         popa
    21                              <1> 
    22 00000AE9 C3                  <1>         ret
    23                              <1> 
    24                              <1> 
    25                              <1> page_set_4m:
    26                              <1> 
    27 00000AEA 55                  <1>         push    ebp
    28 00000AEB 89E5                <1>         mov     ebp, esp
    29                              <1> 
    30 00000AED 60                  <1>         pusha
    31                              <1> 
    32 00000AEE FC                  <1>         cld
    33 00000AEF 8B7D08              <1>         mov     edi, [ebp + 8]
    34 00000AF2 B800000000          <1>         mov     eax, 0x00000000
    35 00000AF7 B900040000          <1>         mov     ecx, 1024
    36 00000AFC F3AB                <1>         rep stosd
    37                              <1> 
    38 00000AFE 89F8                <1>         mov     eax, edi
    39 00000B00 2500F0FFFF          <1>         and     eax, ~0x0000_0FFF
    40 00000B05 83C807              <1>         or      eax, 7
    41 00000B08 898700F0FFFF        <1>         mov     [edi - (1024 * 4)], eax
    42                              <1> 
    43 00000B0E B807000000          <1>         mov     eax, 0x00000007
    44 00000B13 B900040000          <1>         mov     ecx, 1024
    45                              <1> 
    46                              <1> .10L:
    47 00000B18 AB                  <1>         stosd
    48 00000B19 0500100000          <1>         add     eax, 0x00001000
    49 00000B1E E2F8                <1>         loop    .10L
    50                              <1> 
    51 00000B20 61                  <1>         popa
    52                              <1> 
    53 00000B21 89EC                <1>         mov     esp, ebp
    54 00000B23 5D                  <1>         pop     ebp
    55                              <1> 
    56 00000B24 C3                  <1>         ret
    98                                  %include    "tasks/task_1.s"
     1                              <1> task_1:
     2                              <1> 
     3 00000B25 68[530B0000]6A076A- <1>         cdecl   draw_str, 63, 0, 0x07, .s0
     3 00000B2D 006A3FE82005000066- <1>
     3 00000B36 83C410              <1>
     4                              <1> .10L:
     5                              <1> 
     6 00000B39 A1[A4020000]        <1>         mov     eax, [RTC_TIME]
     7 00000B3E 5068000700006A006A- <1>         cdecl   draw_time, 72, 0, 0x0700, eax
     7 00000B47 48E8640800006683C4- <1>
     7 00000B50 10                  <1>
     8                              <1> 
     9 00000B51 EBE6                <1>         jmp     .10L
    10                              <1> 
    11 00000B53 5461736B2D3100      <1> .s0     db  "Task-1", 0
    99                                  %include    "tasks/task_2.s"
     1                              <1> task_2:
     2                              <1> 
     3 00000B5A 68[260C0000]6A076A- <1>         cdecl   draw_str, 63, 1, 0x07, .s0
     3 00000B62 016A3FE8EB04000066- <1>
     3 00000B6B 83C410              <1>
     4                              <1> 
     5 00000B6E DB05[140C0000]      <1>         fild    dword [.c1000]
     6 00000B74 D9EB                <1>         fldpi
     7 00000B76 DA35[180C0000]      <1>         fidiv   dword [.c180]
     8 00000B7C D9EB                <1>         fldpi
     9 00000B7E DCC0                <1>         fadd    st0, st0
    10 00000B80 D9EE                <1>         fldz
    11                              <1> .10L:
    12                              <1> 
    13 00000B82 D8C2                <1>         fadd    st0, st2
    14 00000B84 D9F8                <1>         fprem
    15 00000B86 D9C0                <1>         fld     st0
    16 00000B88 D9FE                <1>         fsin
    17 00000B8A D8CC                <1>         fmul    st0, st4
    18                              <1> 
    19 00000B8C DF35[1C0C0000]      <1>         fbstp   [.bcd]
    20                              <1> 
    21 00000B92 A1[1C0C0000]        <1>         mov     eax, [.bcd]
    22 00000B97 89C3                <1>         mov     ebx, eax
    23                              <1> 
    24 00000B99 250F0F0000          <1>         and     eax, 0x0F0F
    25 00000B9E 0D30300000          <1>         or      eax, 0x3030
    26                              <1> 
    27 00000BA3 C1EB04              <1>         shr     ebx, 4
    28 00000BA6 81E30F0F0000        <1>         and     ebx, 0x0F0F
    29 00000BAC 81CB30300000        <1>         or      ebx, 0x3030
    30                              <1> 
    31 00000BB2 883D[2E0C0000]      <1>         mov     [.s2 + 0], bh
    32 00000BB8 8825[300C0000]      <1>         mov     [.s3 + 0], ah
    33 00000BBE 881D[310C0000]      <1>         mov     [.s3 + 1], bl
    34 00000BC4 A2[320C0000]        <1>         mov     [.s3 + 2], al
    35                              <1> 
    36 00000BC9 B807000000          <1>         mov     eax, 7
    37 00000BCE 0FA305[250C0000]    <1>         bt      [.bcd + 9], eax
    38 00000BD5 7209                <1>         jc      .10F
    39                              <1> 
    40 00000BD7 C605[2D0C0000]2B    <1>         mov     [.s1 + 0], byte '+'
    41 00000BDE EB07                <1>         jmp     .10E
    42                              <1> .10F:
    43                              <1> 
    44 00000BE0 C605[2D0C0000]2D    <1>         mov     [.s1 + 0], byte '-'
    45                              <1> .10E:
    46                              <1> 
    47 00000BE7 68[2D0C0000]6A076A- <1>         cdecl   draw_str, 72, 1, 0x07, .s1
    47 00000BEF 016A48E85E04000066- <1>
    47 00000BF8 83C410              <1>
    48                              <1> 
    49 00000BFB B914000000          <1>         mov     ecx, 20
    50                              <1> 
    51                              <1> .20L:
    52 00000C00 A1[440A0000]        <1>         mov     eax, [TIMER_COUNT]
    53                              <1> .21L:
    54 00000C05 3905[440A0000]      <1>         cmp     [TIMER_COUNT], eax
    55 00000C0B 74F8                <1>         je      .21L
    56 00000C0D E2F1                <1>         loop    .20L
    57                              <1> 
    58 00000C0F E96EFFFFFF          <1>         jmp     .10L
    59                              <1> 
    60                              <1> ALIGN 4, db 0
    61 00000C14 E8030000            <1> .c1000      dd  1000
    62 00000C18 B4000000            <1> .c180       dd  180
    63                              <1> 
    64 00000C1C 00<rept>            <1> .bcd:   times 10 db 0x00
    65                              <1> 
    66 00000C26 5461736B2D3200      <1> .s0     db  "Task-2", 0
    67 00000C2D 2D                  <1> .s1     db  "-"
    68 00000C2E 302E                <1> .s2     db  "0."
    69 00000C30 30303000            <1> .s3     db  "000", 0
   100                                  %include    "tasks/task_3.s"
     1                              <1> task_3:
     2                              <1> 
     3 00000C34 89E5                <1>         mov     ebp, esp
     4                              <1> 
     5 00000C36 6A00                <1>         push    dword 0
     6 00000C38 6A00                <1>         push    dword 0
     7 00000C3A 6A00                <1>         push    dword 0
     8 00000C3C 6A00                <1>         push    dword 0
     9 00000C3E 6A00                <1>         push    dword 0
    10                              <1> 
    11 00000C40 BE00701000          <1>         mov     esi, 0x0010_7000
    12                              <1> 
    13 00000C45 8B06                <1>         mov     eax, [esi + rose.x0]
    14 00000C47 8B5E04              <1>         mov     ebx, [esi + rose.y0]
    15                              <1> 
    16 00000C4A C1E803              <1>         shr     eax, 3
    17 00000C4D C1EB04              <1>         shr     ebx, 4
    18 00000C50 4B                  <1>         dec     ebx
    19 00000C51 8B4E24              <1>         mov     ecx, [esi + rose.color_s]
    20 00000C54 8D5630              <1>         lea     edx, [esi + rose.title]
    21                              <1> 
    22 00000C57 52515350E8F5030000- <1>         cdecl   draw_str, eax, ebx, ecx, edx
    22 00000C60 6683C410            <1>
    23                              <1> 
    24 00000C64 8B06                <1>         mov     eax, [esi + rose.x0]
    25 00000C66 8B5E08              <1>         mov     ebx, [esi + rose.x1]
    26 00000C69 29C3                <1>         sub     ebx, eax
    27 00000C6B D1EB                <1>         shr     ebx, 1
    28 00000C6D 01C3                <1>         add     ebx, eax
    29 00000C6F 895DFC              <1>         mov     [ebp - 4], ebx
    30                              <1> 
    31 00000C72 8B4604              <1>         mov     eax, [esi + rose.y0]
    32 00000C75 8B5E0C              <1>         mov     ebx, [esi + rose.y1]
    33 00000C78 29C3                <1>         sub     ebx, eax
    34 00000C7A D1EB                <1>         shr     ebx, 1
    35 00000C7C 01C3                <1>         add     ebx, eax
    36 00000C7E 895DF8              <1>         mov     [ebp - 8], ebx
    37                              <1> 
    38 00000C81 8B06                <1>         mov     eax, [esi + rose.x0]
    39 00000C83 8B5DF8              <1>         mov     ebx, [ebp - 8]
    40 00000C86 8B4E08              <1>         mov     ecx, [esi + rose.x1]
    41                              <1> 
    42 00000C89 FF761853515350E83C- <1>         cdecl   draw_line, eax, ebx, ecx, ebx, dword [esi + rose.color_x]
    42 00000C92 0500006683C414      <1>
    43                              <1> 
    44 00000C99 8B4604              <1>         mov     eax, [esi + rose.y0]
    45 00000C9C 8B5DFC              <1>         mov     ebx, [ebp - 4]
    46 00000C9F 8B4E0C              <1>         mov     ecx, [esi + rose.y1]
    47                              <1> 
    48 00000CA2 FF761C51535053E823- <1>         cdecl   draw_line, ebx, eax, ebx, ecx, dword [esi + rose.color_y]
    48 00000CAB 0500006683C414      <1>
    49                              <1> 
    50 00000CB2 8B06                <1>         mov     eax, [esi + rose.x0]
    51 00000CB4 8B5E04              <1>         mov     ebx, [esi + rose.y0]
    52 00000CB7 8B4E08              <1>         mov     ecx, [esi + rose.x1]
    53 00000CBA 8B560C              <1>         mov     edx, [esi + rose.y1]
    54                              <1> 
    55 00000CBD FF762052515350E8B7- <1>         cdecl   draw_rect, eax, ebx, ecx, edx, dword [esi + rose.color_z]
    55 00000CC6 0500006683C414      <1>
    56                              <1> 
    57 00000CCD 8B4608              <1>         mov     eax, [esi + rose.x1]
    58 00000CD0 2B06                <1>         sub     eax, [esi + rose.x0]
    59 00000CD2 D1E8                <1>         shr     eax, 1
    60 00000CD4 89C3                <1>         mov     ebx, eax
    61 00000CD6 C1EB04              <1>         shr     ebx, 4
    62 00000CD9 29D8                <1>         sub     eax, ebx
    63                              <1> 
    64 00000CDB FF7614FF761050E84D- <1>         cdecl   fpu_rose_init, eax, dword [esi + rose.n], dword [esi + rose.d]
    64 00000CE4 0100006683C40C      <1>
    65                              <1> 
    66                              <1> .10L:
    67                              <1> 
    68 00000CEB 8D5DF4              <1>         lea     ebx, [ebp - 12]
    69 00000CEE 8D4DF0              <1>         lea     ecx, [ebp - 16]
    70 00000CF1 8B45EC              <1>         mov     eax, [ebp - 20]
    71                              <1> 
    72 00000CF4 505153E85201000066- <1>         cdecl   fpu_rose_update, ebx, ecx, eax
    72 00000CFD 83C40C              <1>
    73                              <1> 
    74 00000D00 BA00000000          <1>         mov     edx, 0
    75 00000D05 40                  <1>         inc     eax
    76 00000D06 BBA08C0000          <1>         mov     ebx, 360 * 100
    77 00000D0B F7F3                <1>         div     ebx
    78 00000D0D 8955EC              <1>         mov     [ebp - 20], edx
    79                              <1> 
    80 00000D10 8B4DF4              <1>         mov     ecx, [ebp - 12]
    81 00000D13 8B55F0              <1>         mov     edx, [ebp - 16]
    82                              <1> 
    83 00000D16 034DFC              <1>         add     ecx, [ebp - 4]
    84 00000D19 0355F8              <1>         add     edx, [ebp - 8]
    85                              <1> 
    86 00000D1C 8B5E28              <1>         mov     ebx, [esi + rose.color_f]
    87 00000D1F CD82                <1>         int     0x82
    88                              <1> 
    89 00000D21 6A02E84E0B00006683- <1>         cdecl   wait_tick, 2
    89 00000D2A C404                <1>
    90                              <1> 
    91 00000D2C 8B5E2C              <1>         mov     ebx, [esi + rose.color_b]
    92 00000D2F CD82                <1>         int     0x82
    93                              <1> 
    94 00000D31 EBB8                <1>         jmp     .10L
    95                              <1> 
    96 00000D33 00                  <1> ALIGN 4, db 0
    97                              <1> DRAW_PARAM:
    98                              <1> .t3:
    99                              <1>     istruc  rose
   100 00000D34 20000000            <1>         at  rose.x0,        dd      32
   101 00000D38 20000000            <1>         at  rose.y0,        dd      32
   102 00000D3C D0000000            <1>         at  rose.x1,        dd      208
   103 00000D40 D0000000            <1>         at  rose.y1,        dd      208
   104                              <1> 
   105 00000D44 02000000            <1>         at  rose.n,         dd      2
   106 00000D48 01000000            <1>         at  rose.d,         dd      1
   107                              <1> 
   108 00000D4C 07000000            <1>         at  rose.color_x,   dd      0x0007
   109 00000D50 07000000            <1>         at  rose.color_y,   dd      0x0007
   110 00000D54 0F000000            <1>         at  rose.color_z,   dd      0x000F
   111 00000D58 0F030000            <1>         at  rose.color_s,   dd      0x030F
   112 00000D5C 0F000000            <1>         at  rose.color_f,   dd      0x000F
   113 00000D60 03000000            <1>         at  rose.color_b,   dd      0x0003
   114                              <1> 
   115 00000D64 5461736B2D3300      <1>         at  rose.title,     db      "Task-3", 0
   116 00000D6B 00<rept>            <1>     iend
   117                              <1> 
   118                              <1> .t4:
   119                              <1>     istruc  rose
   120 00000D74 F8000000            <1>         at  rose.x0,        dd      248
   121 00000D78 20000000            <1>         at  rose.y0,        dd      32
   122 00000D7C A8010000            <1>         at  rose.x1,        dd      424
   123 00000D80 D0000000            <1>         at  rose.y1,        dd      208
   124                              <1> 
   125 00000D84 03000000            <1>         at  rose.n,         dd      3
   126 00000D88 01000000            <1>         at  rose.d,         dd      1
   127                              <1> 
   128 00000D8C 07000000            <1>         at  rose.color_x,   dd      0x0007
   129 00000D90 07000000            <1>         at  rose.color_y,   dd      0x0007
   130 00000D94 0F000000            <1>         at  rose.color_z,   dd      0x000F
   131 00000D98 0F040000            <1>         at  rose.color_s,   dd      0x040F
   132 00000D9C 0F000000            <1>         at  rose.color_f,   dd      0x000F
   133 00000DA0 04000000            <1>         at  rose.color_b,   dd      0x0004
   134                              <1> 
   135 00000DA4 5461736B2D3400      <1>         at  rose.title,     db      "Task-4", 0
   136 00000DAB 00<rept>            <1>     iend
   137                              <1> 
   138                              <1> .t5:
   139                              <1>     istruc  rose
   140 00000DB4 20000000            <1>         at  rose.x0,        dd      32
   141 00000DB8 10010000            <1>         at  rose.y0,        dd      272
   142 00000DBC D0000000            <1>         at  rose.x1,        dd      208
   143 00000DC0 C0010000            <1>         at  rose.y1,        dd      448
   144                              <1> 
   145 00000DC4 02000000            <1>         at  rose.n,         dd      2
   146 00000DC8 06000000            <1>         at  rose.d,         dd      6
   147                              <1> 
   148 00000DCC 07000000            <1>         at  rose.color_x,   dd      0x0007
   149 00000DD0 07000000            <1>         at  rose.color_y,   dd      0x0007
   150 00000DD4 0F000000            <1>         at  rose.color_z,   dd      0x000F
   151 00000DD8 0F050000            <1>         at  rose.color_s,   dd      0x050F
   152 00000DDC 0F000000            <1>         at  rose.color_f,   dd      0x000F
   153 00000DE0 05000000            <1>         at  rose.color_b,   dd      0x0005
   154                              <1> 
   155 00000DE4 5461736B2D3500      <1>         at  rose.title,     db      "Task-5", 0
   156 00000DEB 00<rept>            <1>     iend
   157                              <1> 
   158                              <1> .t6:
   159                              <1>     istruc  rose
   160 00000DF4 F8000000            <1>         at  rose.x0,        dd      248
   161 00000DF8 10010000            <1>         at  rose.y0,        dd      272
   162 00000DFC A8010000            <1>         at  rose.x1,        dd      424
   163 00000E00 C0010000            <1>         at  rose.y1,        dd      448
   164                              <1> 
   165 00000E04 04000000            <1>         at  rose.n,         dd      4
   166 00000E08 06000000            <1>         at  rose.d,         dd      6
   167                              <1> 
   168 00000E0C 07000000            <1>         at  rose.color_x,   dd      0x0007
   169 00000E10 07000000            <1>         at  rose.color_y,   dd      0x0007
   170 00000E14 0F000000            <1>         at  rose.color_z,   dd      0x000F
   171 00000E18 0F060000            <1>         at  rose.color_s,   dd      0x060F
   172 00000E1C 0F000000            <1>         at  rose.color_f,   dd      0x000F
   173 00000E20 06000000            <1>         at  rose.color_b,   dd      0x0006
   174                              <1> 
   175 00000E24 5461736B2D3600      <1>         at  rose.title,     db      "Task-6", 0
   176 00000E2B 00<rept>            <1>     iend
   177                              <1> 
   178                              <1> fpu_rose_init:
   179                              <1> 
   180 00000E34 55                  <1>         push    ebp
   181 00000E35 89E5                <1>         mov     ebp, esp
   182                              <1> 
   183 00000E37 68B4000000          <1>         push    dword 180
   184                              <1> 
   185 00000E3C D9EB                <1>         fldpi
   186 00000E3E DA75FC              <1>         fidiv   dword [ebp - 4]
   187 00000E41 DB450C              <1>         fild    dword [ebp + 12]
   188 00000E44 DA7510              <1>         fidiv   dword [ebp + 16]
   189 00000E47 DB4508              <1>         fild    dword [ebp + 8]
   190                              <1> 
   191 00000E4A 89EC                <1>         mov     esp, ebp
   192 00000E4C 5D                  <1>         pop     ebp
   193                              <1> 
   194 00000E4D C3                  <1>         ret
   195                              <1> 
   196                              <1> 
   197                              <1> fpu_rose_update:
   198                              <1> 
   199 00000E4E 55                  <1>         push    ebp
   200 00000E4F 89E5                <1>         mov     ebp, esp
   201                              <1> 
   202 00000E51 50                  <1>         push    eax
   203 00000E52 53                  <1>         push    ebx
   204                              <1> 
   205 00000E53 8B4508              <1>         mov     eax, [ebp + 8]
   206 00000E56 8B5D0C              <1>         mov     ebx, [ebp + 12]
   207                              <1> 
   208 00000E59 DB4510              <1>         fild    dword [ebp + 16]
   209 00000E5C D8CB                <1>         fmul    st0, st3
   210 00000E5E D9C0                <1>         fld     st0
   211                              <1> 
   212 00000E60 D9FB                <1>         fsincos
   213 00000E62 D9CA                <1>         fxch    st2
   214 00000E64 D8CC                <1>         fmul    st0, st4
   215 00000E66 D9FE                <1>         fsin
   216 00000E68 D8CB                <1>         fmul    st0, st3
   217                              <1> 
   218 00000E6A D9CA                <1>         fxch    st2
   219 00000E6C D8CA                <1>         fmul    st0, st2
   220 00000E6E DB18                <1>         fistp   dword [eax]
   221                              <1> 
   222 00000E70 DEC9                <1>         fmulp   st1, st0
   223 00000E72 D9E0                <1>         fchs
   224 00000E74 DB1B                <1>         fistp   dword [ebx]
   225                              <1> 
   226 00000E76 5B                  <1>         pop     ebx
   227 00000E77 58                  <1>         pop     eax
   228                              <1> 
   229 00000E78 89EC                <1>         mov     esp, ebp
   230 00000E7A 5D                  <1>         pop     ebp
   231                              <1> 
   232 00000E7B C3                  <1>         ret
   101                                  
   102                                  %include    "../modules/protect/vga.s"
     1                              <1> vga_set_read_plane:
     2                              <1> 
     3 00000E7C 55                  <1>         push    ebp
     4 00000E7D 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000E7F 50                  <1>         push    eax
     7 00000E80 52                  <1>         push    edx
     8                              <1> 
     9 00000E81 8A6508              <1>         mov     ah, [ebp + 8]
    10 00000E84 80E403              <1>         and     ah, 0x03
    11 00000E87 B004                <1>         mov     al, 0x04
    12 00000E89 66BACE03            <1>         mov     dx, 0x03CE
    13 00000E8D 66EF                <1>         out     dx, ax
    14                              <1> 
    15 00000E8F 5A                  <1>         pop     edx
    16 00000E90 58                  <1>         pop     eax
    17                              <1> 
    18 00000E91 89EC                <1>         mov     esp, ebp
    19 00000E93 5D                  <1>         pop     ebp
    20                              <1> 
    21 00000E94 C3                  <1>         ret
    22                              <1> 
    23                              <1> 
    24                              <1> vga_set_write_plane:
    25                              <1> 
    26 00000E95 55                  <1>          push    ebp
    27 00000E96 89E5                <1>          mov     ebp, esp
    28                              <1>  
    29 00000E98 50                  <1>          push    eax
    30 00000E99 52                  <1>          push    edx
    31                              <1>  
    32 00000E9A 8A6508              <1>          mov     ah, [ebp + 8]
    33 00000E9D 80E40F              <1>          and     ah, 0x0F
    34 00000EA0 B002                <1>          mov     al, 0x02
    35 00000EA2 66BAC403            <1>          mov     dx, 0x03C4
    36 00000EA6 66EF                <1>          out     dx, ax
    37                              <1>  
    38 00000EA8 5A                  <1>          pop     edx
    39 00000EA9 58                  <1>          pop     eax
    40                              <1>  
    41 00000EAA 89EC                <1>          mov     esp, ebp
    42 00000EAC 5D                  <1>          pop     ebp
    43                              <1>  
    44 00000EAD C3                  <1>          ret
    45                              <1> 
    46                              <1> 
    47                              <1> vram_font_copy:
    48                              <1> 
    49 00000EAE 55                  <1>         push    ebp
    50 00000EAF 89E5                <1>         mov     ebp, esp
    51                              <1> 
    52 00000EB1 50                  <1>         push    eax
    53 00000EB2 53                  <1>         push    ebx
    54 00000EB3 51                  <1>         push    ecx
    55 00000EB4 52                  <1>         push    edx
    56 00000EB5 56                  <1>         push    esi
    57 00000EB6 57                  <1>         push    edi
    58                              <1> 
    59 00000EB7 8B7508              <1>         mov     esi, [ebp + 8]
    60 00000EBA 8B7D0C              <1>         mov     edi, [ebp + 12]
    61 00000EBD 0FB64510            <1>         movzx   eax, byte [ebp + 16]
    62 00000EC1 0FB75D14            <1>         movzx   ebx, word [ebp + 20]
    63                              <1> 
    64 00000EC5 84C7                <1>         test    bh, al
    65 00000EC7 0F94C6              <1>         setz    dh
    66 00000ECA FECE                <1>         dec     dh
    67                              <1> 
    68 00000ECC 84C3                <1>         test    bl, al
    69 00000ECE 0F94C2              <1>         setz    dl
    70 00000ED1 FECA                <1>         dec     dl
    71                              <1> 
    72 00000ED3 FC                  <1>         cld
    73                              <1> 
    74 00000ED4 B910000000          <1>         mov     ecx, 16
    75                              <1> .10L:
    76                              <1> 
    77 00000ED9 AC                  <1>         lodsb
    78 00000EDA 88C4                <1>         mov     ah, al
    79 00000EDC F6D4                <1>         not     ah
    80                              <1> 
    81 00000EDE 20D0                <1>         and     al, dl
    82                              <1> 
    83 00000EE0 F7C310000000        <1>         test    ebx, 0x0010
    84 00000EE6 7404                <1>         jz      .11F
    85 00000EE8 2227                <1>         and     ah, [edi]
    86 00000EEA EB02                <1>         jmp     .11E
    87                              <1> .11F:
    88                              <1> 
    89 00000EEC 20F4                <1>         and     ah, dh
    90                              <1> .11E:
    91                              <1> 
    92 00000EEE 08E0                <1>         or      al, ah
    93                              <1> 
    94 00000EF0 8807                <1>         mov     [edi], al
    95                              <1> 
    96 00000EF2 83C750              <1>         add     edi, 80
    97 00000EF5 E2E2                <1>         loop    .10L
    98                              <1> .10E:
    99                              <1> 
   100 00000EF7 5F                  <1>         pop     edi
   101 00000EF8 5E                  <1>         pop     esi
   102 00000EF9 5A                  <1>         pop     edx
   103 00000EFA 59                  <1>         pop     ecx
   104 00000EFB 5B                  <1>         pop     ebx
   105 00000EFC 58                  <1>         pop     eax
   106                              <1> 
   107 00000EFD 89EC                <1>         mov     esp, ebp
   108 00000EFF 5D                  <1>         pop     ebp
   109                              <1> 
   110 00000F00 C3                  <1>         ret
   111                              <1> 
   112                              <1> 
   113                              <1> 
   114                              <1> vram_bit_copy:
   115                              <1> 
   116 00000F01 55                  <1>         push    ebp
   117 00000F02 89E5                <1>         mov     ebp, esp
   118                              <1> 
   119 00000F04 50                  <1>         push    eax
   120 00000F05 53                  <1>         push    ebx
   121 00000F06 57                  <1>         push    edi
   122                              <1> 
   123 00000F07 8B7D0C              <1>         mov     edi, [ebp + 12]
   124 00000F0A 0FB64510            <1>         movzx   eax, byte [ebp + 16]
   125 00000F0E 0FB75D14            <1>         movzx   ebx, word [ebp + 20]
   126                              <1> 
   127 00000F12 84C3                <1>         test    bl, al
   128 00000F14 0F94C3              <1>         setz    bl
   129 00000F17 FECB                <1>         dec     bl
   130                              <1> 
   131 00000F19 8A4508              <1>         mov     al, [ebp + 8]
   132 00000F1C 88C4                <1>         mov     ah, al
   133 00000F1E F6D4                <1>         not     ah
   134                              <1> 
   135 00000F20 2227                <1>         and     ah, [edi]
   136 00000F22 20D8                <1>         and     al, bl
   137 00000F24 08E0                <1>         or      al, ah
   138                              <1> 
   139 00000F26 8807                <1>         mov     [edi], al
   140                              <1> 
   141 00000F28 5F                  <1>         pop     edi
   142 00000F29 5B                  <1>         pop     ebx
   143 00000F2A 58                  <1>         pop     eax
   144                              <1> 
   145 00000F2B 89EC                <1>         mov     esp, ebp
   146 00000F2D 5D                  <1>         pop     ebp
   147                              <1> 
   148 00000F2E C3                  <1>         ret
   103                                  %include    "../modules/protect/draw_char.s"
     1                              <1> draw_char:
     2                              <1> 
     3 00000F2F 55                  <1>         push    ebp
     4 00000F30 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000F32 50                  <1>         push    eax
     7 00000F33 53                  <1>         push    ebx
     8 00000F34 51                  <1>         push    ecx
     9 00000F35 52                  <1>         push    edx
    10 00000F36 56                  <1>         push    esi
    11 00000F37 57                  <1>         push    edi
    12                              <1> 
    13                              <1> %ifdef  USE_TEST_AND_SET
    14 00000F38 68[0C100000]E88508- <1>         cdecl   test_and_set, IN_USE
    14 00000F40 00006683C404        <1>
    15                              <1> %endif
    16                              <1> 
    17 00000F46 0FB67514            <1>         movzx   esi, byte [ebp + 20]
    18 00000F4A C1E604              <1>         shl     esi, 4
    19 00000F4D 0335[A0020000]      <1>         add     esi, [FONT_ADR]
    20                              <1> 
    21 00000F53 8B7D0C              <1>         mov     edi, [ebp + 12]
    22 00000F56 C1E708              <1>         shl     edi, 8
    23 00000F59 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA0000]
    24 00000F60 037D08              <1>         add     edi, [ebp + 8]
    25                              <1> 
    26 00000F63 0FB75D10            <1>         movzx   ebx, word [ebp + 16]
    27                              <1> 
    28 00000F67 6A03E80EFFFFFF6683- <1>         cdecl   vga_set_read_plane, 0x03
    28 00000F70 C404                <1>
    29 00000F72 6A08E81CFFFFFF6683- <1>         cdecl   vga_set_write_plane, 0x08
    29 00000F7B C404                <1>
    30 00000F7D 536A085756E827FFFF- <1>         cdecl   vram_font_copy, esi, edi, 0x08, ebx
    30 00000F86 FF6683C410          <1>
    31                              <1> 
    32 00000F8B 6A02E8EAFEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x02
    32 00000F94 C404                <1>
    33 00000F96 6A04E8F8FEFFFF6683- <1>         cdecl   vga_set_write_plane, 0x04
    33 00000F9F C404                <1>
    34 00000FA1 536A045756E803FFFF- <1>         cdecl   vram_font_copy, esi, edi, 0x04, ebx
    34 00000FAA FF6683C410          <1>
    35                              <1> 
    36 00000FAF 6A01E8C6FEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x01
    36 00000FB8 C404                <1>
    37 00000FBA 6A02E8D4FEFFFF6683- <1>         cdecl   vga_set_write_plane, 0x02
    37 00000FC3 C404                <1>
    38 00000FC5 536A025756E8DFFEFF- <1>         cdecl   vram_font_copy, esi, edi, 0x02, ebx
    38 00000FCE FF6683C410          <1>
    39                              <1> 
    40 00000FD3 6A00E8A2FEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x00
    40 00000FDC C404                <1>
    41 00000FDE 6A01E8B0FEFFFF6683- <1>         cdecl   vga_set_write_plane, 0x01
    41 00000FE7 C404                <1>
    42 00000FE9 536A015756E8BBFEFF- <1>         cdecl   vram_font_copy, esi, edi, 0x01, ebx
    42 00000FF2 FF6683C410          <1>
    43                              <1> 
    44                              <1> %ifdef  USE_TEST_AND_SET
    45 00000FF7 C705[0C100000]0000- <1>         mov     [IN_USE], dword 0
    45 00000FFF 0000                <1>
    46                              <1> %endif
    47                              <1> 
    48 00001001 5F                  <1>         pop     edi
    49 00001002 5E                  <1>         pop     esi
    50 00001003 5A                  <1>         pop     edx
    51 00001004 59                  <1>         pop     ecx
    52 00001005 5B                  <1>         pop     ebx
    53 00001006 58                  <1>         pop     eax
    54                              <1> 
    55 00001007 89EC                <1>         mov     esp, ebp
    56 00001009 5D                  <1>         pop     ebp
    57                              <1> 
    58 0000100A C3                  <1>         ret
    59                              <1> 
    60                              <1> %ifdef USE_TEST_AND_SET
    61 0000100B 00                  <1> ALIGN 4, db 0
    62 0000100C 00000000            <1> IN_USE:	dd	0
    63                              <1> %endif
   104                                  %include    "../modules/protect/draw_font.s"
     1                              <1> draw_font:
     2                              <1> 
     3 00001010 55                  <1>         push    ebp
     4 00001011 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00001013 50                  <1>         push    eax
     7 00001014 53                  <1>         push    ebx
     8 00001015 51                  <1>         push    ecx
     9 00001016 52                  <1>         push    edx
    10 00001017 56                  <1>         push    esi
    11 00001018 57                  <1>         push    edi
    12                              <1> 
    13 00001019 8B7508              <1>         mov     esi, [ebp + 8]
    14 0000101C 8B7D0C              <1>         mov     edi, [ebp + 12]
    15                              <1> 
    16 0000101F B900000000          <1>         mov     ecx, 0
    17 00001024 81F900010000        <1> .10L:   cmp     ecx, 256
    18 0000102A 731F                <1>         jae     .10E
    19                              <1> 
    20 0000102C 89C8                <1>         mov     eax, ecx
    21 0000102E 83E00F              <1>         and     eax, 0x0F
    22 00001031 01F0                <1>         add     eax, esi
    23                              <1> 
    24 00001033 89CB                <1>         mov     ebx, ecx
    25 00001035 C1EB04              <1>         shr     ebx, 4
    26 00001038 01FB                <1>         add     ebx, edi
    27                              <1> 
    28 0000103A 516A075350E8EBFEFF- <1>         cdecl   draw_char, eax, ebx, 0x07, ecx
    28 00001043 FF6683C410          <1>
    29                              <1> 
    30 00001048 41                  <1>         inc     ecx
    31 00001049 EBD9                <1>         jmp     .10L
    32                              <1> .10E:
    33                              <1> 
    34 0000104B 5F                  <1>         pop     edi
    35 0000104C 5E                  <1>         pop     esi
    36 0000104D 5A                  <1>         pop     edx
    37 0000104E 59                  <1>         pop     ecx
    38 0000104F 5B                  <1>         pop     ebx
    39 00001050 58                  <1>         pop     eax
    40                              <1> 
    41 00001051 89EC                <1>         mov     esp, ebp
    42 00001053 5D                  <1>         pop     ebp
    43                              <1> 
    44 00001054 C3                  <1>         ret
   105                                  %include    "../modules/protect/draw_str.s"
     1                              <1> draw_str:
     2                              <1> 
     3 00001055 55                  <1>         push    ebp
     4 00001056 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00001058 50                  <1>         push    eax
     7 00001059 53                  <1>         push    ebx
     8 0000105A 51                  <1>         push    ecx
     9 0000105B 52                  <1>         push    edx
    10 0000105C 56                  <1>         push    esi
    11                              <1> 
    12 0000105D 8B4D08              <1>         mov     ecx, [ebp + 8]
    13 00001060 8B550C              <1>         mov     edx, [ebp + 12]
    14 00001063 0FB75D10            <1>         movzx   ebx, word [ebp + 16]
    15 00001067 8B7514              <1>         mov     esi, [ebp + 20]
    16                              <1> 
    17 0000106A FC                  <1>         cld
    18                              <1> .10L:
    19                              <1> 
    20 0000106B AC                  <1>         lodsb
    21 0000106C 3C00                <1>         cmp     al, 0
    22 0000106E 741A                <1>         je      .10E
    23                              <1> 
    24                              <1> %ifdef  USE_SYSTEM_CALL
    25 00001070 CD81                <1>         int     0x81
    26                              <1> %else
    27                              <1>         cdecl   draw_char, ecx, edx, ebx, eax
    28                              <1> %endif
    29                              <1> 
    30 00001072 41                  <1>         inc     ecx
    31 00001073 83F950              <1>         cmp     ecx, 80
    32 00001076 7C10                <1>         jl      .12E
    33 00001078 B900000000          <1>         mov     ecx, 0
    34 0000107D 42                  <1>         inc     edx
    35 0000107E 83FA1E              <1>         cmp     edx, 30
    36 00001081 7C05                <1>         jl      .12E
    37 00001083 BA00000000          <1>         mov     edx, 0
    38                              <1> 
    39                              <1> .12E:
    40 00001088 EBE1                <1>         jmp     .10L
    41                              <1> .10E:
    42                              <1> 
    43 0000108A 5E                  <1>         pop     esi
    44 0000108B 5A                  <1>         pop     edx
    45 0000108C 59                  <1>         pop     ecx
    46 0000108D 5B                  <1>         pop     ebx
    47 0000108E 58                  <1>         pop     eax
    48                              <1> 
    49 0000108F 89EC                <1>         mov     esp, ebp
    50 00001091 5D                  <1>         pop     ebp
    51                              <1> 
    52 00001092 C3                  <1>         ret
   106                                  %include    "../modules/protect/draw_color_bar.s"
     1                              <1> draw_color_bar:
     2                              <1> 
     3 00001093 55                  <1>         push    ebp
     4 00001094 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00001096 50                  <1>         push    eax
     7 00001097 53                  <1>         push    ebx
     8 00001098 51                  <1>         push    ecx
     9 00001099 52                  <1>         push    edx
    10 0000109A 56                  <1>         push    esi
    11 0000109B 57                  <1>         push    edi
    12                              <1> 
    13 0000109C 8B7508              <1>         mov     esi, [ebp + 8]
    14 0000109F 8B7D0C              <1>         mov     edi, [ebp + 12]
    15                              <1> 
    16 000010A2 B900000000          <1>         mov     ecx, 0
    17 000010A7 83F910              <1> .10L:   cmp     ecx, 16
    18 000010AA 732E                <1>         jae     .10E
    19                              <1> 
    20 000010AC 89C8                <1>         mov     eax, ecx
    21 000010AE 83E001              <1>         and     eax, 0x01
    22 000010B1 C1E003              <1>         shl     eax, 3
    23 000010B4 01F0                <1>         add     eax, esi
    24                              <1> 
    25 000010B6 89CB                <1>         mov     ebx, ecx
    26 000010B8 D1EB                <1>         shr     ebx, 1
    27 000010BA 01FB                <1>         add     ebx, edi
    28                              <1> 
    29 000010BC 89CA                <1>         mov     edx, ecx
    30 000010BE D1E2                <1>         shl     edx, 1
    31 000010C0 8B92[EE100000]      <1>         mov     edx, [.t0 + edx]
    32                              <1> 
    33 000010C6 68[E4100000]525350- <1>         cdecl   draw_str, eax, ebx, edx, .s0
    33 000010CE E882FFFFFF6683C410  <1>
    34                              <1> 
    35 000010D7 41                  <1>         inc     ecx
    36 000010D8 EBCD                <1>         jmp     .10L
    37                              <1> .10E:
    38                              <1> 
    39 000010DA 5F                  <1>         pop     edi
    40 000010DB 5E                  <1>         pop     esi
    41 000010DC 5A                  <1>         pop     edx
    42 000010DD 59                  <1>         pop     ecx
    43 000010DE 5B                  <1>         pop     ebx
    44 000010DF 58                  <1>         pop     eax
    45                              <1> 
    46 000010E0 89EC                <1>         mov     esp, ebp
    47 000010E2 5D                  <1>         pop     ebp
    48                              <1> 
    49 000010E3 C3                  <1>         ret
    50                              <1> 
    51 000010E4 202020202020202020- <1> .s0     db  '         ', 0
    51 000010ED 00                  <1>
    52                              <1> 
    53 000010EE 00000008            <1> .t0     dw  0x0000, 0x0800
    54 000010F2 00010009            <1> 		dw	0x0100, 0x0900
    55 000010F6 0002000A            <1> 		dw	0x0200, 0x0A00
    56 000010FA 0003000B            <1> 		dw	0x0300, 0x0B00
    57 000010FE 0004000C            <1> 		dw	0x0400, 0x0C00
    58 00001102 0005000D            <1> 		dw	0x0500, 0x0D00
    59 00001106 0006000E            <1> 		dw	0x0600, 0x0E00
    60 0000110A 0007000F            <1> 		dw	0x0700, 0x0F00
   107                                  %include    "../modules/protect/draw_pixel.s"
     1                              <1> draw_pixel:
     2                              <1> 
     3 0000110E 55                  <1>         push    ebp
     4 0000110F 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00001111 50                  <1>         push    eax
     7 00001112 53                  <1>         push    ebx
     8 00001113 51                  <1>         push    ecx
     9 00001114 57                  <1>         push    edi
    10                              <1> 
    11 00001115 8B7D0C              <1>         mov     edi, [ebp + 12]
    12 00001118 C1E704              <1>         shl     edi, 4
    13 0000111B 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA_0000]
    14                              <1> 
    15 00001122 8B5D08              <1>         mov     ebx, [ebp + 8]
    16 00001125 89D9                <1>         mov     ecx, ebx
    17 00001127 C1EB03              <1>         shr     ebx, 3
    18 0000112A 01DF                <1>         add     edi, ebx
    19                              <1> 
    20 0000112C 83E107              <1>         and     ecx, 0x07
    21 0000112F BB80000000          <1>         mov     ebx, 0x80
    22 00001134 D3EB                <1>         shr     ebx, cl
    23                              <1> 
    24 00001136 8B4D10              <1>         mov     ecx, [ebp + 16]
    25                              <1> 
    26 00001139 6A03E83CFDFFFF6683- <1>         cdecl   vga_set_read_plane, 0x03
    26 00001142 C404                <1>
    27 00001144 6A08E84AFDFFFF6683- <1>         cdecl   vga_set_write_plane, 0x08
    27 0000114D C404                <1>
    28 0000114F 516A085753E8A8FDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x08, ecx
    28 00001158 FF6683C410          <1>
    29                              <1> 
    30 0000115D 6A02E818FDFFFF6683- <1>         cdecl   vga_set_read_plane, 0x02
    30 00001166 C404                <1>
    31 00001168 6A04E826FDFFFF6683- <1>         cdecl   vga_set_write_plane, 0x04
    31 00001171 C404                <1>
    32 00001173 516A045753E884FDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x04, ecx
    32 0000117C FF6683C410          <1>
    33                              <1> 
    34 00001181 6A01E8F4FCFFFF6683- <1>         cdecl   vga_set_read_plane, 0x01
    34 0000118A C404                <1>
    35 0000118C 6A02E802FDFFFF6683- <1>         cdecl   vga_set_write_plane, 0x02
    35 00001195 C404                <1>
    36 00001197 516A025753E860FDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x02, ecx
    36 000011A0 FF6683C410          <1>
    37                              <1> 
    38 000011A5 6A00E8D0FCFFFF6683- <1>         cdecl   vga_set_read_plane, 0x00
    38 000011AE C404                <1>
    39 000011B0 6A01E8DEFCFFFF6683- <1>         cdecl   vga_set_write_plane, 0x01
    39 000011B9 C404                <1>
    40 000011BB 516A015753E83CFDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x01, ecx
    40 000011C4 FF6683C410          <1>
    41                              <1> 
    42 000011C9 5F                  <1>         pop     edi
    43 000011CA 59                  <1>         pop     ecx
    44 000011CB 5B                  <1>         pop     ebx
    45 000011CC 58                  <1>         pop     eax
    46                              <1> 
    47 000011CD 89EC                <1>         mov     esp, ebp
    48 000011CF 5D                  <1>         pop     ebp
    49                              <1> 
    50 000011D0 C3                  <1>         ret
   108                                  %include    "../modules/protect/draw_line.s"
     1                              <1> draw_line:
     2                              <1> 
     3 000011D1 55                  <1>         push    ebp
     4 000011D2 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 000011D4 6A00                <1>         push    dword 0
     7 000011D6 6A00                <1>         push    dword 0
     8 000011D8 6A00                <1>         push    dword 0
     9 000011DA 6A00                <1>         push    dword 0
    10 000011DC 6A00                <1>         push    dword 0
    11 000011DE 6A00                <1>         push    dword 0
    12 000011E0 6A00                <1>         push    dword 0
    13                              <1> 
    14 000011E2 50                  <1>         push    eax
    15 000011E3 53                  <1>         push    ebx
    16 000011E4 51                  <1>         push    ecx
    17 000011E5 52                  <1>         push    edx
    18 000011E6 56                  <1>         push    esi
    19 000011E7 57                  <1>         push    edi
    20                              <1> 
    21 000011E8 8B4508              <1>         mov     eax, [ebp + 8]
    22 000011EB 8B5D10              <1>         mov     ebx, [ebp + 16]
    23 000011EE 29C3                <1>         sub     ebx, eax
    24 000011F0 7D09                <1>         jge     .10F
    25                              <1> 
    26 000011F2 F7DB                <1>         neg     ebx
    27 000011F4 BEFFFFFFFF          <1>         mov     esi, -1
    28 000011F9 EB05                <1>         jmp     .10E
    29                              <1> .10F:
    30                              <1> 
    31 000011FB BE01000000          <1>         mov     esi, 1
    32                              <1> .10E:
    33                              <1> 
    34 00001200 8B4D0C              <1>         mov     ecx, [ebp + 12]
    35 00001203 8B5514              <1>         mov     edx, [ebp + 20]
    36 00001206 29CA                <1>         sub     edx, ecx
    37 00001208 7D09                <1>         jge     .20F
    38                              <1> 
    39 0000120A F7DA                <1>         neg     edx
    40 0000120C BFFFFFFFFF          <1>         mov     edi, -1
    41 00001211 EB05                <1>         jmp     .20E
    42                              <1> .20F:
    43                              <1> 
    44 00001213 BF01000000          <1>         mov     edi, 1
    45                              <1> .20E:
    46                              <1> 
    47 00001218 8945F8              <1>         mov     [ebp - 8], eax
    48 0000121B 895DF4              <1>         mov     [ebp - 12], ebx
    49 0000121E 8975F0              <1>         mov     [ebp - 16], esi
    50                              <1> 
    51 00001221 894DEC              <1>         mov     [ebp - 20], ecx
    52 00001224 8955E8              <1>         mov     [ebp - 24], edx
    53 00001227 897DE4              <1>         mov     [ebp - 28], edi
    54                              <1> 
    55 0000122A 39D3                <1>         cmp     ebx, edx
    56 0000122C 7F08                <1>         jg      .22F
    57                              <1> 
    58 0000122E 8D75EC              <1>         lea     esi, [ebp - 20]
    59 00001231 8D7DF8              <1>         lea     edi, [ebp - 8]
    60                              <1> 
    61 00001234 EB06                <1>         jmp     .22E
    62                              <1> .22F:
    63                              <1> 
    64 00001236 8D75F8              <1>         lea     esi, [ebp - 8]
    65 00001239 8D7DEC              <1>         lea     edi, [ebp - 20]
    66                              <1> .22E:
    67                              <1> 
    68 0000123C 8B4EFC              <1>         mov     ecx, [esi - 4]
    69 0000123F 83F900              <1>         cmp     ecx, 0
    70 00001242 7505                <1>         jnz     .30E
    71 00001244 B901000000          <1>         mov     ecx, 1
    72                              <1> .30E:
    73                              <1> 
    74                              <1> .50L:
    75                              <1> 
    76                              <1> %ifdef  USE_SYSTEM_CALL
    77 00001249 89C8                <1>         mov     eax, ecx
    78                              <1> 
    79 0000124B 8B5D18              <1>         mov     ebx, [ebp + 24]
    80 0000124E 8B4DF8              <1>         mov     ecx, [ebp - 8]
    81 00001251 8B55EC              <1>         mov     edx, [ebp - 20]
    82 00001254 CD82                <1>         int     0x82
    83                              <1> 
    84 00001256 89C1                <1>         mov     ecx, eax
    85                              <1> %else
    86                              <1>         cdecl   draw_pixel, dword [ebp - 8], dword [ebp - 20], dword [ebp + 24]
    87                              <1> %endif
    88                              <1> 
    89 00001258 8B46F8              <1>         mov     eax, [esi - 8]
    90 0000125B 0106                <1>         add     [esi - 0], eax
    91                              <1> 
    92 0000125D 8B45FC              <1>         mov     eax, [ebp - 4]
    93 00001260 0347FC              <1>         add     eax, [edi - 4]
    94 00001263 8B5EFC              <1>         mov     ebx, [esi - 4]
    95                              <1> 
    96 00001266 39D8                <1>         cmp     eax, ebx
    97 00001268 7C07                <1>         jl      .52E
    98 0000126A 29D8                <1>         sub     eax, ebx
    99                              <1> 
   100 0000126C 8B5FF8              <1>         mov     ebx, [edi - 8]
   101 0000126F 011F                <1>         add     [edi - 0], ebx
   102                              <1> .52E:
   103                              <1> 
   104 00001271 8945FC              <1>         mov     [ebp - 4], eax
   105                              <1> 
   106 00001274 E2D3                <1>         loop    .50L
   107                              <1> .50E:
   108                              <1> 
   109 00001276 5F                  <1>         pop     edi
   110 00001277 5E                  <1>         pop     esi
   111 00001278 5A                  <1>         pop     edx
   112 00001279 59                  <1>         pop     ecx
   113 0000127A 5B                  <1>         pop     ebx
   114 0000127B 58                  <1>         pop     eax
   115                              <1> 
   116 0000127C 89EC                <1>         mov     esp, ebp
   117 0000127E 5D                  <1>         pop     ebp
   118                              <1> 
   119 0000127F C3                  <1>         ret
   109                                  %include    "../modules/protect/draw_rect.s"
     1                              <1> draw_rect:
     2                              <1> 
     3 00001280 55                  <1>         push    ebp
     4 00001281 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00001283 50                  <1>         push    eax
     7 00001284 53                  <1>         push    ebx
     8 00001285 51                  <1>         push    ecx
     9 00001286 52                  <1>         push    edx
    10 00001287 56                  <1>         push    esi
    11                              <1> 
    12 00001288 8B4508              <1>         mov     eax, [ebp + 8]
    13 0000128B 8B5D0C              <1>         mov     ebx, [ebp + 12]
    14 0000128E 8B4D10              <1>         mov     ecx, [ebp + 16]
    15 00001291 8B5514              <1>         mov     edx, [ebp + 20]
    16 00001294 8B7518              <1>         mov     esi, [ebp + 24]
    17                              <1> 
    18 00001297 39C8                <1>         cmp     eax, ecx
    19 00001299 7C01                <1>         jl      .10E
    20 0000129B 91                  <1>         xchg    eax, ecx
    21                              <1> .10E:
    22                              <1> 
    23 0000129C 39D3                <1>         cmp     ebx, edx
    24 0000129E 7C02                <1>         jl      .20E
    25 000012A0 87DA                <1>         xchg    ebx, edx
    26                              <1> .20E:
    27                              <1> 
    28 000012A2 5653515350E825FFFF- <1>         cdecl   draw_line, eax, ebx, ecx, ebx, esi
    28 000012AB FF6683C414          <1>
    29 000012B0 5652505350E817FFFF- <1>         cdecl   draw_line, eax, ebx, eax, edx, esi
    29 000012B9 FF6683C414          <1>
    30                              <1> 
    31 000012BE 4A                  <1>         dec     edx
    32 000012BF 5652515250E808FFFF- <1>         cdecl   draw_line, eax, edx, ecx, edx, esi
    32 000012C8 FF6683C414          <1>
    33 000012CD 42                  <1>         inc     edx
    34                              <1> 
    35 000012CE 4A                  <1>         dec     edx
    36 000012CF 5652515351E8F8FEFF- <1>         cdecl   draw_line, ecx, ebx, ecx, edx, esi
    36 000012D8 FF6683C414          <1>
    37                              <1> 
    38 000012DD 5E                  <1>         pop     esi
    39 000012DE 5A                  <1>         pop     edx
    40 000012DF 59                  <1>         pop     ecx
    41 000012E0 5B                  <1>         pop     ebx
    42 000012E1 58                  <1>         pop     eax
    43                              <1> 
    44 000012E2 89EC                <1>         mov     esp, ebp
    45 000012E4 5D                  <1>         pop     ebp
    46                              <1> 
    47 000012E5 C3                  <1>         ret
   110                                  %include    "../modules/protect/itoa.s"
     1                              <1> itoa:
     2                              <1> 
     3 000012E6 55                  <1>         push    ebp
     4 000012E7 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 000012E9 50                  <1>         push    eax
     7 000012EA 53                  <1>         push    ebx
     8 000012EB 51                  <1>         push    ecx
     9 000012EC 52                  <1>         push    edx
    10 000012ED 56                  <1>         push    esi
    11 000012EE 57                  <1>         push    edi
    12                              <1> 
    13 000012EF 8B4508              <1>         mov     eax, [ebp + 8]
    14 000012F2 8B750C              <1>         mov     esi, [ebp + 12]
    15 000012F5 8B4D10              <1>         mov     ecx, [ebp + 16]
    16                              <1> 
    17 000012F8 89F7                <1>         mov     edi, esi
    18 000012FA 01CF                <1>         add     edi, ecx
    19 000012FC 4F                  <1>         dec     edi
    20                              <1> 
    21 000012FD 8B5D18              <1>         mov     ebx, [ebp + 24]
    22                              <1> 
    23 00001300 F7C301000000        <1>         test    ebx, 0b0001
    24 00001306 7408                <1> .10Q:   je      .10E
    25 00001308 83F800              <1>         cmp     eax, 0
    26 0000130B 7D03                <1> .12Q:   jge     .12E
    27 0000130D 83CB02              <1>         or      ebx, 0b0010
    28                              <1> .12E:
    29                              <1> .10E:
    30                              <1> 
    31 00001310 F7C302000000        <1>         test    ebx, 0b0010
    32 00001316 7410                <1> .20Q:   je      .20E
    33 00001318 83F800              <1>         cmp     eax, 0
    34 0000131B 7D07                <1> .22Q:   jge     .22F
    35 0000131D F7D8                <1>         neg     eax
    36 0000131F C6062D              <1>         mov     [esi], byte '-'
    37 00001322 EB03                <1>         jmp     .22E
    38                              <1> .22F:
    39                              <1> 
    40 00001324 C6062B              <1>         mov     [esi], byte '+'
    41                              <1> .22E:
    42 00001327 49                  <1>         dec     ecx
    43                              <1> .20E:
    44                              <1> 
    45 00001328 8B5D14              <1>         mov     ebx, [ebp + 20]
    46                              <1> .30L:
    47                              <1> 
    48 0000132B BA00000000          <1>         mov     edx, 0
    49 00001330 F7F3                <1>         div     ebx
    50                              <1> 
    51 00001332 89D6                <1>         mov     esi, edx
    52 00001334 8A96[60130000]      <1>         mov     dl, byte [.ascii + esi]
    53                              <1> 
    54 0000133A 8817                <1>         mov     [edi], dl
    55 0000133C 4F                  <1>         dec     edi
    56                              <1> 
    57 0000133D 83F800              <1>         cmp     eax, 0
    58 00001340 E0E9                <1>         loopnz  .30L
    59                              <1> .30E:
    60                              <1> 
    61 00001342 83F900              <1>         cmp     ecx, 0
    62 00001345 740F                <1> .40Q:   je      .40E
    63 00001347 B020                <1>         mov     al, ' '
    64 00001349 6667837E1804        <1>         cmp     [bp + 24], word 0b0100
    65 0000134F 7502                <1> .42Q:   jne     .42E
    66 00001351 B030                <1>         mov     al, '0'
    67                              <1> .42E:
    68 00001353 FD                  <1>         std
    69 00001354 F3AA                <1>         rep stosb
    70                              <1> .40E:
    71                              <1> 
    72 00001356 5F                  <1>         pop     edi
    73 00001357 5E                  <1>         pop     esi
    74 00001358 5A                  <1>         pop     edx
    75 00001359 59                  <1>         pop     ecx
    76 0000135A 5B                  <1>         pop     ebx
    77 0000135B 58                  <1>         pop     eax
    78                              <1> 
    79 0000135C 89EC                <1>         mov     esp, ebp
    80 0000135E 5D                  <1>         pop     ebp
    81                              <1> 
    82 0000135F C3                  <1>         ret
    83                              <1> 
    84 00001360 303132333435363738- <1> .ascii  db      "0123456789ABCDEF"
    84 00001369 39414243444546      <1>
   111                                  %include    "../modules/protect/rtc.s"
     1                              <1> rtc_get_time:
     2                              <1> 
     3 00001370 55                  <1>         push    ebp
     4 00001371 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00001373 53                  <1>         push    ebx
     7                              <1> 
     8 00001374 B00A                <1>         mov     al, 0x0A
     9 00001376 E670                <1>         out     0x70, al
    10 00001378 E471                <1>         in      al, 0x71
    11 0000137A A880                <1>         test    al, 0x80
    12 0000137C 7407                <1>         je      .10F
    13 0000137E B801000000          <1>         mov     eax, 1
    14 00001383 EB27                <1>         jmp     .10E
    15                              <1> .10F:
    16                              <1> 
    17 00001385 B004                <1>         mov     al, 0x04
    18 00001387 E670                <1>         out     0x70, al
    19 00001389 E471                <1>         in      al, 0x71
    20                              <1> 
    21 0000138B C1E008              <1>         shl     eax, 8
    22                              <1> 
    23 0000138E B002                <1>         mov     al, 0x02
    24 00001390 E670                <1>         out     0x70, al
    25 00001392 E471                <1>         in      al, 0x71
    26                              <1> 
    27 00001394 C1E008              <1>         shl     eax, 8
    28                              <1> 
    29 00001397 B000                <1>         mov     al, 0x00
    30 00001399 E670                <1>         out     0x70, al
    31 0000139B E471                <1>         in      al, 0x71
    32                              <1> 
    33 0000139D 25FFFFFF00          <1>         and     eax, 0x00_FF_FF_FF
    34                              <1> 
    35 000013A2 8B5D08              <1>         mov     ebx, [ebp + 8]
    36 000013A5 8903                <1>         mov     [ebx], eax
    37                              <1> 
    38 000013A7 B800000000          <1>         mov     eax, 0
    39                              <1> .10E:
    40                              <1> 
    41 000013AC 5B                  <1>         pop     ebx
    42                              <1> 
    43 000013AD 89EC                <1>         mov     esp, ebp
    44 000013AF 5D                  <1>         pop     ebp
    45                              <1> 
    46 000013B0 C3                  <1>         ret
   112                                  %include    "../modules/protect/draw_time.s"
     1                              <1> draw_time:
     2                              <1> 
     3 000013B1 55                  <1>         push    ebp
     4 000013B2 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 000013B4 50                  <1>         push    eax
     7 000013B5 53                  <1>         push    ebx
     8                              <1> 
     9 000013B6 8B4514              <1>         mov     eax, [ebp + 20]
    10 000013B9 3B05[38140000]      <1>         cmp     eax, [.last]
    11 000013BF 7468                <1>         je      .10E
    12                              <1> 
    13 000013C1 A3[38140000]        <1>         mov     [.last], eax
    14                              <1> 
    15 000013C6 BB00000000          <1>         mov     ebx, 0
    16 000013CB 0FB6D8              <1>         movzx   ebx, al
    17 000013CE 6A046A106A0268-     <1>         cdecl   itoa, ebx, .sec, 2, 16, 0b0100
    17 000013D5 [46140000]53E807FF- <1>
    17 000013DD FFFF6683C414        <1>
    18                              <1> 
    19 000013E3 88E3                <1>         mov     bl, ah
    20 000013E5 6A046A106A0268-     <1>         cdecl   itoa, ebx, .min, 2, 16, 0b0100
    20 000013EC [43140000]53E8F0FE- <1>
    20 000013F4 FFFF6683C414        <1>
    21                              <1> 
    22 000013FA C1E810              <1>         shr     eax, 16
    23 000013FD 6A046A106A0268-     <1>         cdecl   itoa, eax, .hour, 2, 16, 0b0100
    23 00001404 [40140000]50E8D8FE- <1>
    23 0000140C FFFF6683C414        <1>
    24                              <1> 
    25 00001412 68[40140000]FF7510- <1>         cdecl   draw_str, dword [ebp + 8], dword [ebp + 12], dword [ebp + 16], .hour
    25 0000141A FF750CFF7508E830FC- <1>
    25 00001423 FFFF6683C410        <1>
    26                              <1> 
    27                              <1> .10E:
    28                              <1> 
    29 00001429 5B                  <1>         pop     ebx
    30 0000142A 58                  <1>         pop     eax
    31                              <1> 
    32 0000142B 89EC                <1>         mov     esp, ebp
    33 0000142D 5D                  <1>         pop     ebp
    34                              <1> 
    35 0000142E C3                  <1>         ret
    36                              <1> 
    37 0000142F 00                  <1> ALIGN 2, db 0
    38 00001430 0000000000000000    <1> .temp   dq  0
    39 00001438 0000000000000000    <1> .last   dq  0
    40 00001440 5A5A3A              <1> .hour   db  "ZZ:"
    41 00001443 5A5A3A              <1> .min    db  "ZZ:"
    42 00001446 5A5A00              <1> .sec    db  "ZZ", 0
   113                                  %include    "../modules/protect/interrupt.s"
     1 00001449 90<rept>            <1> ALIGN 4
     2 0000144C FF07                <1> IDTR:   dw      8 * 256 -1
     3 0000144E 00001000            <1>         dd      VECT_BASE
     4                              <1> 
     5                              <1> init_int:
     6                              <1> 
     7 00001452 50                  <1>         push    eax
     8 00001453 53                  <1>         push    ebx
     9 00001454 51                  <1>         push    ecx
    10 00001455 57                  <1>         push    edi
    11                              <1> 
    12 00001456 8D05[9C150000]      <1>         lea     eax, [int_default]
    13 0000145C BB008E0800          <1>         mov     ebx, 0x0008_8E00
    14 00001461 6693                <1>         xchg    ax, bx
    15                              <1> 
    16 00001463 B900010000          <1>         mov     ecx, 256
    17 00001468 BF00001000          <1>         mov     edi, VECT_BASE
    18                              <1> 
    19                              <1> .10L:
    20                              <1> 
    21 0000146D 891F                <1>         mov     [edi + 0], ebx
    22 0000146F 894704              <1>         mov     [edi + 4], eax
    23 00001472 83C708              <1>         add     edi, 8
    24 00001475 E2F6                <1>         loop    .10L
    25                              <1> 
    26 00001477 0F011D[4C140000]    <1>         lidt    [IDTR]
    27                              <1> 
    28 0000147E 5F                  <1>         pop     edi
    29 0000147F 59                  <1>         pop     ecx
    30 00001480 5B                  <1>         pop     ebx
    31 00001481 58                  <1>         pop     eax
    32                              <1> 
    33 00001482 C3                  <1>         ret
    34                              <1> 
    35                              <1> 
    36                              <1> int_stop:
    37                              <1> 
    38 00001483 FB                  <1>         sti
    39                              <1> 
    40 00001484 50680F0600006A0F6A- <1>         cdecl   draw_str, 25, 15, 0x060F, eax
    40 0000148D 19E8C2FBFFFF6683C4- <1>
    40 00001496 10                  <1>
    41                              <1> 
    42 00001497 8B0424              <1>         mov     eax, [esp + 0]
    43 0000149A 6A046A106A0868-     <1>         cdecl   itoa, eax, .p1, 8, 16, 0b0100
    43 000014A1 [5F150000]50E83BFE- <1>
    43 000014A9 FFFF6683C414        <1>
    44                              <1> 
    45 000014AF 8B442404            <1>         mov     eax, [esp + 4]
    46 000014B3 6A046A106A0868-     <1>         cdecl   itoa, eax, .p2, 8, 16, 0b0100
    46 000014BA [70150000]50E822FE- <1>
    46 000014C2 FFFF6683C414        <1>
    47                              <1> 
    48 000014C8 8B442408            <1>         mov     eax, [esp + 8]
    49 000014CC 6A046A106A0868-     <1>         cdecl   itoa, eax, .p3, 8, 16, 0b0100
    49 000014D3 [81150000]50E809FE- <1>
    49 000014DB FFFF6683C414        <1>
    50                              <1> 
    51 000014E1 8B44240C            <1>         mov     eax, [esp + 12]
    52 000014E5 6A046A106A0868-     <1>         cdecl   itoa, eax, .p4, 8, 16, 0b0100
    52 000014EC [92150000]50E8F0FD- <1>
    52 000014F4 FFFF6683C414        <1>
    53                              <1> 
    54 000014FA 68[58150000]68040F- <1>         cdecl   draw_str, 25, 16, 0x0F04, .s1
    54 00001502 00006A106A19E848FB- <1>
    54 0000150B FFFF6683C410        <1>
    55 00001511 68[69150000]68040F- <1>         cdecl   draw_str, 25, 17, 0x0F04, .s2
    55 00001519 00006A116A19E831FB- <1>
    55 00001522 FFFF6683C410        <1>
    56 00001528 68[7A150000]68040F- <1>         cdecl   draw_str, 25, 18, 0x0F04, .s3
    56 00001530 00006A126A19E81AFB- <1>
    56 00001539 FFFF6683C410        <1>
    57 0000153F 68[8B150000]68040F- <1>         cdecl   draw_str, 25, 19, 0x0F04, .s4
    57 00001547 00006A136A19E803FB- <1>
    57 00001550 FFFF6683C410        <1>
    58                              <1> 
    59 00001556 EBFE                <1>         jmp     $
    60                              <1> 
    61 00001558 4553502B20303A      <1> .s1		db	"ESP+ 0:"
    62 0000155F 5F5F5F5F5F5F5F5F20- <1> .p1		db	"________ ", 0
    62 00001568 00                  <1>
    63 00001569 2020202B20343A      <1> .s2		db	"   + 4:"
    64 00001570 5F5F5F5F5F5F5F5F20- <1> .p2		db	"________ ", 0
    64 00001579 00                  <1>
    65 0000157A 2020202B20383A      <1> .s3		db	"   + 8:"
    66 00001581 5F5F5F5F5F5F5F5F20- <1> .p3		db	"________ ", 0
    66 0000158A 00                  <1>
    67 0000158B 2020202B31323A      <1> .s4		db	"   +12:"
    68 00001592 5F5F5F5F5F5F5F5F20- <1> .p4		db	"________ ", 0
    68 0000159B 00                  <1>
    69                              <1> 
    70                              <1> 
    71                              <1> int_default:
    72                              <1> 
    73 0000159C 9C                  <1>         pushf
    74 0000159D 0E                  <1>         push    cs
    75 0000159E 68[83140000]        <1>         push    int_stop
    76                              <1> 
    77 000015A3 B8[A9150000]        <1>         mov     eax, .s0
    78 000015A8 CF                  <1>         iret
    79                              <1> 
    80 000015A9 203C2020202053544F- <1> .s0     db  " <    STOP    > ", 0
    80 000015B2 50202020203E2000    <1>
    81                              <1> 
    82                              <1> 
    83                              <1> int_zero_div:
    84                              <1> 
    85 000015BA 9C                  <1>         pushf
    86 000015BB 0E                  <1>         push    cs
    87 000015BC 68[83140000]        <1>         push    int_stop
    88                              <1> 
    89 000015C1 B8[C7150000]        <1>         mov     eax, .s0
    90 000015C6 CF                  <1>         iret
    91                              <1> 
    92 000015C7 203C20205A45524F20- <1> .s0     db  " <  ZERO DIV  > ", 0
    92 000015D0 44495620203E2000    <1>
   114                                  %include    "../modules/protect/pic.s"
     1                              <1> init_pic:
     2                              <1> 
     3 000015D8 50                  <1>         push    eax
     4                              <1> 
     5                              <1>         outp    0x20, 0x11
     5 000015D9 B011                <2>  mov al, %2
     5 000015DB E620                <2>  out %1, al
     6                              <1>         outp    0x21, 0x20
     6 000015DD B020                <2>  mov al, %2
     6 000015DF E621                <2>  out %1, al
     7                              <1>         outp    0x21, 0x04
     7 000015E1 B004                <2>  mov al, %2
     7 000015E3 E621                <2>  out %1, al
     8                              <1>         outp    0x21, 0x05
     8 000015E5 B005                <2>  mov al, %2
     8 000015E7 E621                <2>  out %1, al
     9                              <1>         outp    0x21, 0xFF
     9 000015E9 B0FF                <2>  mov al, %2
     9 000015EB E621                <2>  out %1, al
    10                              <1> 
    11                              <1>         outp    0xA0, 0x11
    11 000015ED B011                <2>  mov al, %2
    11 000015EF E6A0                <2>  out %1, al
    12                              <1>         outp    0xA1, 0x28
    12 000015F1 B028                <2>  mov al, %2
    12 000015F3 E6A1                <2>  out %1, al
    13                              <1>         outp    0xA1, 0x02
    13 000015F5 B002                <2>  mov al, %2
    13 000015F7 E6A1                <2>  out %1, al
    14                              <1>         outp    0xA1, 0x01
    14 000015F9 B001                <2>  mov al, %2
    14 000015FB E6A1                <2>  out %1, al
    15                              <1>         outp    0xA1, 0xFF
    15 000015FD B0FF                <2>  mov al, %2
    15 000015FF E6A1                <2>  out %1, al
    16                              <1> 
    17 00001601 58                  <1>         pop     eax
    18                              <1> 
    19 00001602 C3                  <1>         ret
   115                                  %include    "../modules/protect/int_rtc.s"
     1                              <1> rtc_int_en:
     2                              <1> 
     3 00001603 55                  <1>         push    ebp
     4 00001604 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00001606 50                  <1>         push    eax
     7                              <1> 
     8                              <1>         outp    0x70, 0x0B
     8 00001607 B00B                <2>  mov al, %2
     8 00001609 E670                <2>  out %1, al
     9                              <1> 
    10 0000160B E471                <1>         in      al, 0x71
    11 0000160D 0A4508              <1>         or      al, [ebp + 8]
    12                              <1> 
    13 00001610 E671                <1>         out     0x71, al
    14                              <1> 
    15 00001612 58                  <1>         pop     eax
    16                              <1> 
    17 00001613 89EC                <1>         mov     esp, ebp
    18 00001615 5D                  <1>         pop     ebp
    19                              <1> 
    20 00001616 C3                  <1>         ret
    21                              <1> 
    22                              <1> 
    23                              <1> int_rtc:
    24                              <1> 
    25 00001617 60                  <1>         pusha
    26 00001618 1E                  <1>         push    ds
    27 00001619 06                  <1>         push    es
    28                              <1> 
    29 0000161A 66B81000            <1>         mov     ax, 0x0010
    30 0000161E 8ED8                <1>         mov     ds, ax
    31 00001620 8EC0                <1>         mov     es, ax
    32                              <1> 
    33 00001622 68[A4020000]E844FD- <1>         cdecl   rtc_get_time, RTC_TIME
    33 0000162A FFFF6683C404        <1>
    34                              <1> 
    35                              <1>         outp    0x70, 0x0C
    35 00001630 B00C                <2>  mov al, %2
    35 00001632 E670                <2>  out %1, al
    36 00001634 E471                <1>         in      al, 0x71
    37                              <1> 
    38                              <1>         outp    0xA0, 0x20
    38 00001636 B020                <2>  mov al, %2
    38 00001638 E6A0                <2>  out %1, al
    39                              <1>         outp    0x20, 0x20
    39 0000163A B020                <2>  mov al, %2
    39 0000163C E620                <2>  out %1, al
    40                              <1> 
    41 0000163E 07                  <1>         pop     es
    42 0000163F 1F                  <1>         pop     ds
    43 00001640 61                  <1>         popa
    44                              <1> 
    45 00001641 CF                  <1>         iret
   116                                  %include    "../modules/protect/int_keyboard.s"
     1                              <1> int_keyboard:
     2                              <1> 
     3 00001642 60                  <1>         pusha
     4 00001643 1E                  <1>         push    ds
     5 00001644 06                  <1>         push    es
     6                              <1> 
     7 00001645 66B81000            <1>         mov     ax, 0x0010
     8 00001649 8ED8                <1>         mov     ds, ax
     9 0000164B 8EC0                <1>         mov     es, ax
    10                              <1> 
    11 0000164D E460                <1>         in      al, 0x60
    12                              <1> 
    13 0000164F 5068[68160000]E856- <1>         cdecl   ring_wr, _KEY_BUFF, eax
    13 00001657 0000006683C408      <1>
    14                              <1> 
    15                              <1>         outp    0x20, 0x20
    15 0000165E B020                <2>  mov al, %2
    15 00001660 E620                <2>  out %1, al
    16                              <1> 
    17 00001662 07                  <1>         pop     es
    18 00001663 1F                  <1>         pop     ds
    19 00001664 61                  <1>         popa
    20                              <1> 
    21 00001665 CF                  <1>         iret
    22                              <1> 
    23 00001666 00<rept>            <1> ALIGN 4, db 0
    24 00001668 00<rept>            <1> _KEY_BUFF:  times ring_buff_size db 0
   117                                  %include    "../modules/protect/ring_buff.s"
     1                              <1> ring_rd:
     2                              <1> 
     3 00001680 55                  <1>         push    ebp
     4 00001681 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00001683 53                  <1>         push    ebx
     7 00001684 56                  <1>         push    esi
     8 00001685 57                  <1>         push    edi
     9                              <1> 
    10 00001686 8B7508              <1>         mov     esi, [ebp + 8]
    11 00001689 8B7D0C              <1>         mov     edi, [ebp + 12]
    12                              <1> 
    13 0000168C B800000000          <1>         mov     eax, 0
    14 00001691 8B1E                <1>         mov     ebx, [esi + ring_buff.rp]
    15 00001693 3B5E04              <1>         cmp     ebx, [esi + ring_buff.wp]
    16 00001696 7411                <1>         je      .10E
    17                              <1> 
    18 00001698 8A441E08            <1>         mov     al, [esi + ring_buff.item + ebx]
    19                              <1> 
    20 0000169C 8807                <1>         mov     [edi], al
    21                              <1> 
    22 0000169E 43                  <1>         inc     ebx
    23 0000169F 83E30F              <1>         and     ebx, RING_INDEX_MASK
    24 000016A2 891E                <1>         mov     [esi + ring_buff.rp], ebx
    25                              <1> 
    26 000016A4 B801000000          <1>         mov     eax, 1
    27                              <1> .10E:
    28                              <1> 
    29 000016A9 5F                  <1>         pop     edi
    30 000016AA 5E                  <1>         pop     esi
    31 000016AB 5B                  <1>         pop     ebx
    32                              <1> 
    33 000016AC 89EC                <1>         mov     esp, ebp
    34 000016AE 5D                  <1>         pop     ebp
    35                              <1> 
    36 000016AF C3                  <1>         ret
    37                              <1> 
    38                              <1> 
    39                              <1> ring_wr:
    40                              <1> 
    41 000016B0 55                  <1>         push    ebp
    42 000016B1 89E5                <1>         mov     ebp, esp
    43                              <1> 
    44 000016B3 53                  <1>         push    ebx
    45 000016B4 51                  <1>         push    ecx
    46 000016B5 56                  <1>         push    esi
    47                              <1> 
    48 000016B6 8B7508              <1>         mov     esi, [ebp + 8]
    49                              <1> 
    50 000016B9 B800000000          <1>         mov     eax, 0
    51 000016BE 8B5E04              <1>         mov     ebx, [esi + ring_buff.wp]
    52 000016C1 89D9                <1>         mov     ecx, ebx
    53 000016C3 41                  <1>         inc     ecx
    54 000016C4 83E10F              <1>         and     ecx, RING_INDEX_MASK
    55                              <1> 
    56 000016C7 3B0E                <1>         cmp     ecx, [esi + ring_buff.rp]
    57 000016C9 740F                <1>         je      .10E
    58                              <1> 
    59 000016CB 8A450C              <1>         mov     al, [ebp + 12]
    60                              <1> 
    61 000016CE 88441E08            <1>         mov     [esi + ring_buff.item + ebx], al
    62 000016D2 894E04              <1>         mov     [esi + ring_buff.wp], ecx
    63 000016D5 B801000000          <1>         mov     eax, 1
    64                              <1> .10E:
    65                              <1> 
    66 000016DA 5E                  <1>         pop     esi
    67 000016DB 59                  <1>         pop     ecx
    68 000016DC 5B                  <1>         pop     ebx
    69                              <1> 
    70 000016DD 89EC                <1>         mov     esp, ebp
    71 000016DF 5D                  <1>         pop     ebp
    72                              <1> 
    73 000016E0 C3                  <1>         ret
    74                              <1> 
    75                              <1> 
    76                              <1> draw_key:
    77                              <1> 
    78 000016E1 55                  <1>         push    ebp
    79 000016E2 89E5                <1>         mov     ebp, esp
    80                              <1> 
    81 000016E4 60                  <1>         pusha
    82                              <1> 
    83 000016E5 8B5508              <1>         mov     edx, [ebp + 8]
    84 000016E8 8B7D0C              <1>         mov     edi, [ebp + 12]
    85 000016EB 8B7510              <1>         mov     esi, [ebp + 16]
    86                              <1> 
    87 000016EE 8B1E                <1>         mov     ebx, [esi + ring_buff.rp]
    88 000016F0 8D7608              <1>         lea     esi, [esi + ring_buff.item]
    89 000016F3 B910000000          <1>         mov     ecx, RING_ITEM_SIZE
    90                              <1> 
    91                              <1> .10L:
    92                              <1> 
    93 000016F8 4B                  <1>         dec     ebx
    94 000016F9 83E30F              <1>         and     ebx, RING_INDEX_MASK
    95 000016FC 8A041E              <1>         mov     al, [esi + ebx]
    96                              <1> 
    97 000016FF 6A046A106A0268-     <1>         cdecl   itoa, eax, .tmp, 2, 16, 0b0100
    97 00001706 [30170000]50E8D6FB- <1>
    97 0000170E FFFF6683C414        <1>
    98 00001714 68[30170000]6A0257- <1>         cdecl   draw_str, edx, edi, 0x02, .tmp
    98 0000171C 52E833F9FFFF6683C4- <1>
    98 00001725 10                  <1>
    99                              <1> 
   100 00001726 83C203              <1>         add     edx, 3
   101                              <1> 
   102 00001729 E2CD                <1>         loop    .10L
   103                              <1> .10E:
   104                              <1> 
   105 0000172B 61                  <1>         popa
   106                              <1> 
   107 0000172C 89EC                <1>         mov     esp, ebp
   108 0000172E 5D                  <1>         pop     ebp
   109                              <1> 
   110 0000172F C3                  <1>         ret
   111                              <1> 
   112 00001730 2D2D2000            <1> .tmp    db "-- ", 0
   118                                  %include    "../modules/protect/timer.s"
     1                              <1> int_en_timer0:
     2                              <1> 
     3 00001734 50                  <1>         push    eax
     4                              <1> 
     5                              <1>         outp    0x43, 0b_00_11_010_0
     5 00001735 B034                <2>  mov al, %2
     5 00001737 E643                <2>  out %1, al
     6                              <1>         outp    0x40, 0x9C
     6 00001739 B09C                <2>  mov al, %2
     6 0000173B E640                <2>  out %1, al
     7                              <1>         outp    0x40, 0x2E
     7 0000173D B02E                <2>  mov al, %2
     7 0000173F E640                <2>  out %1, al
     8                              <1> 
     9 00001741 58                  <1>         pop     eax
    10                              <1> 
    11 00001742 C3                  <1>         ret
   119                                  %include    "../modules/protect/draw_rotation_bar.s"
     1                              <1> draw_rotation_bar:
     2                              <1> 
     3 00001743 50                  <1>         push    eax
     4                              <1> 
     5 00001744 A1[440A0000]        <1>         mov     eax, [TIMER_COUNT]
     6 00001749 C1E804              <1>         shr     eax, 4
     7 0000174C 3B05[74170000]      <1>         cmp     eax, [.index]
     8 00001752 741E                <1>         je      .10E
     9                              <1> 
    10 00001754 A3[74170000]        <1>         mov     [.index], eax
    11 00001759 83E003              <1>         and     eax, 0x03
    12                              <1> 
    13 0000175C 8A80[78170000]      <1>         mov     al, [.table + eax]
    14 00001762 506A0F6A1D6A00E8C1- <1>         cdecl   draw_char, 0, 29, 0x000F, eax
    14 0000176B F7FFFF6683C410      <1>
    15                              <1> 
    16                              <1> .10E:
    17                              <1> 
    18 00001772 58                  <1>         pop     eax
    19                              <1> 
    20 00001773 C3                  <1>         ret
    21                              <1> 
    22                              <1> ALIGN 4, db 0
    23 00001774 00000000            <1> .index      dd 0
    24 00001778 7C2F2D5C            <1> .table      db "|/-\"
   120                                  %include    "../modules/protect/call_gate.s"
     1                              <1> call_gate:
     2                              <1> 
     3 0000177C 55                  <1>         push    ebp
     4 0000177D 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 0000177F 60                  <1>         pusha
     7 00001780 1E                  <1>         push    ds
     8 00001781 06                  <1>         push    es
     9                              <1> 
    10 00001782 66B81000            <1>         mov     ax, 0x0010
    11 00001786 8ED8                <1>         mov     ds, ax
    12 00001788 8EC0                <1>         mov     es, ax
    13                              <1> 
    14 0000178A 8B450C              <1>         mov     eax, dword [ebp + 12]
    15 0000178D 8B5D10              <1>         mov     ebx, dword [ebp + 16]
    16 00001790 8B4D14              <1>         mov     ecx, dword [ebp + 20]
    17 00001793 8B5518              <1>         mov     edx, dword [ebp + 24]
    18 00001796 52515350E8B6F8FFFF- <1>         cdecl   draw_str, eax, ebx, ecx, edx
    18 0000179F 6683C410            <1>
    19                              <1> 
    20 000017A3 07                  <1>         pop     es
    21 000017A4 1F                  <1>         pop     ds
    22 000017A5 61                  <1>         popa
    23                              <1> 
    24 000017A6 89EC                <1>         mov     esp, ebp
    25 000017A8 5D                  <1>         pop     ebp
    26                              <1> 
    27 000017A9 CA1000              <1>         retf    4 * 4
   121                                  %include    "../modules/protect/trap_gate.s"
     1                              <1> trap_gate_81:
     2                              <1> 
     3 000017AC 50535251E87AF7FFFF- <1>         cdecl   draw_char, ecx, edx, ebx, eax
     3 000017B5 6683C410            <1>
     4                              <1> 
     5 000017B9 CF                  <1>         iret
     6                              <1> 
     7                              <1> 
     8                              <1> trap_gate_82:
     9                              <1> 
    10 000017BA 535251E84CF9FFFF66- <1>         cdecl   draw_pixel, ecx, edx, ebx
    10 000017C3 83C40C              <1>
    11                              <1> 
    12 000017C6 CF                  <1>         iret
   122                                  %include    "../modules/protect/test_and_set.s"
     1                              <1> test_and_set:
     2                              <1> 
     3 000017C7 55                  <1>         push    ebp
     4 000017C8 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 000017CA 50                  <1>         push    eax
     7 000017CB 53                  <1>         push    ebx
     8                              <1> 
     9 000017CC B800000000          <1>         mov     eax, 0
    10 000017D1 8B5D08              <1>         mov     ebx, [ebp + 8]
    11                              <1> .10L:
    12                              <1> 
    13 000017D4 F00FAB03            <1>         lock bts [ebx], eax
    14 000017D8 7307                <1>         jnc     .10E
    15                              <1> .12L:
    16                              <1> 
    17 000017DA 0FA303              <1>         bt      [ebx], eax
    18 000017DD 72FB                <1>         jc      .12L
    19                              <1> 
    20 000017DF EBF3                <1>         jmp     .10L
    21                              <1> .10E:
    22                              <1> 
    23 000017E1 5B                  <1>         pop     ebx
    24 000017E2 58                  <1>         pop     eax
    25                              <1> 
    26 000017E3 89EC                <1>         mov     esp, ebp
    27 000017E5 5D                  <1>         pop     ebp
    28                              <1> 
    29 000017E6 C3                  <1>         ret
   123                                  %include    "../modules/protect/int_nm.s"
     1                              <1> int_nm:
     2                              <1> 
     3 000017E7 60                  <1>         pusha
     4 000017E8 1E                  <1>         push    ds
     5 000017E9 06                  <1>         push    es
     6                              <1> 
     7 000017EA 66B81000            <1>         mov     ax, DS_KERNEL
     8 000017EE 8ED8                <1>         mov     ds, ax
     9 000017F0 8EC0                <1>         mov     es, ax
    10                              <1> 
    11 000017F2 0F06                <1>         clts
    12                              <1> 
    13 000017F4 8B3D[40180000]      <1>         mov     edi, [.last_tss]
    14 000017FA 0F00CE              <1>         str     esi
    15 000017FD 83E6F8              <1>         and     esi, ~0x0007
    16                              <1> 
    17 00001800 83FF00              <1>         cmp     edi, 0
    18 00001803 7420                <1>         je      .10F
    19                              <1> 
    20 00001805 39FE                <1>         cmp     esi, edi
    21 00001807 741A                <1>         je      .12E
    22                              <1> 
    23 00001809 FA                  <1>         cli
    24                              <1> 
    25 0000180A 89FB                <1>         mov     ebx, edi
    26 0000180C E833000000          <1>         call    get_tss_base
    27 00001811 E841000000          <1>         call    save_fpu_context
    28                              <1> 
    29 00001816 89F3                <1>         mov     ebx, esi
    30 00001818 E827000000          <1>         call    get_tss_base
    31 0000181D E843000000          <1>         call    load_fpu_context
    32                              <1> 
    33 00001822 FB                  <1>         sti
    34                              <1> .12E:
    35 00001823 EB0E                <1>         jmp     .10E
    36                              <1> .10F:
    37                              <1> 
    38 00001825 FA                  <1>         cli
    39                              <1>         
    40 00001826 89F3                <1>         mov     ebx, esi
    41 00001828 E817000000          <1>         call    get_tss_base
    42 0000182D E833000000          <1>         call    load_fpu_context
    43                              <1> 
    44 00001832 FB                  <1>         sti
    45                              <1> .10E:
    46                              <1> 
    47 00001833 8935[40180000]      <1>         mov     [.last_tss], esi
    48                              <1> 
    49 00001839 07                  <1>         pop     es
    50 0000183A 1F                  <1>         pop     ds
    51 0000183B 61                  <1>         popa
    52                              <1> 
    53 0000183C CF                  <1>         iret
    54                              <1> 
    55 0000183D 00<rept>            <1> ALIGN 4, db 0
    56 00001840 00000000            <1> .last_tss:  dd      0
    57                              <1> 
    58                              <1> 
    59                              <1> get_tss_base:
    60 00001844 8B83[92080000]      <1>         mov     eax, [GDT + ebx + 2]
    61 0000184A C1E008              <1>         shl     eax, 8
    62 0000184D 8A83[97080000]      <1>         mov     al, [GDT + ebx + 7]
    63 00001853 C1C808              <1>         ror     eax, 8
    64                              <1> 
    65 00001856 C3                  <1>         ret
    66                              <1> 
    67                              <1> 
    68                              <1> save_fpu_context:
    69 00001857 DD7068              <1>         fnsave  [eax + 104]
    70 0000185A C780D4000000010000- <1>         mov     [eax + 104 + 108], dword 1
    70 00001863 00                  <1>
    71                              <1> 
    72 00001864 C3                  <1>         ret
    73                              <1> 
    74                              <1> 
    75                              <1> load_fpu_context:
    76 00001865 83B8D400000000      <1>         cmp     [eax + 104 + 108], dword 0
    77 0000186C 7504                <1>         jne     .10F
    78 0000186E DBE3                <1>         fninit
    79 00001870 EB03                <1>         jmp     .10E
    80                              <1> .10F:
    81                              <1> 
    82 00001872 DD6068              <1>         frstor  [eax + 104]
    83                              <1> .10E:
    84 00001875 C3                  <1>         ret
   124                                  %include    "../modules/protect/wait_tick.s"
     1                              <1> wait_tick:
     2                              <1> 
     3 00001876 55                  <1>         push    ebp
     4 00001877 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00001879 50                  <1>         push    eax
     7 0000187A 51                  <1>         push    ecx
     8                              <1> 
     9 0000187B 8B4D08              <1>         mov     ecx, [ebp + 8]
    10 0000187E A1[440A0000]        <1>         mov     eax, [TIMER_COUNT]
    11                              <1> 
    12                              <1> .10L:
    13 00001883 3905[440A0000]      <1>         cmp     [TIMER_COUNT], eax
    14 00001889 74F8                <1>         je      .10L
    15 0000188B 40                  <1>         inc     eax
    16 0000188C E2F5                <1>         loop    .10L
    17                              <1> 
    18 0000188E 59                  <1>         pop     ecx
    19 0000188F 58                  <1>         pop     eax
    20                              <1> 
    21 00001890 89EC                <1>         mov     esp, ebp
    22 00001892 5D                  <1>         pop     ebp
    23                              <1> 
    24 00001893 C3                  <1>         ret
   125                                  %include    "../modules/protect/memcpy.s"
     1                              <1> memcpy:
     2                              <1> 
     3 00001894 55                  <1>     push    ebp
     4 00001895 89E5                <1>     mov     ebp, esp
     5                              <1> 
     6 00001897 51                  <1>     push    ecx
     7 00001898 56                  <1>     push    esi
     8 00001899 57                  <1>     push    edi
     9                              <1> 
    10 0000189A FC                  <1>     cld
    11 0000189B 8B7D08              <1>     mov     edi, [ebp + 8]
    12 0000189E 8B750C              <1>     mov     esi, [ebp + 12]
    13 000018A1 8B4D10              <1>     mov     ecx, [ebp + 16]
    14                              <1> 
    15 000018A4 F3A4                <1>     rep movsb
    16                              <1> 
    17 000018A6 5F                  <1>     pop     edi
    18 000018A7 5E                  <1>     pop     esi
    19 000018A8 59                  <1>     pop     ecx
    20                              <1> 
    21 000018A9 89EC                <1>     mov     esp, ebp
    22 000018AB 5D                  <1>     pop     ebp
    23                              <1> 
    24 000018AC C3                  <1>     ret
   126                                  
   127 000018AD 00<rept>                        times KERNEL_SIZE - ($ - $$) db 0x00
