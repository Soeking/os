     1                                  %define USE_SYSTEM_CALL
     2                                  %define USE_TEST_AND_SET
     3                                  
     4                                  %include    "../include/define.s"
     1                              <1>         BOOT_LOAD           equ     0x7C00
     2                              <1> 
     3                              <1>         BOOT_SIZE           equ     (1024 * 8)
     4                              <1>         SECT_SIZE           equ     (512)
     5                              <1>         BOOT_SECT           equ     (BOOT_SIZE / SECT_SIZE)
     6                              <1>         BOOT_END            equ     (BOOT_LOAD + BOOT_SIZE)
     7                              <1> 
     8                              <1>         E820_RECORD_SIZE    equ     20
     9                              <1> 
    10                              <1>         KERNEL_LOAD         equ     0x0010_1000
    11                              <1> 
    12                              <1>         KERNEL_SIZE         equ     (1024 * 8)
    13                              <1>         KERNEL_SECT         equ     (KERNEL_SIZE / SECT_SIZE)
    14                              <1> 
    15                              <1>         VECT_BASE           equ     0x0010_0000
    16                              <1> 
    17                              <1> 
    18                              <1>         STACK_BASE          equ     0x0010_3000
    19                              <1>         STACK_SIZE          equ     1024
    20                              <1> 
    21                              <1>         SP_TASK_0           equ     STACK_BASE + (STACK_SIZE * 1)
    22                              <1>         SP_TASK_1           equ     STACK_BASE + (STACK_SIZE * 2)
    23                              <1>         SP_TASK_2           equ     STACK_BASE + (STACK_SIZE * 3)
     5                                  %include    "../include/macro.s"
     1                              <1> %macro  cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep  %0 -1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate -1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if  1 < %0
    12                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> %macro  set_vect 1-*.nolist
    18                              <1> 		push	eax
    19                              <1> 		push	edi
    20                              <1> 
    21                              <1> 		mov		edi, VECT_BASE + (%1 * 8)
    22                              <1> 		mov		eax, %2
    23                              <1> 
    24                              <1> 	%if 3 == %0
    25                              <1> 		mov		[edi + 4], %3
    26                              <1> 	%endif
    27                              <1> 
    28                              <1>         mov		[edi + 0], ax
    29                              <1> 		shr		eax, 16 
    30                              <1> 		mov		[edi + 6], ax
    31                              <1> 
    32                              <1> 		pop		edi
    33                              <1> 		pop		eax
    34                              <1> %endmacro
    35                              <1> 
    36                              <1> %macro  outp 2
    37                              <1>         mov     al, %2
    38                              <1>         out     %1, al
    39                              <1> %endmacro
    40                              <1> 
    41                              <1> %macro  set_desc 2-*
    42                              <1>         push    eax
    43                              <1>         push    edi
    44                              <1> 
    45                              <1>         mov     edi, %1
    46                              <1>         mov     eax, %2
    47                              <1> 
    48                              <1>     %if 3 == %0
    49                              <1>         mov     [edi + 0], %3
    50                              <1>     %endif
    51                              <1> 
    52                              <1>         mov     [edi + 2], ax
    53                              <1>         shr     eax, 16
    54                              <1>         mov     [edi + 4], al
    55                              <1>         mov     [edi + 7], ah
    56                              <1> 
    57                              <1>         pop     edi
    58                              <1>         pop     eax
    59                              <1> %endmacro
    60                              <1> 
    61                              <1> %macro  set_gate 2-*
    62                              <1>         push    eax
    63                              <1>         push    edi
    64                              <1> 
    65                              <1>         mov     edi, %1
    66                              <1>         mov     eax, %2
    67                              <1> 
    68                              <1>         mov     [edi + 0], ax
    69                              <1>         shr     eax, 16
    70                              <1>         mov     [edi + 6], ax
    71                              <1> 
    72                              <1>         pop     edi
    73                              <1>         pop     eax
    74                              <1> %endmacro
    75                              <1> 
    76                              <1> struc drive
    77 00000000 <res 00000002>      <1>         .no     resw    1
    78 00000002 <res 00000002>      <1>         .cyln   resw    1
    79 00000004 <res 00000002>      <1>         .head   resw    1
    80 00000006 <res 00000002>      <1>         .sect   resw    1
    81                              <1> endstruc
    82                              <1> 
    83                              <1> %define		RING_ITEM_SIZE		(1 << 4)
    84                              <1> %define		RING_INDEX_MASK		(RING_ITEM_SIZE - 1)
    85                              <1> 
    86                              <1> struc ring_buff
    87 00000000 <res 00000004>      <1>         .rp     resd    1
    88 00000004 <res 00000004>      <1>         .wp     resd    1
    89 00000008 <res 00000010>      <1>         .item   resb    RING_ITEM_SIZE
    90                              <1> endstruc
     6                                  
     7                                          ORG     KERNEL_LOAD
     8                                  
     9                                  [BITS 32]
    10                                  
    11                                  kernel:
    12                                  
    13 00000000 BE007E0000                      mov     esi, BOOT_LOAD + SECT_SIZE
    14 00000005 0FB706                          movzx   eax, word [esi + 0]
    15 00000008 0FB75E02                        movzx   ebx, word [esi + 2]
    16 0000000C C1E004                          shl     eax, 4
    17 0000000F 01D8                            add     eax, ebx
    18 00000011 A3[00020000]                    mov     [FONT_ADR], eax
    19                                  
    20                                          set_desc    GDT.tss_0, TSS_0
    20 00000016 50                  <1>  push eax
    20 00000017 57                  <1>  push edi
    20                              <1> 
    20 00000018 BF[B0040000]        <1>  mov edi, %1
    20 0000001D B8[08020000]        <1>  mov eax, %2
    20                              <1> 
    20                              <1>  %if 3 == %0
    20                              <1>  mov [edi + 0], %3
    20                              <1>  %endif
    20                              <1> 
    20 00000022 66894702            <1>  mov [edi + 2], ax
    20 00000026 C1E810              <1>  shr eax, 16
    20 00000029 884704              <1>  mov [edi + 4], al
    20 0000002C 886707              <1>  mov [edi + 7], ah
    20                              <1> 
    20 0000002F 5F                  <1>  pop edi
    20 00000030 58                  <1>  pop eax
    21                                          set_desc    GDT.tss_1, TSS_1
    21 00000031 50                  <1>  push eax
    21 00000032 57                  <1>  push edi
    21                              <1> 
    21 00000033 BF[B8040000]        <1>  mov edi, %1
    21 00000038 B8[E0020000]        <1>  mov eax, %2
    21                              <1> 
    21                              <1>  %if 3 == %0
    21                              <1>  mov [edi + 0], %3
    21                              <1>  %endif
    21                              <1> 
    21 0000003D 66894702            <1>  mov [edi + 2], ax
    21 00000041 C1E810              <1>  shr eax, 16
    21 00000044 884704              <1>  mov [edi + 4], al
    21 00000047 886707              <1>  mov [edi + 7], ah
    21                              <1> 
    21 0000004A 5F                  <1>  pop edi
    21 0000004B 58                  <1>  pop eax
    22                                          set_desc    GDT.tss_2, TSS_2
    22 0000004C 50                  <1>  push eax
    22 0000004D 57                  <1>  push edi
    22                              <1> 
    22 0000004E BF[C0040000]        <1>  mov edi, %1
    22 00000053 B8[B8030000]        <1>  mov eax, %2
    22                              <1> 
    22                              <1>  %if 3 == %0
    22                              <1>  mov [edi + 0], %3
    22                              <1>  %endif
    22                              <1> 
    22 00000058 66894702            <1>  mov [edi + 2], ax
    22 0000005C C1E810              <1>  shr eax, 16
    22 0000005F 884704              <1>  mov [edi + 4], al
    22 00000062 886707              <1>  mov [edi + 7], ah
    22                              <1> 
    22 00000065 5F                  <1>  pop edi
    22 00000066 58                  <1>  pop eax
    23                                  
    24                                          set_gate    GDT.call_gate, call_gate
    24 00000067 50                  <1>  push eax
    24 00000068 57                  <1>  push edi
    24                              <1> 
    24 00000069 BF[C8040000]        <1>  mov edi, %1
    24 0000006E B8[680F0000]        <1>  mov eax, %2
    24                              <1> 
    24 00000073 668907              <1>  mov [edi + 0], ax
    24 00000076 C1E810              <1>  shr eax, 16
    24 00000079 66894706            <1>  mov [edi + 6], ax
    24                              <1> 
    24 0000007D 5F                  <1>  pop edi
    24 0000007E 58                  <1>  pop eax
    25                                  
    26                                          set_desc    GDT.ldt, LDT, word LDT_LIMIT
    26 0000007F 50                  <1>  push eax
    26 00000080 57                  <1>  push edi
    26                              <1> 
    26 00000081 BF[A8040000]        <1>  mov edi, %1
    26 00000086 B8[D6040000]        <1>  mov eax, %2
    26                              <1> 
    26                              <1>  %if 3 == %0
    26 0000008B 66C7073700          <1>  mov [edi + 0], %3
    26                              <1>  %endif
    26                              <1> 
    26 00000090 66894702            <1>  mov [edi + 2], ax
    26 00000094 C1E810              <1>  shr eax, 16
    26 00000097 884704              <1>  mov [edi + 4], al
    26 0000009A 886707              <1>  mov [edi + 7], ah
    26                              <1> 
    26 0000009D 5F                  <1>  pop edi
    26 0000009E 58                  <1>  pop eax
    27                                  
    28 0000009F 0F0115[D0040000]                lgdt    [GDTR]
    29                                  
    30 000000A6 BC00341000                      mov     esp, SP_TASK_0
    31                                  
    32 000000AB 66B82000                        mov     ax, SS_TASK_0
    33 000000AF 0F00D8                          ltr     ax
    34                                  
    35 000000B2 E8870B0000                      cdecl   init_int
    36 000000B7 E8080D0000                      cdecl   init_pic
    37                                  
    38 000000BC 5057BF00001000B8-               set_vect    0x00, int_zero_div
    38 000000C4 [A60D0000]668907C1-
    38 000000CC E810668947065F58   
    39 000000D4 5057BF38001000B8-               set_vect    0x07, int_nm
    39 000000DC [D30F0000]668907C1-
    39 000000E4 E810668947065F58   
    40 000000EC 5057BF00011000B8-               set_vect    0x20, int_timer
    40 000000F4 [0E050000]668907C1-
    40 000000FC E810668947065F58   
    41 00000104 5057BF08011000B8-               set_vect    0x21, int_keyboard
    41 0000010C [2E0E0000]668907C1-
    41 00000114 E810668947065F58   
    42 0000011C 5057BF40011000B8-               set_vect    0x28, int_rtc
    42 00000124 [030E0000]668907C1-
    42 0000012C E810668947065F58   
    43 00000134 5057BF08041000B8-               set_vect    0x81, trap_gate_81, word 0xEF00
    43 0000013C [980F0000]66C74704-
    43 00000144 00EF668907C1E81066-
    43 0000014D 8947065F58         
    44 00000152 5057BF10041000B8-               set_vect    0x82, trap_gate_82, word 0xEF00
    44 0000015A [A60F0000]66C74704-
    44 00000162 00EF668907C1E81066-
    44 0000016B 8947065F58         
    45                                  
    46 00000170 6A10E8780C00006683-             cdecl   rtc_int_en, 0x10
    46 00000179 C404               
    47 0000017B E8A00D0000                      cdecl   int_en_timer0
    48                                  
    49                                          outp    0x21, 0b1111_1000
    49 00000180 B0F8                <1>  mov al, %2
    49 00000182 E621                <1>  out %1, al
    50                                          outp    0xA1, 0b1111_1110
    50 00000184 B0FE                <1>  mov al, %2
    50 00000186 E6A1                <1>  out %1, al
    51                                  
    52 00000188 FB                              sti
    53                                  
    54 00000189 6A0D6A3FE86A060000-             cdecl   draw_font, 63, 13
    54 00000192 6683C408           
    55 00000196 6A046A3FE8E0060000-             cdecl   draw_color_bar, 63, 4
    55 0000019F 6683C408           
    56 000001A3 68[EB010000]680F01-             cdecl   draw_str, 25, 14, 0x010F, .s0
    56 000001AB 00006A0E6A19E88B06-
    56 000001B4 00006683C410       
    57                                  
    58                                  .10L:
    59                                  
    60 000001BA E8700D0000                      cdecl   draw_rotation_bar
    61                                  
    62 000001BF 68[FC010000]68-                 cdecl   ring_rd, _KEY_BUFF, .int_key
    62 000001C5 [540E0000]E89E0C00-
    62 000001CD 006683C408         
    63 000001D2 83F800                          cmp     eax, 0
    64 000001D5 7412                            je      .10E
    65                                  
    66 000001D7 68[540E0000]6A1D6A-             cdecl   draw_key, 2, 29, _KEY_BUFF
    66 000001DF 02E8E80C00006683C4-
    66 000001E8 0C                 
    67                                  .10E:
    68                                  
    69 000001E9 EBCF                            jmp     .10L
    70                                  
    71 000001EB 2048656C6C6F2C206B-     .s0 	db	" Hello, kernel! ", 0
    71 000001F4 65726E656C212000   
    72                                  
    73                                  ALIGN 4, db 0
    74 000001FC 00000000                .int_key    dd 0
    75                                  
    76                                  ALIGN 4, db 0
    77 00000200 00000000                FONT_ADR:   dd 0
    78 00000204 00000000                RTC_TIME:   dd 0
    79                                  
    80                                  %include    "descriptor.s"
     1                              <1> TSS_0:
     2 00000208 00000000            <1> .link:          dd  0
     3 0000020C 00321000            <1> .esp0:          dd  SP_TASK_0 - 512
     4 00000210 10000000            <1> .ss0:           dd  DS_KERNEL
     5 00000214 00000000            <1> .esp1:          dd  0
     6 00000218 00000000            <1> .ss1:           dd  0
     7 0000021C 00000000            <1> .esp2:          dd  0
     8 00000220 00000000            <1> .ss2:           dd  0
     9 00000224 00000000            <1> .cr3:           dd  0
    10 00000228 00000000            <1> .eip:           dd  0
    11 0000022C 00000000            <1> .eflags:        dd  0
    12 00000230 00000000            <1> .eax:           dd  0
    13 00000234 00000000            <1> .ecx:           dd  0
    14 00000238 00000000            <1> .edx:           dd  0
    15 0000023C 00000000            <1> .ebx:           dd  0
    16 00000240 00000000            <1> .esp:           dd  0
    17 00000244 00000000            <1> .ebp:           dd  0
    18 00000248 00000000            <1> .esi:           dd  0
    19 0000024C 00000000            <1> .edi:           dd  0
    20 00000250 00000000            <1> .es:            dd  0
    21 00000254 00000000            <1> .cs:            dd  0
    22 00000258 00000000            <1> .ss:            dd  0
    23 0000025C 00000000            <1> .ds:            dd  0
    24 00000260 00000000            <1> .fs:            dd  0
    25 00000264 00000000            <1> .gs:            dd  0
    26 00000268 00000000            <1> .ldt:           dd  0
    27 0000026C 00000000            <1> .io:            dd  0
    28 00000270 00<rept>            <1> .fp_sava:   times 108 + 4 db 0
    29                              <1> 
    30                              <1> TSS_1:
    31 000002E0 00000000            <1> .link:          dd  0
    32 000002E4 00361000            <1> .esp0:          dd  SP_TASK_1 - 512
    33 000002E8 10000000            <1> .ss0:           dd  DS_KERNEL
    34 000002EC 00000000            <1> .esp1:          dd  0
    35 000002F0 00000000            <1> .ss1:           dd  0
    36 000002F4 00000000            <1> .esp2:          dd  0
    37 000002F8 00000000            <1> .ss2:           dd  0
    38 000002FC 00000000            <1> .cr3:           dd  0
    39 00000300 [58050000]          <1> .eip:           dd  task_1
    40 00000304 02020000            <1> .eflags:        dd  0x0202
    41 00000308 00000000            <1> .eax:           dd  0
    42 0000030C 00000000            <1> .ecx:           dd  0
    43 00000310 00000000            <1> .edx:           dd  0
    44 00000314 00000000            <1> .ebx:           dd  0
    45 00000318 00381000            <1> .esp:           dd  SP_TASK_1
    46 0000031C 00000000            <1> .ebp:           dd  0
    47 00000320 00000000            <1> .esi:           dd  0
    48 00000324 00000000            <1> .edi:           dd  0
    49 00000328 27000000            <1> .es:            dd  DS_TASK_1
    50 0000032C 1F000000            <1> .cs:            dd  CS_TASK_1
    51 00000330 27000000            <1> .ss:            dd  DS_TASK_1
    52 00000334 27000000            <1> .ds:            dd  DS_TASK_1
    53 00000338 27000000            <1> .fs:            dd  DS_TASK_1
    54 0000033C 27000000            <1> .gs:            dd  DS_TASK_1
    55 00000340 18000000            <1> .ldt:           dd  SS_LDT
    56 00000344 00000000            <1> .io:            dd  0
    57 00000348 00<rept>            <1> .fp_save:   times 108 + 4 db 0
    58                              <1> 
    59                              <1> TSS_2:
    60 000003B8 00000000            <1> .link:          dd  0
    61 000003BC 003A1000            <1> .esp0:          dd  SP_TASK_2 - 512
    62 000003C0 10000000            <1> .ss0:           dd  DS_KERNEL
    63 000003C4 00000000            <1> .esp1:          dd  0
    64 000003C8 00000000            <1> .ss1:           dd  0
    65 000003CC 00000000            <1> .esp2:          dd  0
    66 000003D0 00000000            <1> .ss2:           dd  0
    67 000003D4 00000000            <1> .cr3:           dd  0
    68 000003D8 [8D050000]          <1> .eip:           dd  task_2
    69 000003DC 02020000            <1> .eflags:        dd  0x0202
    70 000003E0 00000000            <1> .eax:           dd  0
    71 000003E4 00000000            <1> .ecx:           dd  0
    72 000003E8 00000000            <1> .edx:           dd  0
    73 000003EC 00000000            <1> .ebx:           dd  0
    74 000003F0 003C1000            <1> .esp:           dd  SP_TASK_2
    75 000003F4 00000000            <1> .ebp:           dd  0
    76 000003F8 00000000            <1> .esi:           dd  0
    77 000003FC 00000000            <1> .edi:           dd  0
    78 00000400 37000000            <1> .es:            dd  DS_TASK_2
    79 00000404 2F000000            <1> .cs:            dd  CS_TASK_2
    80 00000408 37000000            <1> .ss:            dd  DS_TASK_2
    81 0000040C 37000000            <1> .ds:            dd  DS_TASK_2
    82 00000410 37000000            <1> .fs:            dd  DS_TASK_2
    83 00000414 37000000            <1> .gs:            dd  DS_TASK_2
    84 00000418 18000000            <1> .ldt:           dd  SS_LDT
    85 0000041C 00000000            <1> .io:            dd  0
    86 00000420 00<rept>            <1> .fp_save:   times 108 + 4 db 0
    87                              <1> 
    88 00000490 0000000000000000    <1> GDT:            dq  0x0000000000000000
    89 00000498 FFFF0000009ACF00    <1> .cs_kernel:     dq  0x00CF9A000000FFFF
    90 000004A0 FFFF00000092CF00    <1> .ds_kernel:     dq  0x00CF92000000FFFF
    91 000004A8 0000000000820000    <1> .ldt            dq  0x0000820000000000
    92 000004B0 6700000000890000    <1> .tss_0:         dq  0x0000890000000067
    93 000004B8 6700000000890000    <1> .tss_1:         dq  0x0000890000000067
    94 000004C0 6700000000890000    <1> .tss_2:         dq  0x0000890000000067
    95 000004C8 0000080004EC0000    <1> .call_gate:     dq  0x0000EC0400080000
    96                              <1> .end:
    97                              <1> 
    98                              <1> CS_KERNEL       equ .cs_kernel  - GDT
    99                              <1> DS_KERNEL       equ .ds_kernel  - GDT
   100                              <1> SS_LDT          equ .ldt        - GDT
   101                              <1> SS_TASK_0       equ .tss_0      - GDT
   102                              <1> SS_TASK_1       equ .tss_1      - GDT
   103                              <1> SS_TASK_2       equ .tss_2      - GDT
   104                              <1> SS_GATE_0       equ .call_gate  - GDT
   105                              <1> 
   106 000004D0 3F00                <1> GDTR:   dw      GDT.end - GDT - 1
   107 000004D2 [90040000]          <1>         dd      GDT
   108                              <1> 
   109 000004D6 0000000000000000    <1> LDT:            dq  0x0000000000000000
   110 000004DE FFFF0000009ACF00    <1> .cs_task_0:     dq  0x00CF9A000000FFFF
   111 000004E6 FFFF00000092CF00    <1> .ds_task_0:     dq  0x00CF92000000FFFF
   112 000004EE FFFF000000FACF00    <1> .cs_task_1:     dq  0x00CFFA000000FFFF
   113 000004F6 FFFF000000F2CF00    <1> .ds_task_1:     dq  0x00CFF2000000FFFF
   114 000004FE FFFF000000FACF00    <1> .cs_task_2:     dq  0x00CFFA000000FFFF
   115 00000506 FFFF000000F2CF00    <1> .ds_task_2:     dq  0x00CFF2000000FFFF
   116                              <1> .end:
   117                              <1> 
   118                              <1> CS_TASK_0       equ (.cs_task_0 - LDT) | 4
   119                              <1> DS_TASK_0       equ (.ds_task_0 - LDT) | 4
   120                              <1> CS_TASK_1       equ (.cs_task_1 - LDT) | 4 | 3
   121                              <1> DS_TASK_1       equ (.ds_task_1 - LDT) | 4 | 3
   122                              <1> CS_TASK_2       equ (.cs_task_2 - LDT) | 4 | 3
   123                              <1> DS_TASK_2       equ (.ds_task_2 - LDT) | 4 | 3
   124                              <1> 
   125                              <1> LDT_LIMIT       equ .end        - LDT - 1
    81                                  %include    "modules/int_timer.s"
     1                              <1> int_timer:
     2                              <1> 
     3 0000050E 60                  <1>         pusha
     4 0000050F 1E                  <1>         push    ds
     5 00000510 06                  <1>         push    es
     6                              <1> 
     7 00000511 66B81000            <1>         mov     ax, 0x0010
     8 00000515 8ED8                <1>         mov     ds, ax
     9 00000517 8EC0                <1>         mov     es, ax
    10                              <1> 
    11 00000519 FF05[54050000]      <1>         inc     dword [TIMER_COUNT]
    12                              <1> 
    13                              <1>         outp    0x20, 0x20
    13 0000051F B020                <2>  mov al, %2
    13 00000521 E620                <2>  out %1, al
    14                              <1> 
    15 00000523 660F00C8            <1>         str     ax
    16 00000527 6683F820            <1>         cmp     ax, SS_TASK_0
    17 0000052B 740F                <1>         je      .11L
    18 0000052D 6683F828            <1>         cmp     ax, SS_TASK_1
    19 00000531 7412                <1>         je      .12L
    20                              <1> 
    21 00000533 EA000000002000      <1>         jmp     SS_TASK_0:0
    22 0000053A EB12                <1>         jmp     .10E
    23                              <1> 
    24                              <1> .11L:
    25 0000053C EA000000002800      <1>         jmp     SS_TASK_1:0
    26 00000543 EB09                <1>         jmp     .10E
    27                              <1> 
    28                              <1> .12L:
    29 00000545 EA000000003000      <1>         jmp     SS_TASK_2:0
    30 0000054C EB00                <1>         jmp     .10E
    31                              <1> 
    32                              <1> .10E:
    33                              <1> 
    34 0000054E 07                  <1>         pop     es
    35 0000054F 1F                  <1>         pop     ds
    36 00000550 61                  <1>         popa
    37                              <1> 
    38 00000551 CF                  <1>         iret
    39                              <1> 
    40 00000552 00<rept>            <1> ALIGN 4, db 0
    41 00000554 00000000            <1> TIMER_COUNT     dd 0
    82                                  %include    "tasks/task_1.s"
     1                              <1> task_1:
     2                              <1> 
     3 00000558 68[86050000]6A076A- <1>         cdecl   draw_str, 63, 0, 0x07, .s0
     3 00000560 006A3FE8D902000066- <1>
     3 00000569 83C410              <1>
     4                              <1> .10L:
     5                              <1> 
     6 0000056C A1[04020000]        <1>         mov     eax, [RTC_TIME]
     7 00000571 5068000700006A006A- <1>         cdecl   draw_time, 72, 0, 0x0700, eax
     7 0000057A 48E8200600006683C4- <1>
     7 00000583 10                  <1>
     8                              <1> 
     9 00000584 EBE6                <1>         jmp     .10L
    10                              <1> 
    11 00000586 5461736B2D3100      <1> .s0     db  "Task-1", 0
    83                                  %include    "tasks/task_2.s"
     1                              <1> task_2:
     2                              <1> 
     3 0000058D 68[5A060000]6A076A- <1>         cdecl   draw_str, 63, 1, 0x07, .s0
     3 00000595 016A3FE8A402000066- <1>
     3 0000059E 83C410              <1>
     4                              <1> 
     5 000005A1 DB05[48060000]      <1>         fild    dword [.c1000]
     6 000005A7 D9EB                <1>         fldpi
     7 000005A9 DA35[4C060000]      <1>         fidiv   dword [.c180]
     8 000005AF D9EB                <1>         fldpi
     9 000005B1 DCC0                <1>         fadd    st0, st0
    10 000005B3 D9EE                <1>         fldz
    11                              <1> .10L:
    12                              <1> 
    13 000005B5 D8C2                <1>         fadd    st0, st2
    14 000005B7 D9F8                <1>         fprem
    15 000005B9 D9C0                <1>         fld     st0
    16 000005BB D9FE                <1>         fsin
    17 000005BD D8CC                <1>         fmul    st0, st4
    18                              <1> 
    19 000005BF DF35[50060000]      <1>         fbstp   [.bcd]
    20                              <1> 
    21 000005C5 A1[50060000]        <1>         mov     eax, [.bcd]
    22 000005CA 89C3                <1>         mov     ebx, eax
    23                              <1> 
    24 000005CC 250F0F0000          <1>         and     eax, 0x0F0F
    25 000005D1 0D30300000          <1>         or      eax, 0x3030
    26                              <1> 
    27 000005D6 C1EB04              <1>         shr     ebx, 4
    28 000005D9 81E30F0F0000        <1>         and     ebx, 0x0F0F
    29 000005DF 81CB30300000        <1>         or      ebx, 0x3030
    30                              <1> 
    31 000005E5 883D[62060000]      <1>         mov     [.s2 + 0], bh
    32 000005EB 8825[64060000]      <1>         mov     [.s3 + 0], ah
    33 000005F1 881D[65060000]      <1>         mov     [.s3 + 1], bl
    34 000005F7 A2[66060000]        <1>         mov     [.s3 + 2], al
    35                              <1> 
    36 000005FC B807000000          <1>         mov     eax, 7
    37 00000601 0FA305[59060000]    <1>         bt      [.bcd + 9], eax
    38 00000608 7209                <1>         jc      .10F
    39                              <1> 
    40 0000060A C605[61060000]2B    <1>         mov     [.s1 + 0], byte '+'
    41 00000611 EB07                <1>         jmp     .10E
    42                              <1> .10F:
    43                              <1> 
    44 00000613 C605[61060000]2D    <1>         mov     [.s1 + 0], byte '-'
    45                              <1> .10E:
    46                              <1> 
    47 0000061A 68[61060000]6A076A- <1>         cdecl   draw_str, 72, 1, 0x07, .s1
    47 00000622 016A48E81702000066- <1>
    47 0000062B 83C410              <1>
    48                              <1> 
    49 0000062E B914000000          <1>         mov     ecx, 20
    50                              <1> 
    51                              <1> .20L:
    52 00000633 A1[54050000]        <1>         mov     eax, [TIMER_COUNT]
    53                              <1> .21L:
    54 00000638 3905[54050000]      <1>         cmp     [TIMER_COUNT], eax
    55 0000063E 74F8                <1>         je      .21L
    56 00000640 E2F1                <1>         loop    .20L
    57                              <1> 
    58 00000642 E96EFFFFFF          <1>         jmp     .10L
    59                              <1> 
    60 00000647 00                  <1> ALIGN 4, db 0
    61 00000648 E8030000            <1> .c1000      dd  1000
    62 0000064C B4000000            <1> .c180       dd  180
    63                              <1> 
    64 00000650 00<rept>            <1> .bcd:   times 10 db 0x00
    65                              <1> 
    66 0000065A 5461736B2D3200      <1> .s0     db  "Task-2", 0
    67 00000661 2D                  <1> .s1     db  "-"
    68 00000662 302E                <1> .s2     db  "0."
    69 00000664 30303000            <1> .s3     db  "000", 0
    84                                  
    85                                  %include    "../modules/protect/vga.s"
     1                              <1> vga_set_read_plane:
     2                              <1> 
     3 00000668 55                  <1>         push    ebp
     4 00000669 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 0000066B 50                  <1>         push    eax
     7 0000066C 52                  <1>         push    edx
     8                              <1> 
     9 0000066D 8A6508              <1>         mov     ah, [ebp + 8]
    10 00000670 80E403              <1>         and     ah, 0x03
    11 00000673 B004                <1>         mov     al, 0x04
    12 00000675 66BACE03            <1>         mov     dx, 0x03CE
    13 00000679 66EF                <1>         out     dx, ax
    14                              <1> 
    15 0000067B 5A                  <1>         pop     edx
    16 0000067C 58                  <1>         pop     eax
    17                              <1> 
    18 0000067D 89EC                <1>         mov     esp, ebp
    19 0000067F 5D                  <1>         pop     ebp
    20                              <1> 
    21 00000680 C3                  <1>         ret
    22                              <1> 
    23                              <1> 
    24                              <1> vga_set_write_plane:
    25                              <1> 
    26 00000681 55                  <1>          push    ebp
    27 00000682 89E5                <1>          mov     ebp, esp
    28                              <1>  
    29 00000684 50                  <1>          push    eax
    30 00000685 52                  <1>          push    edx
    31                              <1>  
    32 00000686 8A6508              <1>          mov     ah, [ebp + 8]
    33 00000689 80E40F              <1>          and     ah, 0x0F
    34 0000068C B002                <1>          mov     al, 0x02
    35 0000068E 66BAC403            <1>          mov     dx, 0x03C4
    36 00000692 66EF                <1>          out     dx, ax
    37                              <1>  
    38 00000694 5A                  <1>          pop     edx
    39 00000695 58                  <1>          pop     eax
    40                              <1>  
    41 00000696 89EC                <1>          mov     esp, ebp
    42 00000698 5D                  <1>          pop     ebp
    43                              <1>  
    44 00000699 C3                  <1>          ret
    45                              <1> 
    46                              <1> 
    47                              <1> vram_font_copy:
    48                              <1> 
    49 0000069A 55                  <1>         push    ebp
    50 0000069B 89E5                <1>         mov     ebp, esp
    51                              <1> 
    52 0000069D 50                  <1>         push    eax
    53 0000069E 53                  <1>         push    ebx
    54 0000069F 51                  <1>         push    ecx
    55 000006A0 52                  <1>         push    edx
    56 000006A1 56                  <1>         push    esi
    57 000006A2 57                  <1>         push    edi
    58                              <1> 
    59 000006A3 8B7508              <1>         mov     esi, [ebp + 8]
    60 000006A6 8B7D0C              <1>         mov     edi, [ebp + 12]
    61 000006A9 0FB64510            <1>         movzx   eax, byte [ebp + 16]
    62 000006AD 0FB75D14            <1>         movzx   ebx, word [ebp + 20]
    63                              <1> 
    64 000006B1 84C7                <1>         test    bh, al
    65 000006B3 0F94C6              <1>         setz    dh
    66 000006B6 FECE                <1>         dec     dh
    67                              <1> 
    68 000006B8 84C3                <1>         test    bl, al
    69 000006BA 0F94C2              <1>         setz    dl
    70 000006BD FECA                <1>         dec     dl
    71                              <1> 
    72 000006BF FC                  <1>         cld
    73                              <1> 
    74 000006C0 B910000000          <1>         mov     ecx, 16
    75                              <1> .10L:
    76                              <1> 
    77 000006C5 AC                  <1>         lodsb
    78 000006C6 88C4                <1>         mov     ah, al
    79 000006C8 F6D4                <1>         not     ah
    80                              <1> 
    81 000006CA 20D0                <1>         and     al, dl
    82                              <1> 
    83 000006CC F7C310000000        <1>         test    ebx, 0x0010
    84 000006D2 7404                <1>         jz      .11F
    85 000006D4 2227                <1>         and     ah, [edi]
    86 000006D6 EB02                <1>         jmp     .11E
    87                              <1> .11F:
    88                              <1> 
    89 000006D8 20F4                <1>         and     ah, dh
    90                              <1> .11E:
    91                              <1> 
    92 000006DA 08E0                <1>         or      al, ah
    93                              <1> 
    94 000006DC 8807                <1>         mov     [edi], al
    95                              <1> 
    96 000006DE 83C750              <1>         add     edi, 80
    97 000006E1 E2E2                <1>         loop    .10L
    98                              <1> .10E:
    99                              <1> 
   100 000006E3 5F                  <1>         pop     edi
   101 000006E4 5E                  <1>         pop     esi
   102 000006E5 5A                  <1>         pop     edx
   103 000006E6 59                  <1>         pop     ecx
   104 000006E7 5B                  <1>         pop     ebx
   105 000006E8 58                  <1>         pop     eax
   106                              <1> 
   107 000006E9 89EC                <1>         mov     esp, ebp
   108 000006EB 5D                  <1>         pop     ebp
   109                              <1> 
   110 000006EC C3                  <1>         ret
   111                              <1> 
   112                              <1> 
   113                              <1> 
   114                              <1> vram_bit_copy:
   115                              <1> 
   116 000006ED 55                  <1>         push    ebp
   117 000006EE 89E5                <1>         mov     ebp, esp
   118                              <1> 
   119 000006F0 50                  <1>         push    eax
   120 000006F1 53                  <1>         push    ebx
   121 000006F2 57                  <1>         push    edi
   122                              <1> 
   123 000006F3 8B7D0C              <1>         mov     edi, [ebp + 12]
   124 000006F6 0FB64510            <1>         movzx   eax, byte [ebp + 16]
   125 000006FA 0FB75D14            <1>         movzx   ebx, word [ebp + 20]
   126                              <1> 
   127 000006FE 84C3                <1>         test    bl, al
   128 00000700 0F94C3              <1>         setz    bl
   129 00000703 FECB                <1>         dec     bl
   130                              <1> 
   131 00000705 8A4508              <1>         mov     al, [ebp + 8]
   132 00000708 88C4                <1>         mov     ah, al
   133 0000070A F6D4                <1>         not     ah
   134                              <1> 
   135 0000070C 2227                <1>         and     ah, [edi]
   136 0000070E 20D8                <1>         and     al, bl
   137 00000710 08E0                <1>         or      al, ah
   138                              <1> 
   139 00000712 8807                <1>         mov     [edi], al
   140                              <1> 
   141 00000714 5F                  <1>         pop     edi
   142 00000715 5B                  <1>         pop     ebx
   143 00000716 58                  <1>         pop     eax
   144                              <1> 
   145 00000717 89EC                <1>         mov     esp, ebp
   146 00000719 5D                  <1>         pop     ebp
   147                              <1> 
   148 0000071A C3                  <1>         ret
    86                                  %include    "../modules/protect/draw_char.s"
     1                              <1> draw_char:
     2                              <1> 
     3 0000071B 55                  <1>         push    ebp
     4 0000071C 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 0000071E 50                  <1>         push    eax
     7 0000071F 53                  <1>         push    ebx
     8 00000720 51                  <1>         push    ecx
     9 00000721 52                  <1>         push    edx
    10 00000722 56                  <1>         push    esi
    11 00000723 57                  <1>         push    edi
    12                              <1> 
    13                              <1> %ifdef  USE_TEST_AND_SET
    14 00000724 68[F8070000]E88508- <1>         cdecl   test_and_set, IN_USE
    14 0000072C 00006683C404        <1>
    15                              <1> %endif
    16                              <1> 
    17 00000732 0FB67514            <1>         movzx   esi, byte [ebp + 20]
    18 00000736 C1E604              <1>         shl     esi, 4
    19 00000739 0335[00020000]      <1>         add     esi, [FONT_ADR]
    20                              <1> 
    21 0000073F 8B7D0C              <1>         mov     edi, [ebp + 12]
    22 00000742 C1E708              <1>         shl     edi, 8
    23 00000745 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA0000]
    24 0000074C 037D08              <1>         add     edi, [ebp + 8]
    25                              <1> 
    26 0000074F 0FB75D10            <1>         movzx   ebx, word [ebp + 16]
    27                              <1> 
    28 00000753 6A03E80EFFFFFF6683- <1>         cdecl   vga_set_read_plane, 0x03
    28 0000075C C404                <1>
    29 0000075E 6A08E81CFFFFFF6683- <1>         cdecl   vga_set_write_plane, 0x08
    29 00000767 C404                <1>
    30 00000769 536A085756E827FFFF- <1>         cdecl   vram_font_copy, esi, edi, 0x08, ebx
    30 00000772 FF6683C410          <1>
    31                              <1> 
    32 00000777 6A02E8EAFEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x02
    32 00000780 C404                <1>
    33 00000782 6A04E8F8FEFFFF6683- <1>         cdecl   vga_set_write_plane, 0x04
    33 0000078B C404                <1>
    34 0000078D 536A045756E803FFFF- <1>         cdecl   vram_font_copy, esi, edi, 0x04, ebx
    34 00000796 FF6683C410          <1>
    35                              <1> 
    36 0000079B 6A01E8C6FEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x01
    36 000007A4 C404                <1>
    37 000007A6 6A02E8D4FEFFFF6683- <1>         cdecl   vga_set_write_plane, 0x02
    37 000007AF C404                <1>
    38 000007B1 536A025756E8DFFEFF- <1>         cdecl   vram_font_copy, esi, edi, 0x02, ebx
    38 000007BA FF6683C410          <1>
    39                              <1> 
    40 000007BF 6A00E8A2FEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x00
    40 000007C8 C404                <1>
    41 000007CA 6A01E8B0FEFFFF6683- <1>         cdecl   vga_set_write_plane, 0x01
    41 000007D3 C404                <1>
    42 000007D5 536A015756E8BBFEFF- <1>         cdecl   vram_font_copy, esi, edi, 0x01, ebx
    42 000007DE FF6683C410          <1>
    43                              <1> 
    44                              <1> %ifdef  USE_TEST_AND_SET
    45 000007E3 C705[F8070000]0000- <1>         mov     [IN_USE], dword 0
    45 000007EB 0000                <1>
    46                              <1> %endif
    47                              <1> 
    48 000007ED 5F                  <1>         pop     edi
    49 000007EE 5E                  <1>         pop     esi
    50 000007EF 5A                  <1>         pop     edx
    51 000007F0 59                  <1>         pop     ecx
    52 000007F1 5B                  <1>         pop     ebx
    53 000007F2 58                  <1>         pop     eax
    54                              <1> 
    55 000007F3 89EC                <1>         mov     esp, ebp
    56 000007F5 5D                  <1>         pop     ebp
    57                              <1> 
    58 000007F6 C3                  <1>         ret
    59                              <1> 
    60                              <1> %ifdef USE_TEST_AND_SET
    61 000007F7 00                  <1> ALIGN 4, db 0
    62 000007F8 00000000            <1> IN_USE:	dd	0
    63                              <1> %endif
    87                                  %include    "../modules/protect/draw_font.s"
     1                              <1> draw_font:
     2                              <1> 
     3 000007FC 55                  <1>         push    ebp
     4 000007FD 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 000007FF 50                  <1>         push    eax
     7 00000800 53                  <1>         push    ebx
     8 00000801 51                  <1>         push    ecx
     9 00000802 52                  <1>         push    edx
    10 00000803 56                  <1>         push    esi
    11 00000804 57                  <1>         push    edi
    12                              <1> 
    13 00000805 8B7508              <1>         mov     esi, [ebp + 8]
    14 00000808 8B7D0C              <1>         mov     edi, [ebp + 12]
    15                              <1> 
    16 0000080B B900000000          <1>         mov     ecx, 0
    17 00000810 81F900010000        <1> .10L:   cmp     ecx, 256
    18 00000816 731F                <1>         jae     .10E
    19                              <1> 
    20 00000818 89C8                <1>         mov     eax, ecx
    21 0000081A 83E00F              <1>         and     eax, 0x0F
    22 0000081D 01F0                <1>         add     eax, esi
    23                              <1> 
    24 0000081F 89CB                <1>         mov     ebx, ecx
    25 00000821 C1EB04              <1>         shr     ebx, 4
    26 00000824 01FB                <1>         add     ebx, edi
    27                              <1> 
    28 00000826 516A075350E8EBFEFF- <1>         cdecl   draw_char, eax, ebx, 0x07, ecx
    28 0000082F FF6683C410          <1>
    29                              <1> 
    30 00000834 41                  <1>         inc     ecx
    31 00000835 EBD9                <1>         jmp     .10L
    32                              <1> .10E:
    33                              <1> 
    34 00000837 5F                  <1>         pop     edi
    35 00000838 5E                  <1>         pop     esi
    36 00000839 5A                  <1>         pop     edx
    37 0000083A 59                  <1>         pop     ecx
    38 0000083B 5B                  <1>         pop     ebx
    39 0000083C 58                  <1>         pop     eax
    40                              <1> 
    41 0000083D 89EC                <1>         mov     esp, ebp
    42 0000083F 5D                  <1>         pop     ebp
    43                              <1> 
    44 00000840 C3                  <1>         ret
    88                                  %include    "../modules/protect/draw_str.s"
     1                              <1> draw_str:
     2                              <1> 
     3 00000841 55                  <1>         push    ebp
     4 00000842 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000844 50                  <1>         push    eax
     7 00000845 53                  <1>         push    ebx
     8 00000846 51                  <1>         push    ecx
     9 00000847 52                  <1>         push    edx
    10 00000848 56                  <1>         push    esi
    11                              <1> 
    12 00000849 8B4D08              <1>         mov     ecx, [ebp + 8]
    13 0000084C 8B550C              <1>         mov     edx, [ebp + 12]
    14 0000084F 0FB75D10            <1>         movzx   ebx, word [ebp + 16]
    15 00000853 8B7514              <1>         mov     esi, [ebp + 20]
    16                              <1> 
    17 00000856 FC                  <1>         cld
    18                              <1> .10L:
    19                              <1> 
    20 00000857 AC                  <1>         lodsb
    21 00000858 3C00                <1>         cmp     al, 0
    22 0000085A 741A                <1>         je      .10E
    23                              <1> 
    24                              <1> %ifdef  USE_SYSTEM_CALL
    25 0000085C CD81                <1>         int     0x81
    26                              <1> %else
    27                              <1>         cdecl   draw_char, ecx, edx, ebx, eax
    28                              <1> %endif
    29                              <1> 
    30 0000085E 41                  <1>         inc     ecx
    31 0000085F 83F950              <1>         cmp     ecx, 80
    32 00000862 7C10                <1>         jl      .12E
    33 00000864 B900000000          <1>         mov     ecx, 0
    34 00000869 42                  <1>         inc     edx
    35 0000086A 83FA1E              <1>         cmp     edx, 30
    36 0000086D 7C05                <1>         jl      .12E
    37 0000086F BA00000000          <1>         mov     edx, 0
    38                              <1> 
    39                              <1> .12E:
    40 00000874 EBE1                <1>         jmp     .10L
    41                              <1> .10E:
    42                              <1> 
    43 00000876 5E                  <1>         pop     esi
    44 00000877 5A                  <1>         pop     edx
    45 00000878 59                  <1>         pop     ecx
    46 00000879 5B                  <1>         pop     ebx
    47 0000087A 58                  <1>         pop     eax
    48                              <1> 
    49 0000087B 89EC                <1>         mov     esp, ebp
    50 0000087D 5D                  <1>         pop     ebp
    51                              <1> 
    52 0000087E C3                  <1>         ret
    89                                  %include    "../modules/protect/draw_color_bar.s"
     1                              <1> draw_color_bar:
     2                              <1> 
     3 0000087F 55                  <1>         push    ebp
     4 00000880 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000882 50                  <1>         push    eax
     7 00000883 53                  <1>         push    ebx
     8 00000884 51                  <1>         push    ecx
     9 00000885 52                  <1>         push    edx
    10 00000886 56                  <1>         push    esi
    11 00000887 57                  <1>         push    edi
    12                              <1> 
    13 00000888 8B7508              <1>         mov     esi, [ebp + 8]
    14 0000088B 8B7D0C              <1>         mov     edi, [ebp + 12]
    15                              <1> 
    16 0000088E B900000000          <1>         mov     ecx, 0
    17 00000893 83F910              <1> .10L:   cmp     ecx, 16
    18 00000896 732E                <1>         jae     .10E
    19                              <1> 
    20 00000898 89C8                <1>         mov     eax, ecx
    21 0000089A 83E001              <1>         and     eax, 0x01
    22 0000089D C1E003              <1>         shl     eax, 3
    23 000008A0 01F0                <1>         add     eax, esi
    24                              <1> 
    25 000008A2 89CB                <1>         mov     ebx, ecx
    26 000008A4 D1EB                <1>         shr     ebx, 1
    27 000008A6 01FB                <1>         add     ebx, edi
    28                              <1> 
    29 000008A8 89CA                <1>         mov     edx, ecx
    30 000008AA D1E2                <1>         shl     edx, 1
    31 000008AC 8B92[DA080000]      <1>         mov     edx, [.t0 + edx]
    32                              <1> 
    33 000008B2 68[D0080000]525350- <1>         cdecl   draw_str, eax, ebx, edx, .s0
    33 000008BA E882FFFFFF6683C410  <1>
    34                              <1> 
    35 000008C3 41                  <1>         inc     ecx
    36 000008C4 EBCD                <1>         jmp     .10L
    37                              <1> .10E:
    38                              <1> 
    39 000008C6 5F                  <1>         pop     edi
    40 000008C7 5E                  <1>         pop     esi
    41 000008C8 5A                  <1>         pop     edx
    42 000008C9 59                  <1>         pop     ecx
    43 000008CA 5B                  <1>         pop     ebx
    44 000008CB 58                  <1>         pop     eax
    45                              <1> 
    46 000008CC 89EC                <1>         mov     esp, ebp
    47 000008CE 5D                  <1>         pop     ebp
    48                              <1> 
    49 000008CF C3                  <1>         ret
    50                              <1> 
    51 000008D0 202020202020202020- <1> .s0     db  '         ', 0
    51 000008D9 00                  <1>
    52                              <1> 
    53 000008DA 00000008            <1> .t0     dw  0x0000, 0x0800
    54 000008DE 00010009            <1> 		dw	0x0100, 0x0900
    55 000008E2 0002000A            <1> 		dw	0x0200, 0x0A00
    56 000008E6 0003000B            <1> 		dw	0x0300, 0x0B00
    57 000008EA 0004000C            <1> 		dw	0x0400, 0x0C00
    58 000008EE 0005000D            <1> 		dw	0x0500, 0x0D00
    59 000008F2 0006000E            <1> 		dw	0x0600, 0x0E00
    60 000008F6 0007000F            <1> 		dw	0x0700, 0x0F00
    90                                  %include    "../modules/protect/draw_pixel.s"
     1                              <1> draw_pixel:
     2                              <1> 
     3 000008FA 55                  <1>         push    ebp
     4 000008FB 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 000008FD 50                  <1>         push    eax
     7 000008FE 53                  <1>         push    ebx
     8 000008FF 51                  <1>         push    ecx
     9 00000900 57                  <1>         push    edi
    10                              <1> 
    11 00000901 8B7D0C              <1>         mov     edi, [ebp + 12]
    12 00000904 C1E704              <1>         shl     edi, 4
    13 00000907 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA_0000]
    14                              <1> 
    15 0000090E 8B5D08              <1>         mov     ebx, [ebp + 8]
    16 00000911 89D9                <1>         mov     ecx, ebx
    17 00000913 C1EB03              <1>         shr     ebx, 3
    18 00000916 01DF                <1>         add     edi, ebx
    19                              <1> 
    20 00000918 83E107              <1>         and     ecx, 0x07
    21 0000091B BB80000000          <1>         mov     ebx, 0x80
    22 00000920 D3EB                <1>         shr     ebx, cl
    23                              <1> 
    24 00000922 8B4D10              <1>         mov     ecx, [ebp + 16]
    25                              <1> 
    26 00000925 6A03E83CFDFFFF6683- <1>         cdecl   vga_set_read_plane, 0x03
    26 0000092E C404                <1>
    27 00000930 6A08E84AFDFFFF6683- <1>         cdecl   vga_set_write_plane, 0x08
    27 00000939 C404                <1>
    28 0000093B 516A085753E8A8FDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x08, ecx
    28 00000944 FF6683C410          <1>
    29                              <1> 
    30 00000949 6A02E818FDFFFF6683- <1>         cdecl   vga_set_read_plane, 0x02
    30 00000952 C404                <1>
    31 00000954 6A04E826FDFFFF6683- <1>         cdecl   vga_set_write_plane, 0x04
    31 0000095D C404                <1>
    32 0000095F 516A045753E884FDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x04, ecx
    32 00000968 FF6683C410          <1>
    33                              <1> 
    34 0000096D 6A01E8F4FCFFFF6683- <1>         cdecl   vga_set_read_plane, 0x01
    34 00000976 C404                <1>
    35 00000978 6A02E802FDFFFF6683- <1>         cdecl   vga_set_write_plane, 0x02
    35 00000981 C404                <1>
    36 00000983 516A025753E860FDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x02, ecx
    36 0000098C FF6683C410          <1>
    37                              <1> 
    38 00000991 6A00E8D0FCFFFF6683- <1>         cdecl   vga_set_read_plane, 0x00
    38 0000099A C404                <1>
    39 0000099C 6A01E8DEFCFFFF6683- <1>         cdecl   vga_set_write_plane, 0x01
    39 000009A5 C404                <1>
    40 000009A7 516A015753E83CFDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x01, ecx
    40 000009B0 FF6683C410          <1>
    41                              <1> 
    42 000009B5 5F                  <1>         pop     edi
    43 000009B6 59                  <1>         pop     ecx
    44 000009B7 5B                  <1>         pop     ebx
    45 000009B8 58                  <1>         pop     eax
    46                              <1> 
    47 000009B9 89EC                <1>         mov     esp, ebp
    48 000009BB 5D                  <1>         pop     ebp
    49                              <1> 
    50 000009BC C3                  <1>         ret
    91                                  %include    "../modules/protect/draw_line.s"
     1                              <1> draw_line:
     2                              <1> 
     3 000009BD 55                  <1>         push    ebp
     4 000009BE 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 000009C0 6A00                <1>         push    dword 0
     7 000009C2 6A00                <1>         push    dword 0
     8 000009C4 6A00                <1>         push    dword 0
     9 000009C6 6A00                <1>         push    dword 0
    10 000009C8 6A00                <1>         push    dword 0
    11 000009CA 6A00                <1>         push    dword 0
    12 000009CC 6A00                <1>         push    dword 0
    13                              <1> 
    14 000009CE 50                  <1>         push    eax
    15 000009CF 53                  <1>         push    ebx
    16 000009D0 51                  <1>         push    ecx
    17 000009D1 52                  <1>         push    edx
    18 000009D2 56                  <1>         push    esi
    19 000009D3 57                  <1>         push    edi
    20                              <1> 
    21 000009D4 8B4508              <1>         mov     eax, [ebp + 8]
    22 000009D7 8B5D10              <1>         mov     ebx, [ebp + 16]
    23 000009DA 29C3                <1>         sub     ebx, eax
    24 000009DC 7D09                <1>         jge     .10F
    25                              <1> 
    26 000009DE F7DB                <1>         neg     ebx
    27 000009E0 BEFFFFFFFF          <1>         mov     esi, -1
    28 000009E5 EB05                <1>         jmp     .10E
    29                              <1> .10F:
    30                              <1> 
    31 000009E7 BE01000000          <1>         mov     esi, 1
    32                              <1> .10E:
    33                              <1> 
    34 000009EC 8B4D0C              <1>         mov     ecx, [ebp + 12]
    35 000009EF 8B5514              <1>         mov     edx, [ebp + 20]
    36 000009F2 29CA                <1>         sub     edx, ecx
    37 000009F4 7D09                <1>         jge     .20F
    38                              <1> 
    39 000009F6 F7DA                <1>         neg     edx
    40 000009F8 BFFFFFFFFF          <1>         mov     edi, -1
    41 000009FD EB05                <1>         jmp     .20E
    42                              <1> .20F:
    43                              <1> 
    44 000009FF BF01000000          <1>         mov     edi, 1
    45                              <1> .20E:
    46                              <1> 
    47 00000A04 8945F8              <1>         mov     [ebp - 8], eax
    48 00000A07 895DF4              <1>         mov     [ebp - 12], ebx
    49 00000A0A 8975F0              <1>         mov     [ebp - 16], esi
    50                              <1> 
    51 00000A0D 894DEC              <1>         mov     [ebp - 20], ecx
    52 00000A10 8955E8              <1>         mov     [ebp - 24], edx
    53 00000A13 897DE4              <1>         mov     [ebp - 28], edi
    54                              <1> 
    55 00000A16 39D3                <1>         cmp     ebx, edx
    56 00000A18 7F08                <1>         jg      .22F
    57                              <1> 
    58 00000A1A 8D75EC              <1>         lea     esi, [ebp - 20]
    59 00000A1D 8D7DF8              <1>         lea     edi, [ebp - 8]
    60                              <1> 
    61 00000A20 EB06                <1>         jmp     .22E
    62                              <1> .22F:
    63                              <1> 
    64 00000A22 8D75F8              <1>         lea     esi, [ebp - 8]
    65 00000A25 8D7DEC              <1>         lea     edi, [ebp - 20]
    66                              <1> .22E:
    67                              <1> 
    68 00000A28 8B4EFC              <1>         mov     ecx, [esi - 4]
    69 00000A2B 83F900              <1>         cmp     ecx, 0
    70 00000A2E 7505                <1>         jnz     .30E
    71 00000A30 B901000000          <1>         mov     ecx, 1
    72                              <1> .30E:
    73                              <1> 
    74                              <1> .50L:
    75                              <1> 
    76 00000A35 FF7518FF75ECFF75F8- <1>         cdecl   draw_pixel, dword [ebp - 8], dword [ebp - 20], dword [ebp + 24]
    76 00000A3E E8B7FEFFFF6683C40C  <1>
    77                              <1> 
    78 00000A47 8B46F8              <1>         mov     eax, [esi - 8]
    79 00000A4A 0106                <1>         add     [esi - 0], eax
    80                              <1> 
    81 00000A4C 8B45FC              <1>         mov     eax, [ebp - 4]
    82 00000A4F 0347FC              <1>         add     eax, [edi - 4]
    83 00000A52 8B5EFC              <1>         mov     ebx, [esi - 4]
    84                              <1> 
    85 00000A55 39D8                <1>         cmp     eax, ebx
    86 00000A57 7C07                <1>         jl      .52E
    87 00000A59 29D8                <1>         sub     eax, ebx
    88                              <1> 
    89 00000A5B 8B5FF8              <1>         mov     ebx, [edi - 8]
    90 00000A5E 011F                <1>         add     [edi - 0], ebx
    91                              <1> .52E:
    92                              <1> 
    93 00000A60 8945FC              <1>         mov     [ebp - 4], eax
    94                              <1> 
    95 00000A63 E2D0                <1>         loop    .50L
    96                              <1> .50E:
    97                              <1> 
    98 00000A65 5F                  <1>         pop     edi
    99 00000A66 5E                  <1>         pop     esi
   100 00000A67 5A                  <1>         pop     edx
   101 00000A68 59                  <1>         pop     ecx
   102 00000A69 5B                  <1>         pop     ebx
   103 00000A6A 58                  <1>         pop     eax
   104                              <1> 
   105 00000A6B 89EC                <1>         mov     esp, ebp
   106 00000A6D 5D                  <1>         pop     ebp
   107                              <1> 
   108 00000A6E C3                  <1>         ret
    92                                  %include    "../modules/protect/draw_rect.s"
     1                              <1> draw_rect:
     2                              <1> 
     3 00000A6F 55                  <1>         push    ebp
     4 00000A70 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000A72 50                  <1>         push    eax
     7 00000A73 53                  <1>         push    ebx
     8 00000A74 51                  <1>         push    ecx
     9 00000A75 52                  <1>         push    edx
    10 00000A76 56                  <1>         push    esi
    11                              <1> 
    12 00000A77 8B4508              <1>         mov     eax, [ebp + 8]
    13 00000A7A 8B5D0C              <1>         mov     ebx, [ebp + 12]
    14 00000A7D 8B4D10              <1>         mov     ecx, [ebp + 16]
    15 00000A80 8B5514              <1>         mov     edx, [ebp + 20]
    16 00000A83 8B7518              <1>         mov     esi, [ebp + 24]
    17                              <1> 
    18 00000A86 39C8                <1>         cmp     eax, ecx
    19 00000A88 7C01                <1>         jl      .10E
    20 00000A8A 91                  <1>         xchg    eax, ecx
    21                              <1> .10E:
    22                              <1> 
    23 00000A8B 39D3                <1>         cmp     ebx, edx
    24 00000A8D 7C02                <1>         jl      .20E
    25 00000A8F 87DA                <1>         xchg    ebx, edx
    26                              <1> .20E:
    27                              <1> 
    28 00000A91 5653515350E822FFFF- <1>         cdecl   draw_line, eax, ebx, ecx, ebx, esi
    28 00000A9A FF6683C414          <1>
    29 00000A9F 5652505350E814FFFF- <1>         cdecl   draw_line, eax, ebx, eax, edx, esi
    29 00000AA8 FF6683C414          <1>
    30                              <1> 
    31 00000AAD 4A                  <1>         dec     edx
    32 00000AAE 5652515250E805FFFF- <1>         cdecl   draw_line, eax, edx, ecx, edx, esi
    32 00000AB7 FF6683C414          <1>
    33 00000ABC 42                  <1>         inc     edx
    34                              <1> 
    35 00000ABD 4A                  <1>         dec     edx
    36 00000ABE 5652515351E8F5FEFF- <1>         cdecl   draw_line, ecx, ebx, ecx, edx, esi
    36 00000AC7 FF6683C414          <1>
    37                              <1> 
    38 00000ACC 5E                  <1>         pop     esi
    39 00000ACD 5A                  <1>         pop     edx
    40 00000ACE 59                  <1>         pop     ecx
    41 00000ACF 5B                  <1>         pop     ebx
    42 00000AD0 58                  <1>         pop     eax
    43                              <1> 
    44 00000AD1 89EC                <1>         mov     esp, ebp
    45 00000AD3 5D                  <1>         pop     ebp
    46                              <1> 
    47 00000AD4 C3                  <1>         ret
    93                                  %include    "../modules/protect/itoa.s"
     1                              <1> itoa:
     2                              <1> 
     3 00000AD5 55                  <1>         push    ebp
     4 00000AD6 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000AD8 50                  <1>         push    eax
     7 00000AD9 53                  <1>         push    ebx
     8 00000ADA 51                  <1>         push    ecx
     9 00000ADB 52                  <1>         push    edx
    10 00000ADC 56                  <1>         push    esi
    11 00000ADD 57                  <1>         push    edi
    12                              <1> 
    13 00000ADE 8B4508              <1>         mov     eax, [ebp + 8]
    14 00000AE1 8B750C              <1>         mov     esi, [ebp + 12]
    15 00000AE4 8B4D10              <1>         mov     ecx, [ebp + 16]
    16                              <1> 
    17 00000AE7 89F7                <1>         mov     edi, esi
    18 00000AE9 01CF                <1>         add     edi, ecx
    19 00000AEB 4F                  <1>         dec     edi
    20                              <1> 
    21 00000AEC 8B5D18              <1>         mov     ebx, [ebp + 24]
    22                              <1> 
    23 00000AEF F7C301000000        <1>         test    ebx, 0b0001
    24 00000AF5 7408                <1> .10Q:   je      .10E
    25 00000AF7 83F800              <1>         cmp     eax, 0
    26 00000AFA 7D03                <1> .12Q:   jge     .12E
    27 00000AFC 83CB02              <1>         or      ebx, 0b0010
    28                              <1> .12E:
    29                              <1> .10E:
    30                              <1> 
    31 00000AFF F7C302000000        <1>         test    ebx, 0b0010
    32 00000B05 7410                <1> .20Q:   je      .20E
    33 00000B07 83F800              <1>         cmp     eax, 0
    34 00000B0A 7D07                <1> .22Q:   jge     .22F
    35 00000B0C F7D8                <1>         neg     eax
    36 00000B0E C6062D              <1>         mov     [esi], byte '-'
    37 00000B11 EB03                <1>         jmp     .22E
    38                              <1> .22F:
    39                              <1> 
    40 00000B13 C6062B              <1>         mov     [esi], byte '+'
    41                              <1> .22E:
    42 00000B16 49                  <1>         dec     ecx
    43                              <1> .20E:
    44                              <1> 
    45 00000B17 8B5D14              <1>         mov     ebx, [ebp + 20]
    46                              <1> .30L:
    47                              <1> 
    48 00000B1A BA00000000          <1>         mov     edx, 0
    49 00000B1F F7F3                <1>         div     ebx
    50                              <1> 
    51 00000B21 89D6                <1>         mov     esi, edx
    52 00000B23 8A96[4F0B0000]      <1>         mov     dl, byte [.ascii + esi]
    53                              <1> 
    54 00000B29 8817                <1>         mov     [edi], dl
    55 00000B2B 4F                  <1>         dec     edi
    56                              <1> 
    57 00000B2C 83F800              <1>         cmp     eax, 0
    58 00000B2F E0E9                <1>         loopnz  .30L
    59                              <1> .30E:
    60                              <1> 
    61 00000B31 83F900              <1>         cmp     ecx, 0
    62 00000B34 740F                <1> .40Q:   je      .40E
    63 00000B36 B020                <1>         mov     al, ' '
    64 00000B38 6667837E1804        <1>         cmp     [bp + 24], word 0b0100
    65 00000B3E 7502                <1> .42Q:   jne     .42E
    66 00000B40 B030                <1>         mov     al, '0'
    67                              <1> .42E:
    68 00000B42 FD                  <1>         std
    69 00000B43 F3AA                <1>         rep stosb
    70                              <1> .40E:
    71                              <1> 
    72 00000B45 5F                  <1>         pop     edi
    73 00000B46 5E                  <1>         pop     esi
    74 00000B47 5A                  <1>         pop     edx
    75 00000B48 59                  <1>         pop     ecx
    76 00000B49 5B                  <1>         pop     ebx
    77 00000B4A 58                  <1>         pop     eax
    78                              <1> 
    79 00000B4B 89EC                <1>         mov     esp, ebp
    80 00000B4D 5D                  <1>         pop     ebp
    81                              <1> 
    82 00000B4E C3                  <1>         ret
    83                              <1> 
    84 00000B4F 303132333435363738- <1> .ascii  db      "0123456789ABCDEF"
    84 00000B58 39414243444546      <1>
    94                                  %include    "../modules/protect/rtc.s"
     1                              <1> rtc_get_time:
     2                              <1> 
     3 00000B5F 55                  <1>         push    ebp
     4 00000B60 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000B62 53                  <1>         push    ebx
     7                              <1> 
     8 00000B63 B00A                <1>         mov     al, 0x0A
     9 00000B65 E670                <1>         out     0x70, al
    10 00000B67 E471                <1>         in      al, 0x71
    11 00000B69 A880                <1>         test    al, 0x80
    12 00000B6B 7407                <1>         je      .10F
    13 00000B6D B801000000          <1>         mov     eax, 1
    14 00000B72 EB27                <1>         jmp     .10E
    15                              <1> .10F:
    16                              <1> 
    17 00000B74 B004                <1>         mov     al, 0x04
    18 00000B76 E670                <1>         out     0x70, al
    19 00000B78 E471                <1>         in      al, 0x71
    20                              <1> 
    21 00000B7A C1E008              <1>         shl     eax, 8
    22                              <1> 
    23 00000B7D B002                <1>         mov     al, 0x02
    24 00000B7F E670                <1>         out     0x70, al
    25 00000B81 E471                <1>         in      al, 0x71
    26                              <1> 
    27 00000B83 C1E008              <1>         shl     eax, 8
    28                              <1> 
    29 00000B86 B000                <1>         mov     al, 0x00
    30 00000B88 E670                <1>         out     0x70, al
    31 00000B8A E471                <1>         in      al, 0x71
    32                              <1> 
    33 00000B8C 25FFFFFF00          <1>         and     eax, 0x00_FF_FF_FF
    34                              <1> 
    35 00000B91 8B5D08              <1>         mov     ebx, [ebp + 8]
    36 00000B94 8903                <1>         mov     [ebx], eax
    37                              <1> 
    38 00000B96 B800000000          <1>         mov     eax, 0
    39                              <1> .10E:
    40                              <1> 
    41 00000B9B 5B                  <1>         pop     ebx
    42                              <1> 
    43 00000B9C 89EC                <1>         mov     esp, ebp
    44 00000B9E 5D                  <1>         pop     ebp
    45                              <1> 
    46 00000B9F C3                  <1>         ret
    95                                  %include    "../modules/protect/draw_time.s"
     1                              <1> draw_time:
     2                              <1> 
     3 00000BA0 55                  <1>         push    ebp
     4 00000BA1 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000BA3 50                  <1>         push    eax
     7 00000BA4 53                  <1>         push    ebx
     8                              <1> 
     9 00000BA5 8B4514              <1>         mov     eax, [ebp + 20]
    10 00000BA8 3B05[260C0000]      <1>         cmp     eax, [.last]
    11 00000BAE 7468                <1>         je      .10E
    12                              <1> 
    13 00000BB0 A3[260C0000]        <1>         mov     [.last], eax
    14                              <1> 
    15 00000BB5 BB00000000          <1>         mov     ebx, 0
    16 00000BBA 0FB6D8              <1>         movzx   ebx, al
    17 00000BBD 6A046A106A0268-     <1>         cdecl   itoa, ebx, .sec, 2, 16, 0b0100
    17 00000BC4 [340C0000]53E807FF- <1>
    17 00000BCC FFFF6683C414        <1>
    18                              <1> 
    19 00000BD2 88E3                <1>         mov     bl, ah
    20 00000BD4 6A046A106A0268-     <1>         cdecl   itoa, ebx, .min, 2, 16, 0b0100
    20 00000BDB [310C0000]53E8F0FE- <1>
    20 00000BE3 FFFF6683C414        <1>
    21                              <1> 
    22 00000BE9 C1E810              <1>         shr     eax, 16
    23 00000BEC 6A046A106A0268-     <1>         cdecl   itoa, eax, .hour, 2, 16, 0b0100
    23 00000BF3 [2E0C0000]50E8D8FE- <1>
    23 00000BFB FFFF6683C414        <1>
    24                              <1> 
    25 00000C01 68[2E0C0000]FF7510- <1>         cdecl   draw_str, dword [ebp + 8], dword [ebp + 12], dword [ebp + 16], .hour
    25 00000C09 FF750CFF7508E82DFC- <1>
    25 00000C12 FFFF6683C410        <1>
    26                              <1> 
    27                              <1> .10E:
    28                              <1> 
    29 00000C18 5B                  <1>         pop     ebx
    30 00000C19 58                  <1>         pop     eax
    31                              <1> 
    32 00000C1A 89EC                <1>         mov     esp, ebp
    33 00000C1C 5D                  <1>         pop     ebp
    34                              <1> 
    35 00000C1D C3                  <1>         ret
    36                              <1> 
    37                              <1> ALIGN 2, db 0
    38 00000C1E 0000000000000000    <1> .temp   dq  0
    39 00000C26 0000000000000000    <1> .last   dq  0
    40 00000C2E 5A5A3A              <1> .hour   db  "ZZ:"
    41 00000C31 5A5A3A              <1> .min    db  "ZZ:"
    42 00000C34 5A5A00              <1> .sec    db  "ZZ", 0
    96                                  %include    "../modules/protect/interrupt.s"
     1 00000C37 90                  <1> ALIGN 4
     2 00000C38 FF07                <1> IDTR:   dw      8 * 256 -1
     3 00000C3A 00001000            <1>         dd      VECT_BASE
     4                              <1> 
     5                              <1> init_int:
     6                              <1> 
     7 00000C3E 50                  <1>         push    eax
     8 00000C3F 53                  <1>         push    ebx
     9 00000C40 51                  <1>         push    ecx
    10 00000C41 57                  <1>         push    edi
    11                              <1> 
    12 00000C42 8D05[880D0000]      <1>         lea     eax, [int_default]
    13 00000C48 BB008E0800          <1>         mov     ebx, 0x0008_8E00
    14 00000C4D 6693                <1>         xchg    ax, bx
    15                              <1> 
    16 00000C4F B900010000          <1>         mov     ecx, 256
    17 00000C54 BF00001000          <1>         mov     edi, VECT_BASE
    18                              <1> 
    19                              <1> .10L:
    20                              <1> 
    21 00000C59 891F                <1>         mov     [edi + 0], ebx
    22 00000C5B 894704              <1>         mov     [edi + 4], eax
    23 00000C5E 83C708              <1>         add     edi, 8
    24 00000C61 E2F6                <1>         loop    .10L
    25                              <1> 
    26 00000C63 0F011D[380C0000]    <1>         lidt    [IDTR]
    27                              <1> 
    28 00000C6A 5F                  <1>         pop     edi
    29 00000C6B 59                  <1>         pop     ecx
    30 00000C6C 5B                  <1>         pop     ebx
    31 00000C6D 58                  <1>         pop     eax
    32                              <1> 
    33 00000C6E C3                  <1>         ret
    34                              <1> 
    35                              <1> 
    36                              <1> int_stop:
    37                              <1> 
    38 00000C6F FB                  <1>         sti
    39                              <1> 
    40 00000C70 50680F0600006A0F6A- <1>         cdecl   draw_str, 25, 15, 0x060F, eax
    40 00000C79 19E8C2FBFFFF6683C4- <1>
    40 00000C82 10                  <1>
    41                              <1> 
    42 00000C83 8B0424              <1>         mov     eax, [esp + 0]
    43 00000C86 6A046A106A0868-     <1>         cdecl   itoa, eax, .p1, 8, 16, 0b0100
    43 00000C8D [4B0D0000]50E83EFE- <1>
    43 00000C95 FFFF6683C414        <1>
    44                              <1> 
    45 00000C9B 8B442404            <1>         mov     eax, [esp + 4]
    46 00000C9F 6A046A106A0868-     <1>         cdecl   itoa, eax, .p2, 8, 16, 0b0100
    46 00000CA6 [5C0D0000]50E825FE- <1>
    46 00000CAE FFFF6683C414        <1>
    47                              <1> 
    48 00000CB4 8B442408            <1>         mov     eax, [esp + 8]
    49 00000CB8 6A046A106A0868-     <1>         cdecl   itoa, eax, .p3, 8, 16, 0b0100
    49 00000CBF [6D0D0000]50E80CFE- <1>
    49 00000CC7 FFFF6683C414        <1>
    50                              <1> 
    51 00000CCD 8B44240C            <1>         mov     eax, [esp + 12]
    52 00000CD1 6A046A106A0868-     <1>         cdecl   itoa, eax, .p4, 8, 16, 0b0100
    52 00000CD8 [7E0D0000]50E8F3FD- <1>
    52 00000CE0 FFFF6683C414        <1>
    53                              <1> 
    54 00000CE6 68[440D0000]68040F- <1>         cdecl   draw_str, 25, 16, 0x0F04, .s1
    54 00000CEE 00006A106A19E848FB- <1>
    54 00000CF7 FFFF6683C410        <1>
    55 00000CFD 68[550D0000]68040F- <1>         cdecl   draw_str, 25, 17, 0x0F04, .s2
    55 00000D05 00006A116A19E831FB- <1>
    55 00000D0E FFFF6683C410        <1>
    56 00000D14 68[660D0000]68040F- <1>         cdecl   draw_str, 25, 18, 0x0F04, .s3
    56 00000D1C 00006A126A19E81AFB- <1>
    56 00000D25 FFFF6683C410        <1>
    57 00000D2B 68[770D0000]68040F- <1>         cdecl   draw_str, 25, 19, 0x0F04, .s4
    57 00000D33 00006A136A19E803FB- <1>
    57 00000D3C FFFF6683C410        <1>
    58                              <1> 
    59 00000D42 EBFE                <1>         jmp     $
    60                              <1> 
    61 00000D44 4553502B20303A      <1> .s1		db	"ESP+ 0:"
    62 00000D4B 5F5F5F5F5F5F5F5F20- <1> .p1		db	"________ ", 0
    62 00000D54 00                  <1>
    63 00000D55 2020202B20343A      <1> .s2		db	"   + 4:"
    64 00000D5C 5F5F5F5F5F5F5F5F20- <1> .p2		db	"________ ", 0
    64 00000D65 00                  <1>
    65 00000D66 2020202B20383A      <1> .s3		db	"   + 8:"
    66 00000D6D 5F5F5F5F5F5F5F5F20- <1> .p3		db	"________ ", 0
    66 00000D76 00                  <1>
    67 00000D77 2020202B31323A      <1> .s4		db	"   +12:"
    68 00000D7E 5F5F5F5F5F5F5F5F20- <1> .p4		db	"________ ", 0
    68 00000D87 00                  <1>
    69                              <1> 
    70                              <1> 
    71                              <1> int_default:
    72                              <1> 
    73 00000D88 9C                  <1>         pushf
    74 00000D89 0E                  <1>         push    cs
    75 00000D8A 68[6F0C0000]        <1>         push    int_stop
    76                              <1> 
    77 00000D8F B8[950D0000]        <1>         mov     eax, .s0
    78 00000D94 CF                  <1>         iret
    79                              <1> 
    80 00000D95 203C2020202053544F- <1> .s0     db  " <    STOP    > ", 0
    80 00000D9E 50202020203E2000    <1>
    81                              <1> 
    82                              <1> 
    83                              <1> int_zero_div:
    84                              <1> 
    85 00000DA6 9C                  <1>         pushf
    86 00000DA7 0E                  <1>         push    cs
    87 00000DA8 68[6F0C0000]        <1>         push    int_stop
    88                              <1> 
    89 00000DAD B8[B30D0000]        <1>         mov     eax, .s0
    90 00000DB2 CF                  <1>         iret
    91                              <1> 
    92 00000DB3 203C20205A45524F20- <1> .s0     db  " <  ZERO DIV  > ", 0
    92 00000DBC 44495620203E2000    <1>
    97                                  %include    "../modules/protect/pic.s"
     1                              <1> init_pic:
     2                              <1> 
     3 00000DC4 50                  <1>         push    eax
     4                              <1> 
     5                              <1>         outp    0x20, 0x11
     5 00000DC5 B011                <2>  mov al, %2
     5 00000DC7 E620                <2>  out %1, al
     6                              <1>         outp    0x21, 0x20
     6 00000DC9 B020                <2>  mov al, %2
     6 00000DCB E621                <2>  out %1, al
     7                              <1>         outp    0x21, 0x04
     7 00000DCD B004                <2>  mov al, %2
     7 00000DCF E621                <2>  out %1, al
     8                              <1>         outp    0x21, 0x05
     8 00000DD1 B005                <2>  mov al, %2
     8 00000DD3 E621                <2>  out %1, al
     9                              <1>         outp    0x21, 0xFF
     9 00000DD5 B0FF                <2>  mov al, %2
     9 00000DD7 E621                <2>  out %1, al
    10                              <1> 
    11                              <1>         outp    0xA0, 0x11
    11 00000DD9 B011                <2>  mov al, %2
    11 00000DDB E6A0                <2>  out %1, al
    12                              <1>         outp    0xA1, 0x28
    12 00000DDD B028                <2>  mov al, %2
    12 00000DDF E6A1                <2>  out %1, al
    13                              <1>         outp    0xA1, 0x02
    13 00000DE1 B002                <2>  mov al, %2
    13 00000DE3 E6A1                <2>  out %1, al
    14                              <1>         outp    0xA1, 0x01
    14 00000DE5 B001                <2>  mov al, %2
    14 00000DE7 E6A1                <2>  out %1, al
    15                              <1>         outp    0xA1, 0xFF
    15 00000DE9 B0FF                <2>  mov al, %2
    15 00000DEB E6A1                <2>  out %1, al
    16                              <1> 
    17 00000DED 58                  <1>         pop     eax
    18                              <1> 
    19 00000DEE C3                  <1>         ret
    98                                  %include    "../modules/protect/int_rtc.s"
     1                              <1> rtc_int_en:
     2                              <1> 
     3 00000DEF 55                  <1>         push    ebp
     4 00000DF0 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000DF2 50                  <1>         push    eax
     7                              <1> 
     8                              <1>         outp    0x70, 0x0B
     8 00000DF3 B00B                <2>  mov al, %2
     8 00000DF5 E670                <2>  out %1, al
     9                              <1> 
    10 00000DF7 E471                <1>         in      al, 0x71
    11 00000DF9 0A4508              <1>         or      al, [ebp + 8]
    12                              <1> 
    13 00000DFC E671                <1>         out     0x71, al
    14                              <1> 
    15 00000DFE 58                  <1>         pop     eax
    16                              <1> 
    17 00000DFF 89EC                <1>         mov     esp, ebp
    18 00000E01 5D                  <1>         pop     ebp
    19                              <1> 
    20 00000E02 C3                  <1>         ret
    21                              <1> 
    22                              <1> 
    23                              <1> int_rtc:
    24                              <1> 
    25 00000E03 60                  <1>         pusha
    26 00000E04 1E                  <1>         push    ds
    27 00000E05 06                  <1>         push    es
    28                              <1> 
    29 00000E06 66B81000            <1>         mov     ax, 0x0010
    30 00000E0A 8ED8                <1>         mov     ds, ax
    31 00000E0C 8EC0                <1>         mov     es, ax
    32                              <1> 
    33 00000E0E 68[04020000]E847FD- <1>         cdecl   rtc_get_time, RTC_TIME
    33 00000E16 FFFF6683C404        <1>
    34                              <1> 
    35                              <1>         outp    0x70, 0x0C
    35 00000E1C B00C                <2>  mov al, %2
    35 00000E1E E670                <2>  out %1, al
    36 00000E20 E471                <1>         in      al, 0x71
    37                              <1> 
    38                              <1>         outp    0xA0, 0x20
    38 00000E22 B020                <2>  mov al, %2
    38 00000E24 E6A0                <2>  out %1, al
    39                              <1>         outp    0x20, 0x20
    39 00000E26 B020                <2>  mov al, %2
    39 00000E28 E620                <2>  out %1, al
    40                              <1> 
    41 00000E2A 07                  <1>         pop     es
    42 00000E2B 1F                  <1>         pop     ds
    43 00000E2C 61                  <1>         popa
    44                              <1> 
    45 00000E2D CF                  <1>         iret
    99                                  %include    "../modules/protect/int_keyboard.s"
     1                              <1> int_keyboard:
     2                              <1> 
     3 00000E2E 60                  <1>         pusha
     4 00000E2F 1E                  <1>         push    ds
     5 00000E30 06                  <1>         push    es
     6                              <1> 
     7 00000E31 66B81000            <1>         mov     ax, 0x0010
     8 00000E35 8ED8                <1>         mov     ds, ax
     9 00000E37 8EC0                <1>         mov     es, ax
    10                              <1> 
    11 00000E39 E460                <1>         in      al, 0x60
    12                              <1> 
    13 00000E3B 5068[540E0000]E856- <1>         cdecl   ring_wr, _KEY_BUFF, eax
    13 00000E43 0000006683C408      <1>
    14                              <1> 
    15                              <1>         outp    0x20, 0x20
    15 00000E4A B020                <2>  mov al, %2
    15 00000E4C E620                <2>  out %1, al
    16                              <1> 
    17 00000E4E 07                  <1>         pop     es
    18 00000E4F 1F                  <1>         pop     ds
    19 00000E50 61                  <1>         popa
    20                              <1> 
    21 00000E51 CF                  <1>         iret
    22                              <1> 
    23 00000E52 00<rept>            <1> ALIGN 4, db 0
    24 00000E54 00<rept>            <1> _KEY_BUFF:  times ring_buff_size db 0
   100                                  %include    "../modules/protect/ring_buff.s"
     1                              <1> ring_rd:
     2                              <1> 
     3 00000E6C 55                  <1>         push    ebp
     4 00000E6D 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000E6F 53                  <1>         push    ebx
     7 00000E70 56                  <1>         push    esi
     8 00000E71 57                  <1>         push    edi
     9                              <1> 
    10 00000E72 8B7508              <1>         mov     esi, [ebp + 8]
    11 00000E75 8B7D0C              <1>         mov     edi, [ebp + 12]
    12                              <1> 
    13 00000E78 B800000000          <1>         mov     eax, 0
    14 00000E7D 8B1E                <1>         mov     ebx, [esi + ring_buff.rp]
    15 00000E7F 3B5E04              <1>         cmp     ebx, [esi + ring_buff.wp]
    16 00000E82 7411                <1>         je      .10E
    17                              <1> 
    18 00000E84 8A441E08            <1>         mov     al, [esi + ring_buff.item + ebx]
    19                              <1> 
    20 00000E88 8807                <1>         mov     [edi], al
    21                              <1> 
    22 00000E8A 43                  <1>         inc     ebx
    23 00000E8B 83E30F              <1>         and     ebx, RING_INDEX_MASK
    24 00000E8E 891E                <1>         mov     [esi + ring_buff.rp], ebx
    25                              <1> 
    26 00000E90 B801000000          <1>         mov     eax, 1
    27                              <1> .10E:
    28                              <1> 
    29 00000E95 5F                  <1>         pop     edi
    30 00000E96 5E                  <1>         pop     esi
    31 00000E97 5B                  <1>         pop     ebx
    32                              <1> 
    33 00000E98 89EC                <1>         mov     esp, ebp
    34 00000E9A 5D                  <1>         pop     ebp
    35                              <1> 
    36 00000E9B C3                  <1>         ret
    37                              <1> 
    38                              <1> 
    39                              <1> ring_wr:
    40                              <1> 
    41 00000E9C 55                  <1>         push    ebp
    42 00000E9D 89E5                <1>         mov     ebp, esp
    43                              <1> 
    44 00000E9F 53                  <1>         push    ebx
    45 00000EA0 51                  <1>         push    ecx
    46 00000EA1 56                  <1>         push    esi
    47                              <1> 
    48 00000EA2 8B7508              <1>         mov     esi, [ebp + 8]
    49                              <1> 
    50 00000EA5 B800000000          <1>         mov     eax, 0
    51 00000EAA 8B5E04              <1>         mov     ebx, [esi + ring_buff.wp]
    52 00000EAD 89D9                <1>         mov     ecx, ebx
    53 00000EAF 41                  <1>         inc     ecx
    54 00000EB0 83E10F              <1>         and     ecx, RING_INDEX_MASK
    55                              <1> 
    56 00000EB3 3B0E                <1>         cmp     ecx, [esi + ring_buff.rp]
    57 00000EB5 740F                <1>         je      .10E
    58                              <1> 
    59 00000EB7 8A450C              <1>         mov     al, [ebp + 12]
    60                              <1> 
    61 00000EBA 88441E08            <1>         mov     [esi + ring_buff.item + ebx], al
    62 00000EBE 894E04              <1>         mov     [esi + ring_buff.wp], ecx
    63 00000EC1 B801000000          <1>         mov     eax, 1
    64                              <1> .10E:
    65                              <1> 
    66 00000EC6 5E                  <1>         pop     esi
    67 00000EC7 59                  <1>         pop     ecx
    68 00000EC8 5B                  <1>         pop     ebx
    69                              <1> 
    70 00000EC9 89EC                <1>         mov     esp, ebp
    71 00000ECB 5D                  <1>         pop     ebp
    72                              <1> 
    73 00000ECC C3                  <1>         ret
    74                              <1> 
    75                              <1> 
    76                              <1> draw_key:
    77                              <1> 
    78 00000ECD 55                  <1>         push    ebp
    79 00000ECE 89E5                <1>         mov     ebp, esp
    80                              <1> 
    81 00000ED0 60                  <1>         pusha
    82                              <1> 
    83 00000ED1 8B5508              <1>         mov     edx, [ebp + 8]
    84 00000ED4 8B7D0C              <1>         mov     edi, [ebp + 12]
    85 00000ED7 8B7510              <1>         mov     esi, [ebp + 16]
    86                              <1> 
    87 00000EDA 8B1E                <1>         mov     ebx, [esi + ring_buff.rp]
    88 00000EDC 8D7608              <1>         lea     esi, [esi + ring_buff.item]
    89 00000EDF B910000000          <1>         mov     ecx, RING_ITEM_SIZE
    90                              <1> 
    91                              <1> .10L:
    92                              <1> 
    93 00000EE4 4B                  <1>         dec     ebx
    94 00000EE5 83E30F              <1>         and     ebx, RING_INDEX_MASK
    95 00000EE8 8A041E              <1>         mov     al, [esi + ebx]
    96                              <1> 
    97 00000EEB 6A046A106A0268-     <1>         cdecl   itoa, eax, .tmp, 2, 16, 0b0100
    97 00000EF2 [1C0F0000]50E8D9FB- <1>
    97 00000EFA FFFF6683C414        <1>
    98 00000F00 68[1C0F0000]6A0257- <1>         cdecl   draw_str, edx, edi, 0x02, .tmp
    98 00000F08 52E833F9FFFF6683C4- <1>
    98 00000F11 10                  <1>
    99                              <1> 
   100 00000F12 83C203              <1>         add     edx, 3
   101                              <1> 
   102 00000F15 E2CD                <1>         loop    .10L
   103                              <1> .10E:
   104                              <1> 
   105 00000F17 61                  <1>         popa
   106                              <1> 
   107 00000F18 89EC                <1>         mov     esp, ebp
   108 00000F1A 5D                  <1>         pop     ebp
   109                              <1> 
   110 00000F1B C3                  <1>         ret
   111                              <1> 
   112 00000F1C 2D2D2000            <1> .tmp    db "-- ", 0
   101                                  %include    "../modules/protect/timer.s"
     1                              <1> int_en_timer0:
     2                              <1> 
     3 00000F20 50                  <1>         push    eax
     4                              <1> 
     5                              <1>         outp    0x43, 0b_00_11_010_0
     5 00000F21 B034                <2>  mov al, %2
     5 00000F23 E643                <2>  out %1, al
     6                              <1>         outp    0x40, 0x9C
     6 00000F25 B09C                <2>  mov al, %2
     6 00000F27 E640                <2>  out %1, al
     7                              <1>         outp    0x40, 0x2E
     7 00000F29 B02E                <2>  mov al, %2
     7 00000F2B E640                <2>  out %1, al
     8                              <1> 
     9 00000F2D 58                  <1>         pop     eax
    10                              <1> 
    11 00000F2E C3                  <1>         ret
   102                                  %include    "../modules/protect/draw_rotation_bar.s"
     1                              <1> draw_rotation_bar:
     2                              <1> 
     3 00000F2F 50                  <1>         push    eax
     4                              <1> 
     5 00000F30 A1[54050000]        <1>         mov     eax, [TIMER_COUNT]
     6 00000F35 C1E804              <1>         shr     eax, 4
     7 00000F38 3B05[600F0000]      <1>         cmp     eax, [.index]
     8 00000F3E 741E                <1>         je      .10E
     9                              <1> 
    10 00000F40 A3[600F0000]        <1>         mov     [.index], eax
    11 00000F45 83E003              <1>         and     eax, 0x03
    12                              <1> 
    13 00000F48 8A80[640F0000]      <1>         mov     al, [.table + eax]
    14 00000F4E 506A0F6A1D6A00E8C1- <1>         cdecl   draw_char, 0, 29, 0x000F, eax
    14 00000F57 F7FFFF6683C410      <1>
    15                              <1> 
    16                              <1> .10E:
    17                              <1> 
    18 00000F5E 58                  <1>         pop     eax
    19                              <1> 
    20 00000F5F C3                  <1>         ret
    21                              <1> 
    22                              <1> ALIGN 4, db 0
    23 00000F60 00000000            <1> .index      dd 0
    24 00000F64 7C2F2D5C            <1> .table      db "|/-\"
   103                                  %include    "../modules/protect/call_gate.s"
     1                              <1> call_gate:
     2                              <1> 
     3 00000F68 55                  <1>         push    ebp
     4 00000F69 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000F6B 60                  <1>         pusha
     7 00000F6C 1E                  <1>         push    ds
     8 00000F6D 06                  <1>         push    es
     9                              <1> 
    10 00000F6E 66B81000            <1>         mov     ax, 0x0010
    11 00000F72 8ED8                <1>         mov     ds, ax
    12 00000F74 8EC0                <1>         mov     es, ax
    13                              <1> 
    14 00000F76 8B450C              <1>         mov     eax, dword [ebp + 12]
    15 00000F79 8B5D10              <1>         mov     ebx, dword [ebp + 16]
    16 00000F7C 8B4D14              <1>         mov     ecx, dword [ebp + 20]
    17 00000F7F 8B5518              <1>         mov     edx, dword [ebp + 24]
    18 00000F82 52515350E8B6F8FFFF- <1>         cdecl   draw_str, eax, ebx, ecx, edx
    18 00000F8B 6683C410            <1>
    19                              <1> 
    20 00000F8F 07                  <1>         pop     es
    21 00000F90 1F                  <1>         pop     ds
    22 00000F91 61                  <1>         popa
    23                              <1> 
    24 00000F92 89EC                <1>         mov     esp, ebp
    25 00000F94 5D                  <1>         pop     ebp
    26                              <1> 
    27 00000F95 CA1000              <1>         retf    4 * 4
   104                                  %include    "../modules/protect/trap_gate.s"
     1                              <1> trap_gate_81:
     2                              <1> 
     3 00000F98 50535251E87AF7FFFF- <1>         cdecl   draw_char, ecx, edx, ebx, eax
     3 00000FA1 6683C410            <1>
     4                              <1> 
     5 00000FA5 CF                  <1>         iret
     6                              <1> 
     7                              <1> 
     8                              <1> trap_gate_82:
     9                              <1> 
    10 00000FA6 535251E84CF9FFFF66- <1>         cdecl   draw_pixel, ecx, edx, ebx
    10 00000FAF 83C40C              <1>
    11                              <1> 
    12 00000FB2 CF                  <1>         iret
   105                                  %include    "../modules/protect/test_and_set.s"
     1                              <1> test_and_set:
     2                              <1> 
     3 00000FB3 55                  <1>         push    ebp
     4 00000FB4 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000FB6 50                  <1>         push    eax
     7 00000FB7 53                  <1>         push    ebx
     8                              <1> 
     9 00000FB8 B800000000          <1>         mov     eax, 0
    10 00000FBD 8B5D08              <1>         mov     ebx, [ebp + 8]
    11                              <1> .10L:
    12                              <1> 
    13 00000FC0 F00FAB03            <1>         lock bts [ebx], eax
    14 00000FC4 7307                <1>         jnc     .10E
    15                              <1> .12L:
    16                              <1> 
    17 00000FC6 0FA303              <1>         bt      [ebx], eax
    18 00000FC9 72FB                <1>         jc      .12L
    19                              <1> 
    20 00000FCB EBF3                <1>         jmp     .10L
    21                              <1> .10E:
    22                              <1> 
    23 00000FCD 5B                  <1>         pop     ebx
    24 00000FCE 58                  <1>         pop     eax
    25                              <1> 
    26 00000FCF 89EC                <1>         mov     esp, ebp
    27 00000FD1 5D                  <1>         pop     ebp
    28                              <1> 
    29 00000FD2 C3                  <1>         ret
   106                                  %include    "../modules/protect/int_nm.s"
     1                              <1> int_nm:
     2                              <1> 
     3 00000FD3 60                  <1>         pusha
     4 00000FD4 1E                  <1>         push    ds
     5 00000FD5 06                  <1>         push    es
     6                              <1> 
     7 00000FD6 66B81000            <1>         mov     ax, DS_KERNEL
     8 00000FDA 8ED8                <1>         mov     ds, ax
     9 00000FDC 8EC0                <1>         mov     es, ax
    10                              <1> 
    11 00000FDE 0F06                <1>         clts
    12                              <1> 
    13 00000FE0 8B3D[2C100000]      <1>         mov     edi, [.last_tss]
    14 00000FE6 0F00CE              <1>         str     esi
    15 00000FE9 83E6F8              <1>         and     esi, ~0x0007
    16                              <1> 
    17 00000FEC 83FF00              <1>         cmp     edi, 0
    18 00000FEF 7420                <1>         je      .10F
    19                              <1> 
    20 00000FF1 39FE                <1>         cmp     esi, edi
    21 00000FF3 741A                <1>         je      .12E
    22                              <1> 
    23 00000FF5 FA                  <1>         cli
    24                              <1> 
    25 00000FF6 89FB                <1>         mov     ebx, edi
    26 00000FF8 E833000000          <1>         call    get_tss_base
    27 00000FFD E841000000          <1>         call    save_fpu_context
    28                              <1> 
    29 00001002 89F3                <1>         mov     ebx, esi
    30 00001004 E827000000          <1>         call    get_tss_base
    31 00001009 E843000000          <1>         call    load_fpu_context
    32                              <1> 
    33 0000100E FB                  <1>         sti
    34                              <1> .12E:
    35 0000100F EB0E                <1>         jmp     .10E
    36                              <1> .10F:
    37                              <1> 
    38 00001011 FA                  <1>         cli
    39                              <1>         
    40 00001012 89F3                <1>         mov     ebx, esi
    41 00001014 E817000000          <1>         call    get_tss_base
    42 00001019 E833000000          <1>         call    load_fpu_context
    43                              <1> 
    44 0000101E FB                  <1>         sti
    45                              <1> .10E:
    46                              <1> 
    47 0000101F 8935[2C100000]      <1>         mov     [.last_tss], esi
    48                              <1> 
    49 00001025 07                  <1>         pop     es
    50 00001026 1F                  <1>         pop     ds
    51 00001027 61                  <1>         popa
    52                              <1> 
    53 00001028 CF                  <1>         iret
    54                              <1> 
    55 00001029 00<rept>            <1> ALIGN 4, db 0
    56 0000102C 00000000            <1> .last_tss:  dd      0
    57                              <1> 
    58                              <1> 
    59                              <1> get_tss_base:
    60 00001030 8B83[92040000]      <1>         mov     eax, [GDT + ebx + 2]
    61 00001036 C1E008              <1>         shl     eax, 8
    62 00001039 8A83[97040000]      <1>         mov     al, [GDT + ebx + 7]
    63 0000103F C1C808              <1>         ror     eax, 8
    64                              <1> 
    65 00001042 C3                  <1>         ret
    66                              <1> 
    67                              <1> 
    68                              <1> save_fpu_context:
    69 00001043 DD7068              <1>         fnsave  [eax + 104]
    70 00001046 C780D4000000010000- <1>         mov     [eax + 104 + 108], dword 1
    70 0000104F 00                  <1>
    71                              <1> 
    72 00001050 C3                  <1>         ret
    73                              <1> 
    74                              <1> 
    75                              <1> load_fpu_context:
    76 00001051 83B8D400000000      <1>         cmp     [eax + 104 + 108], dword 0
    77 00001058 7504                <1>         jne     .10F
    78 0000105A DBE3                <1>         fninit
    79 0000105C EB03                <1>         jmp     .10E
    80                              <1> .10F:
    81                              <1> 
    82 0000105E DD6068              <1>         frstor  [eax + 104]
    83                              <1> .10E:
    84 00001061 C3                  <1>         ret
   107                                  
   108 00001062 00<rept>                        times KERNEL_SIZE - ($ - $$) db 0x00
