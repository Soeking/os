     1                                  %define USE_SYSTEM_CALL
     2                                  %define USE_TEST_AND_SET
     3                                  
     4                                  %include    "../include/define.s"
     1                              <1>         BOOT_LOAD           equ     0x7C00
     2                              <1> 
     3                              <1>         BOOT_SIZE           equ     (1024 * 8)
     4                              <1>         SECT_SIZE           equ     (512)
     5                              <1>         BOOT_SECT           equ     (BOOT_SIZE / SECT_SIZE)
     6                              <1>         BOOT_END            equ     (BOOT_LOAD + BOOT_SIZE)
     7                              <1> 
     8                              <1>         E820_RECORD_SIZE    equ     20
     9                              <1> 
    10                              <1>         KERNEL_LOAD         equ     0x0010_1000
    11                              <1> 
    12                              <1>         KERNEL_SIZE         equ     (1024 * 8)
    13                              <1>         KERNEL_SECT         equ     (KERNEL_SIZE / SECT_SIZE)
    14                              <1> 
    15                              <1>         VECT_BASE           equ     0x0010_0000
    16                              <1> 
    17                              <1> 
    18                              <1>         STACK_BASE          equ     0x0010_3000
    19                              <1>         STACK_SIZE          equ     1024
    20                              <1> 
    21                              <1>         SP_TASK_0           equ     STACK_BASE + (STACK_SIZE * 1)
    22                              <1>         SP_TASK_1           equ     STACK_BASE + (STACK_SIZE * 2)
    23                              <1>         SP_TASK_2           equ     STACK_BASE + (STACK_SIZE * 3)
    24                              <1>         SP_TASK_3           equ     STACK_BASE + (STACK_SIZE * 4)
     5                                  %include    "../include/macro.s"
     1                              <1> %macro  cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep  %0 -1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate -1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if  1 < %0
    12                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> %macro  set_vect 1-*.nolist
    18                              <1> 		push	eax
    19                              <1> 		push	edi
    20                              <1> 
    21                              <1> 		mov		edi, VECT_BASE + (%1 * 8)
    22                              <1> 		mov		eax, %2
    23                              <1> 
    24                              <1> 	%if 3 == %0
    25                              <1> 		mov		[edi + 4], %3
    26                              <1> 	%endif
    27                              <1> 
    28                              <1>         mov		[edi + 0], ax
    29                              <1> 		shr		eax, 16 
    30                              <1> 		mov		[edi + 6], ax
    31                              <1> 
    32                              <1> 		pop		edi
    33                              <1> 		pop		eax
    34                              <1> %endmacro
    35                              <1> 
    36                              <1> %macro  outp 2
    37                              <1>         mov     al, %2
    38                              <1>         out     %1, al
    39                              <1> %endmacro
    40                              <1> 
    41                              <1> %macro  set_desc 2-*
    42                              <1>         push    eax
    43                              <1>         push    edi
    44                              <1> 
    45                              <1>         mov     edi, %1
    46                              <1>         mov     eax, %2
    47                              <1> 
    48                              <1>     %if 3 == %0
    49                              <1>         mov     [edi + 0], %3
    50                              <1>     %endif
    51                              <1> 
    52                              <1>         mov     [edi + 2], ax
    53                              <1>         shr     eax, 16
    54                              <1>         mov     [edi + 4], al
    55                              <1>         mov     [edi + 7], ah
    56                              <1> 
    57                              <1>         pop     edi
    58                              <1>         pop     eax
    59                              <1> %endmacro
    60                              <1> 
    61                              <1> %macro  set_gate 2-*
    62                              <1>         push    eax
    63                              <1>         push    edi
    64                              <1> 
    65                              <1>         mov     edi, %1
    66                              <1>         mov     eax, %2
    67                              <1> 
    68                              <1>         mov     [edi + 0], ax
    69                              <1>         shr     eax, 16
    70                              <1>         mov     [edi + 6], ax
    71                              <1> 
    72                              <1>         pop     edi
    73                              <1>         pop     eax
    74                              <1> %endmacro
    75                              <1> 
    76                              <1> struc drive
    77 00000000 <res 00000002>      <1>         .no     resw    1
    78 00000002 <res 00000002>      <1>         .cyln   resw    1
    79 00000004 <res 00000002>      <1>         .head   resw    1
    80 00000006 <res 00000002>      <1>         .sect   resw    1
    81                              <1> endstruc
    82                              <1> 
    83                              <1> %define		RING_ITEM_SIZE		(1 << 4)
    84                              <1> %define		RING_INDEX_MASK		(RING_ITEM_SIZE - 1)
    85                              <1> 
    86                              <1> struc ring_buff
    87 00000000 <res 00000004>      <1>         .rp     resd    1
    88 00000004 <res 00000004>      <1>         .wp     resd    1
    89 00000008 <res 00000010>      <1>         .item   resb    RING_ITEM_SIZE
    90                              <1> endstruc
     6                                  
     7                                          ORG     KERNEL_LOAD
     8                                  
     9                                  [BITS 32]
    10                                  
    11                                  kernel:
    12                                  
    13 00000000 BE007E0000                      mov     esi, BOOT_LOAD + SECT_SIZE
    14 00000005 0FB706                          movzx   eax, word [esi + 0]
    15 00000008 0FB75E02                        movzx   ebx, word [esi + 2]
    16 0000000C C1E004                          shl     eax, 4
    17 0000000F 01D8                            add     eax, ebx
    18 00000011 A3[1C020000]                    mov     [FONT_ADR], eax
    19                                  
    20                                          set_desc    GDT.tss_0, TSS_0
    20 00000016 50                  <1>  push eax
    20 00000017 57                  <1>  push edi
    20                              <1> 
    20 00000018 BF[A4050000]        <1>  mov edi, %1
    20 0000001D B8[24020000]        <1>  mov eax, %2
    20                              <1> 
    20                              <1>  %if 3 == %0
    20                              <1>  mov [edi + 0], %3
    20                              <1>  %endif
    20                              <1> 
    20 00000022 66894702            <1>  mov [edi + 2], ax
    20 00000026 C1E810              <1>  shr eax, 16
    20 00000029 884704              <1>  mov [edi + 4], al
    20 0000002C 886707              <1>  mov [edi + 7], ah
    20                              <1> 
    20 0000002F 5F                  <1>  pop edi
    20 00000030 58                  <1>  pop eax
    21                                          set_desc    GDT.tss_1, TSS_1
    21 00000031 50                  <1>  push eax
    21 00000032 57                  <1>  push edi
    21                              <1> 
    21 00000033 BF[AC050000]        <1>  mov edi, %1
    21 00000038 B8[FC020000]        <1>  mov eax, %2
    21                              <1> 
    21                              <1>  %if 3 == %0
    21                              <1>  mov [edi + 0], %3
    21                              <1>  %endif
    21                              <1> 
    21 0000003D 66894702            <1>  mov [edi + 2], ax
    21 00000041 C1E810              <1>  shr eax, 16
    21 00000044 884704              <1>  mov [edi + 4], al
    21 00000047 886707              <1>  mov [edi + 7], ah
    21                              <1> 
    21 0000004A 5F                  <1>  pop edi
    21 0000004B 58                  <1>  pop eax
    22                                          set_desc    GDT.tss_2, TSS_2
    22 0000004C 50                  <1>  push eax
    22 0000004D 57                  <1>  push edi
    22                              <1> 
    22 0000004E BF[B4050000]        <1>  mov edi, %1
    22 00000053 B8[D4030000]        <1>  mov eax, %2
    22                              <1> 
    22                              <1>  %if 3 == %0
    22                              <1>  mov [edi + 0], %3
    22                              <1>  %endif
    22                              <1> 
    22 00000058 66894702            <1>  mov [edi + 2], ax
    22 0000005C C1E810              <1>  shr eax, 16
    22 0000005F 884704              <1>  mov [edi + 4], al
    22 00000062 886707              <1>  mov [edi + 7], ah
    22                              <1> 
    22 00000065 5F                  <1>  pop edi
    22 00000066 58                  <1>  pop eax
    23                                          set_desc    GDT.tss_3, TSS_3
    23 00000067 50                  <1>  push eax
    23 00000068 57                  <1>  push edi
    23                              <1> 
    23 00000069 BF[BC050000]        <1>  mov edi, %1
    23 0000006E B8[AC040000]        <1>  mov eax, %2
    23                              <1> 
    23                              <1>  %if 3 == %0
    23                              <1>  mov [edi + 0], %3
    23                              <1>  %endif
    23                              <1> 
    23 00000073 66894702            <1>  mov [edi + 2], ax
    23 00000077 C1E810              <1>  shr eax, 16
    23 0000007A 884704              <1>  mov [edi + 4], al
    23 0000007D 886707              <1>  mov [edi + 7], ah
    23                              <1> 
    23 00000080 5F                  <1>  pop edi
    23 00000081 58                  <1>  pop eax
    24                                  
    25                                          set_gate    GDT.call_gate, call_gate
    25 00000082 50                  <1>  push eax
    25 00000083 57                  <1>  push edi
    25                              <1> 
    25 00000084 BF[C4050000]        <1>  mov edi, %1
    25 00000089 B8[58110000]        <1>  mov eax, %2
    25                              <1> 
    25 0000008E 668907              <1>  mov [edi + 0], ax
    25 00000091 C1E810              <1>  shr eax, 16
    25 00000094 66894706            <1>  mov [edi + 6], ax
    25                              <1> 
    25 00000098 5F                  <1>  pop edi
    25 00000099 58                  <1>  pop eax
    26                                  
    27                                          set_desc    GDT.ldt, LDT, word LDT_LIMIT
    27 0000009A 50                  <1>  push eax
    27 0000009B 57                  <1>  push edi
    27                              <1> 
    27 0000009C BF[9C050000]        <1>  mov edi, %1
    27 000000A1 B8[D2050000]        <1>  mov eax, %2
    27                              <1> 
    27                              <1>  %if 3 == %0
    27 000000A6 66C7074700          <1>  mov [edi + 0], %3
    27                              <1>  %endif
    27                              <1> 
    27 000000AB 66894702            <1>  mov [edi + 2], ax
    27 000000AF C1E810              <1>  shr eax, 16
    27 000000B2 884704              <1>  mov [edi + 4], al
    27 000000B5 886707              <1>  mov [edi + 7], ah
    27                              <1> 
    27 000000B8 5F                  <1>  pop edi
    27 000000B9 58                  <1>  pop eax
    28                                  
    29 000000BA 0F0115[CC050000]                lgdt    [GDTR]
    30                                  
    31 000000C1 BC00341000                      mov     esp, SP_TASK_0
    32                                  
    33 000000C6 66B82000                        mov     ax, SS_TASK_0
    34 000000CA 0F00D8                          ltr     ax
    35                                  
    36 000000CD E85C0D0000                      cdecl   init_int
    37 000000D2 E8DD0E0000                      cdecl   init_pic
    38                                  
    39 000000D7 5057BF00001000B8-               set_vect    0x00, int_zero_div
    39 000000DF [960F0000]668907C1-
    39 000000E7 E810668947065F58   
    40 000000EF 5057BF38001000B8-               set_vect    0x07, int_nm
    40 000000F7 [C3110000]668907C1-
    40 000000FF E810668947065F58   
    41 00000107 5057BF00011000B8-               set_vect    0x20, int_timer
    41 0000010F [1A060000]668907C1-
    41 00000117 E810668947065F58   
    42 0000011F 5057BF08011000B8-               set_vect    0x21, int_keyboard
    42 00000127 [1E100000]668907C1-
    42 0000012F E810668947065F58   
    43 00000137 5057BF40011000B8-               set_vect    0x28, int_rtc
    43 0000013F [F30F0000]668907C1-
    43 00000147 E810668947065F58   
    44 0000014F 5057BF08041000B8-               set_vect    0x81, trap_gate_81, word 0xEF00
    44 00000157 [88110000]66C74704-
    44 0000015F 00EF668907C1E81066-
    44 00000168 8947065F58         
    45 0000016D 5057BF10041000B8-               set_vect    0x82, trap_gate_82, word 0xEF00
    45 00000175 [96110000]66C74704-
    45 0000017D 00EF668907C1E81066-
    45 00000186 8947065F58         
    46                                  
    47 0000018B 6A10E84D0E00006683-             cdecl   rtc_int_en, 0x10
    47 00000194 C404               
    48 00000196 E8750F0000                      cdecl   int_en_timer0
    49                                  
    50                                          outp    0x21, 0b1111_1000
    50 0000019B B0F8                <1>  mov al, %2
    50 0000019D E621                <1>  out %1, al
    51                                          outp    0xA1, 0b1111_1110
    51 0000019F B0FE                <1>  mov al, %2
    51 000001A1 E6A1                <1>  out %1, al
    52                                  
    53 000001A3 FB                              sti
    54                                  
    55 000001A4 6A0D6A3FE83F080000-             cdecl   draw_font, 63, 13
    55 000001AD 6683C408           
    56 000001B1 6A046A3FE8B5080000-             cdecl   draw_color_bar, 63, 4
    56 000001BA 6683C408           
    57 000001BE 68[06020000]680F01-             cdecl   draw_str, 25, 14, 0x010F, .s0
    57 000001C6 00006A0E6A19E86008-
    57 000001CF 00006683C410       
    58                                  
    59                                  .10L:
    60                                  
    61 000001D5 E8450F0000                      cdecl   draw_rotation_bar
    62                                  
    63 000001DA 68[18020000]68-                 cdecl   ring_rd, _KEY_BUFF, .int_key
    63 000001E0 [44100000]E8730E00-
    63 000001E8 006683C408         
    64 000001ED 83F800                          cmp     eax, 0
    65 000001F0 7412                            je      .10E
    66                                  
    67 000001F2 68[44100000]6A1D6A-             cdecl   draw_key, 2, 29, _KEY_BUFF
    67 000001FA 02E8BD0E00006683C4-
    67 00000203 0C                 
    68                                  .10E:
    69                                  
    70 00000204 EBCF                            jmp     .10L
    71                                  
    72 00000206 2048656C6C6F2C206B-     .s0 	db	" Hello, kernel! ", 0
    72 0000020F 65726E656C212000   
    73                                  
    74 00000217 00                      ALIGN 4, db 0
    75 00000218 00000000                .int_key    dd 0
    76                                  
    77                                  ALIGN 4, db 0
    78 0000021C 00000000                FONT_ADR:   dd 0
    79 00000220 00000000                RTC_TIME:   dd 0
    80                                  
    81                                  %include    "descriptor.s"
     1                              <1> TSS_0:
     2 00000224 00000000            <1> .link:          dd  0
     3 00000228 00321000            <1> .esp0:          dd  SP_TASK_0 - 512
     4 0000022C 10000000            <1> .ss0:           dd  DS_KERNEL
     5 00000230 00000000            <1> .esp1:          dd  0
     6 00000234 00000000            <1> .ss1:           dd  0
     7 00000238 00000000            <1> .esp2:          dd  0
     8 0000023C 00000000            <1> .ss2:           dd  0
     9 00000240 00000000            <1> .cr3:           dd  0
    10 00000244 00000000            <1> .eip:           dd  0
    11 00000248 00000000            <1> .eflags:        dd  0
    12 0000024C 00000000            <1> .eax:           dd  0
    13 00000250 00000000            <1> .ecx:           dd  0
    14 00000254 00000000            <1> .edx:           dd  0
    15 00000258 00000000            <1> .ebx:           dd  0
    16 0000025C 00000000            <1> .esp:           dd  0
    17 00000260 00000000            <1> .ebp:           dd  0
    18 00000264 00000000            <1> .esi:           dd  0
    19 00000268 00000000            <1> .edi:           dd  0
    20 0000026C 00000000            <1> .es:            dd  0
    21 00000270 00000000            <1> .cs:            dd  0
    22 00000274 00000000            <1> .ss:            dd  0
    23 00000278 00000000            <1> .ds:            dd  0
    24 0000027C 00000000            <1> .fs:            dd  0
    25 00000280 00000000            <1> .gs:            dd  0
    26 00000284 00000000            <1> .ldt:           dd  0
    27 00000288 00000000            <1> .io:            dd  0
    28 0000028C 00<rept>            <1> .fp_sava:   times 108 + 4 db 0
    29                              <1> 
    30                              <1> TSS_1:
    31 000002FC 00000000            <1> .link:          dd  0
    32 00000300 00361000            <1> .esp0:          dd  SP_TASK_1 - 512
    33 00000304 10000000            <1> .ss0:           dd  DS_KERNEL
    34 00000308 00000000            <1> .esp1:          dd  0
    35 0000030C 00000000            <1> .ss1:           dd  0
    36 00000310 00000000            <1> .esp2:          dd  0
    37 00000314 00000000            <1> .ss2:           dd  0
    38 00000318 00000000            <1> .cr3:           dd  0
    39 0000031C [74060000]          <1> .eip:           dd  task_1
    40 00000320 02020000            <1> .eflags:        dd  0x0202
    41 00000324 00000000            <1> .eax:           dd  0
    42 00000328 00000000            <1> .ecx:           dd  0
    43 0000032C 00000000            <1> .edx:           dd  0
    44 00000330 00000000            <1> .ebx:           dd  0
    45 00000334 00381000            <1> .esp:           dd  SP_TASK_1
    46 00000338 00000000            <1> .ebp:           dd  0
    47 0000033C 00000000            <1> .esi:           dd  0
    48 00000340 00000000            <1> .edi:           dd  0
    49 00000344 27000000            <1> .es:            dd  DS_TASK_1
    50 00000348 1F000000            <1> .cs:            dd  CS_TASK_1
    51 0000034C 27000000            <1> .ss:            dd  DS_TASK_1
    52 00000350 27000000            <1> .ds:            dd  DS_TASK_1
    53 00000354 27000000            <1> .fs:            dd  DS_TASK_1
    54 00000358 27000000            <1> .gs:            dd  DS_TASK_1
    55 0000035C 18000000            <1> .ldt:           dd  SS_LDT
    56 00000360 00000000            <1> .io:            dd  0
    57 00000364 00<rept>            <1> .fp_save:   times 108 + 4 db 0
    58                              <1> 
    59                              <1> TSS_2:
    60 000003D4 00000000            <1> .link:          dd  0
    61 000003D8 003A1000            <1> .esp0:          dd  SP_TASK_2 - 512
    62 000003DC 10000000            <1> .ss0:           dd  DS_KERNEL
    63 000003E0 00000000            <1> .esp1:          dd  0
    64 000003E4 00000000            <1> .ss1:           dd  0
    65 000003E8 00000000            <1> .esp2:          dd  0
    66 000003EC 00000000            <1> .ss2:           dd  0
    67 000003F0 00000000            <1> .cr3:           dd  0
    68 000003F4 [A9060000]          <1> .eip:           dd  task_2
    69 000003F8 02020000            <1> .eflags:        dd  0x0202
    70 000003FC 00000000            <1> .eax:           dd  0
    71 00000400 00000000            <1> .ecx:           dd  0
    72 00000404 00000000            <1> .edx:           dd  0
    73 00000408 00000000            <1> .ebx:           dd  0
    74 0000040C 003C1000            <1> .esp:           dd  SP_TASK_2
    75 00000410 00000000            <1> .ebp:           dd  0
    76 00000414 00000000            <1> .esi:           dd  0
    77 00000418 00000000            <1> .edi:           dd  0
    78 0000041C 37000000            <1> .es:            dd  DS_TASK_2
    79 00000420 2F000000            <1> .cs:            dd  CS_TASK_2
    80 00000424 37000000            <1> .ss:            dd  DS_TASK_2
    81 00000428 37000000            <1> .ds:            dd  DS_TASK_2
    82 0000042C 37000000            <1> .fs:            dd  DS_TASK_2
    83 00000430 37000000            <1> .gs:            dd  DS_TASK_2
    84 00000434 18000000            <1> .ldt:           dd  SS_LDT
    85 00000438 00000000            <1> .io:            dd  0
    86 0000043C 00<rept>            <1> .fp_save:   times 108 + 4 db 0
    87                              <1> 
    88                              <1> TSS_3:
    89 000004AC 00000000            <1> .link:          dd  0
    90 000004B0 003E1000            <1> .esp0:          dd  SP_TASK_3 - 512
    91 000004B4 10000000            <1> .ss0:           dd  DS_KERNEL
    92 000004B8 00000000            <1> .esp1:          dd  0
    93 000004BC 00000000            <1> .ss1:           dd  0
    94 000004C0 00000000            <1> .esp2:          dd  0
    95 000004C4 00000000            <1> .ss2:           dd  0
    96 000004C8 00000000            <1> .cr3:           dd  0
    97 000004CC [84070000]          <1> .eip:           dd  task_3
    98 000004D0 02020000            <1> .eflags:        dd  0x0202
    99 000004D4 00000000            <1> .eax:           dd  0
   100 000004D8 00000000            <1> .ecx:           dd  0
   101 000004DC 00000000            <1> .edx:           dd  0
   102 000004E0 00000000            <1> .ebx:           dd  0
   103 000004E4 00401000            <1> .esp:           dd  SP_TASK_3
   104 000004E8 00000000            <1> .ebp:           dd  0
   105 000004EC 00000000            <1> .esi:           dd  0
   106 000004F0 00000000            <1> .edi:           dd  0
   107 000004F4 47000000            <1> .es:            dd  DS_TASK_3
   108 000004F8 3F000000            <1> .cs:            dd  CS_TASK_3
   109 000004FC 47000000            <1> .ss:            dd  DS_TASK_3
   110 00000500 47000000            <1> .ds:            dd  DS_TASK_3
   111 00000504 47000000            <1> .fs:            dd  DS_TASK_3
   112 00000508 47000000            <1> .gs:            dd  DS_TASK_3
   113 0000050C 18000000            <1> .ldt:           dd  SS_LDT
   114 00000510 00000000            <1> .io:            dd  0
   115 00000514 00<rept>            <1> .fp_save:   times 108 + 4 db 0
   116                              <1> 
   117 00000584 0000000000000000    <1> GDT:            dq  0x0000000000000000
   118 0000058C FFFF0000009ACF00    <1> .cs_kernel:     dq  0x00CF9A000000FFFF
   119 00000594 FFFF00000092CF00    <1> .ds_kernel:     dq  0x00CF92000000FFFF
   120 0000059C 0000000000820000    <1> .ldt            dq  0x0000820000000000
   121 000005A4 6700000000890000    <1> .tss_0:         dq  0x0000890000000067
   122 000005AC 6700000000890000    <1> .tss_1:         dq  0x0000890000000067
   123 000005B4 6700000000890000    <1> .tss_2:         dq  0x0000890000000067
   124 000005BC 6700000000890000    <1> .tss_3:         dq  0x0000890000000067
   125 000005C4 0000080004EC0000    <1> .call_gate:     dq  0x0000EC0400080000
   126                              <1> .end:
   127                              <1> 
   128                              <1> CS_KERNEL       equ .cs_kernel  - GDT
   129                              <1> DS_KERNEL       equ .ds_kernel  - GDT
   130                              <1> SS_LDT          equ .ldt        - GDT
   131                              <1> SS_TASK_0       equ .tss_0      - GDT
   132                              <1> SS_TASK_1       equ .tss_1      - GDT
   133                              <1> SS_TASK_2       equ .tss_2      - GDT
   134                              <1> SS_TASK_3       equ .tss_3      - GDT
   135                              <1> SS_GATE_0       equ .call_gate  - GDT
   136                              <1> 
   137 000005CC 4700                <1> GDTR:   dw      GDT.end - GDT - 1
   138 000005CE [84050000]          <1>         dd      GDT
   139                              <1> 
   140 000005D2 0000000000000000    <1> LDT:            dq  0x0000000000000000
   141 000005DA FFFF0000009ACF00    <1> .cs_task_0:     dq  0x00CF9A000000FFFF
   142 000005E2 FFFF00000092CF00    <1> .ds_task_0:     dq  0x00CF92000000FFFF
   143 000005EA FFFF000000FACF00    <1> .cs_task_1:     dq  0x00CFFA000000FFFF
   144 000005F2 FFFF000000F2CF00    <1> .ds_task_1:     dq  0x00CFF2000000FFFF
   145 000005FA FFFF000000FACF00    <1> .cs_task_2:     dq  0x00CFFA000000FFFF
   146 00000602 FFFF000000F2CF00    <1> .ds_task_2:     dq  0x00CFF2000000FFFF
   147 0000060A FFFF000000FACF00    <1> .cs_task_3:     dq  0x00CFFA000000FFFF
   148 00000612 FFFF000000F2CF00    <1> .ds_task_3:     dq  0x00CFF2000000FFFF
   149                              <1> .end:
   150                              <1> 
   151                              <1> CS_TASK_0       equ (.cs_task_0 - LDT) | 4
   152                              <1> DS_TASK_0       equ (.ds_task_0 - LDT) | 4
   153                              <1> CS_TASK_1       equ (.cs_task_1 - LDT) | 4 | 3
   154                              <1> DS_TASK_1       equ (.ds_task_1 - LDT) | 4 | 3
   155                              <1> CS_TASK_2       equ (.cs_task_2 - LDT) | 4 | 3
   156                              <1> DS_TASK_2       equ (.ds_task_2 - LDT) | 4 | 3
   157                              <1> CS_TASK_3       equ (.cs_task_3 - LDT) | 4 | 3
   158                              <1> DS_TASK_3       equ (.ds_task_3 - LDT) | 4 | 3
   159                              <1> 
   160                              <1> LDT_LIMIT       equ .end        - LDT - 1
    82                                  %include    "modules/int_timer.s"
     1                              <1> int_timer:
     2                              <1> 
     3 0000061A 60                  <1>         pusha
     4 0000061B 1E                  <1>         push    ds
     5 0000061C 06                  <1>         push    es
     6                              <1> 
     7 0000061D 66B81000            <1>         mov     ax, 0x0010
     8 00000621 8ED8                <1>         mov     ds, ax
     9 00000623 8EC0                <1>         mov     es, ax
    10                              <1> 
    11 00000625 FF05[70060000]      <1>         inc     dword [TIMER_COUNT]
    12                              <1> 
    13                              <1>         outp    0x20, 0x20
    13 0000062B B020                <2>  mov al, %2
    13 0000062D E620                <2>  out %1, al
    14                              <1> 
    15 0000062F 660F00C8            <1>         str     ax
    16 00000633 6683F820            <1>         cmp     ax, SS_TASK_0
    17 00000637 7415                <1>         je      .11L
    18 00000639 6683F828            <1>         cmp     ax, SS_TASK_1
    19 0000063D 7418                <1>         je      .12L
    20 0000063F 6683F830            <1>         cmp     ax, SS_TASK_2
    21 00000643 741B                <1>         je      .13L
    22                              <1> 
    23 00000645 EA000000002000      <1>         jmp     SS_TASK_0:0
    24 0000064C EB1B                <1>         jmp     .10E
    25                              <1> 
    26                              <1> .11L:
    27 0000064E EA000000002800      <1>         jmp     SS_TASK_1:0
    28 00000655 EB12                <1>         jmp     .10E
    29                              <1> 
    30                              <1> .12L:
    31 00000657 EA000000003000      <1>         jmp     SS_TASK_2:0
    32 0000065E EB09                <1>         jmp     .10E
    33                              <1> 
    34                              <1> .13L:
    35 00000660 EA000000003800      <1>         jmp     SS_TASK_3:0
    36 00000667 EB00                <1>         jmp     .10E
    37                              <1> 
    38                              <1> .10E:
    39                              <1> 
    40 00000669 07                  <1>         pop     es
    41 0000066A 1F                  <1>         pop     ds
    42 0000066B 61                  <1>         popa
    43                              <1> 
    44 0000066C CF                  <1>         iret
    45                              <1> 
    46 0000066D 00<rept>            <1> ALIGN 4, db 0
    47 00000670 00000000            <1> TIMER_COUNT     dd 0
    83                                  %include    "tasks/task_1.s"
     1                              <1> task_1:
     2                              <1> 
     3 00000674 68[A2060000]6A076A- <1>         cdecl   draw_str, 63, 0, 0x07, .s0
     3 0000067C 006A3FE8AD03000066- <1>
     3 00000685 83C410              <1>
     4                              <1> .10L:
     5                              <1> 
     6 00000688 A1[20020000]        <1>         mov     eax, [RTC_TIME]
     7 0000068D 5068000700006A006A- <1>         cdecl   draw_time, 72, 0, 0x0700, eax
     7 00000696 48E8F40600006683C4- <1>
     7 0000069F 10                  <1>
     8                              <1> 
     9 000006A0 EBE6                <1>         jmp     .10L
    10                              <1> 
    11 000006A2 5461736B2D3100      <1> .s0     db  "Task-1", 0
    84                                  %include    "tasks/task_2.s"
     1                              <1> task_2:
     2                              <1> 
     3 000006A9 68[76070000]6A076A- <1>         cdecl   draw_str, 63, 1, 0x07, .s0
     3 000006B1 016A3FE87803000066- <1>
     3 000006BA 83C410              <1>
     4                              <1> 
     5 000006BD DB05[64070000]      <1>         fild    dword [.c1000]
     6 000006C3 D9EB                <1>         fldpi
     7 000006C5 DA35[68070000]      <1>         fidiv   dword [.c180]
     8 000006CB D9EB                <1>         fldpi
     9 000006CD DCC0                <1>         fadd    st0, st0
    10 000006CF D9EE                <1>         fldz
    11                              <1> .10L:
    12                              <1> 
    13 000006D1 D8C2                <1>         fadd    st0, st2
    14 000006D3 D9F8                <1>         fprem
    15 000006D5 D9C0                <1>         fld     st0
    16 000006D7 D9FE                <1>         fsin
    17 000006D9 D8CC                <1>         fmul    st0, st4
    18                              <1> 
    19 000006DB DF35[6C070000]      <1>         fbstp   [.bcd]
    20                              <1> 
    21 000006E1 A1[6C070000]        <1>         mov     eax, [.bcd]
    22 000006E6 89C3                <1>         mov     ebx, eax
    23                              <1> 
    24 000006E8 250F0F0000          <1>         and     eax, 0x0F0F
    25 000006ED 0D30300000          <1>         or      eax, 0x3030
    26                              <1> 
    27 000006F2 C1EB04              <1>         shr     ebx, 4
    28 000006F5 81E30F0F0000        <1>         and     ebx, 0x0F0F
    29 000006FB 81CB30300000        <1>         or      ebx, 0x3030
    30                              <1> 
    31 00000701 883D[7E070000]      <1>         mov     [.s2 + 0], bh
    32 00000707 8825[80070000]      <1>         mov     [.s3 + 0], ah
    33 0000070D 881D[81070000]      <1>         mov     [.s3 + 1], bl
    34 00000713 A2[82070000]        <1>         mov     [.s3 + 2], al
    35                              <1> 
    36 00000718 B807000000          <1>         mov     eax, 7
    37 0000071D 0FA305[75070000]    <1>         bt      [.bcd + 9], eax
    38 00000724 7209                <1>         jc      .10F
    39                              <1> 
    40 00000726 C605[7D070000]2B    <1>         mov     [.s1 + 0], byte '+'
    41 0000072D EB07                <1>         jmp     .10E
    42                              <1> .10F:
    43                              <1> 
    44 0000072F C605[7D070000]2D    <1>         mov     [.s1 + 0], byte '-'
    45                              <1> .10E:
    46                              <1> 
    47 00000736 68[7D070000]6A076A- <1>         cdecl   draw_str, 72, 1, 0x07, .s1
    47 0000073E 016A48E8EB02000066- <1>
    47 00000747 83C410              <1>
    48                              <1> 
    49 0000074A B914000000          <1>         mov     ecx, 20
    50                              <1> 
    51                              <1> .20L:
    52 0000074F A1[70060000]        <1>         mov     eax, [TIMER_COUNT]
    53                              <1> .21L:
    54 00000754 3905[70060000]      <1>         cmp     [TIMER_COUNT], eax
    55 0000075A 74F8                <1>         je      .21L
    56 0000075C E2F1                <1>         loop    .20L
    57                              <1> 
    58 0000075E E96EFFFFFF          <1>         jmp     .10L
    59                              <1> 
    60 00000763 00                  <1> ALIGN 4, db 0
    61 00000764 E8030000            <1> .c1000      dd  1000
    62 00000768 B4000000            <1> .c180       dd  180
    63                              <1> 
    64 0000076C 00<rept>            <1> .bcd:   times 10 db 0x00
    65                              <1> 
    66 00000776 5461736B2D3200      <1> .s0     db  "Task-2", 0
    67 0000077D 2D                  <1> .s1     db  "-"
    68 0000077E 302E                <1> .s2     db  "0."
    69 00000780 30303000            <1> .s3     db  "000", 0
    85                                  %include    "tasks/task_3.s"
     1                              <1> task_3:
     2                              <1> 
     3 00000784 68[4A080000]6A076A- <1>         cdecl   draw_str, 63, 2, 0x07, .s0
     3 0000078C 026A3FE89D02000066- <1>
     3 00000795 83C410              <1>
     4                              <1> 
     5 00000798 DB05[38080000]      <1>         fild    dword [.c1000]
     6 0000079E D9EB                <1>         fldpi
     7 000007A0 DA35[3C080000]      <1>         fidiv   dword [.c180]
     8 000007A6 D9EB                <1>         fldpi
     9 000007A8 DCC0                <1>         fadd    st0, st0
    10 000007AA D9EE                <1>         fldz
    11                              <1> .10L:
    12                              <1> 
    13 000007AC D8C2                <1>         fadd    st0, st2
    14 000007AE D9F8                <1>         fprem
    15 000007B0 D9C0                <1>         fld     st0
    16 000007B2 D9FF                <1>         fcos
    17 000007B4 D8CC                <1>         fmul    st0, st4
    18                              <1> 
    19 000007B6 DF35[40080000]      <1>         fbstp   [.bcd]
    20                              <1> 
    21 000007BC A1[40080000]        <1>         mov     eax, [.bcd]
    22 000007C1 89C3                <1>         mov     ebx, eax
    23                              <1> 
    24 000007C3 250F0F0000          <1>         and     eax, 0x0F0F
    25 000007C8 0D30300000          <1>         or      eax, 0x3030
    26                              <1> 
    27 000007CD C1EB04              <1>         shr     ebx, 4
    28 000007D0 81E30F0F0000        <1>         and     ebx, 0x0F0F
    29 000007D6 81CB30300000        <1>         or      ebx, 0x3030
    30                              <1> 
    31 000007DC 883D[52080000]      <1>         mov     [.s2 + 0], bh
    32 000007E2 8825[54080000]      <1>         mov     [.s3 + 0], ah
    33 000007E8 881D[55080000]      <1>         mov     [.s3 + 1], bl
    34 000007EE A2[56080000]        <1>         mov     [.s3 + 2], al
    35                              <1> 
    36 000007F3 B807000000          <1>         mov     eax, 7
    37 000007F8 0FA305[49080000]    <1>         bt      [.bcd + 9], eax
    38 000007FF 7209                <1>         jc      .10F
    39                              <1> 
    40 00000801 C605[51080000]2B    <1>         mov     [.s1 + 0], byte '+'
    41 00000808 EB07                <1>         jmp     .10E
    42                              <1> .10F:
    43                              <1> 
    44 0000080A C605[51080000]2D    <1>         mov     [.s1 + 0], byte '-'
    45                              <1> .10E:
    46                              <1> 
    47 00000811 68[51080000]6A076A- <1>         cdecl   draw_str, 72, 2, 0x07, .s1
    47 00000819 026A48E81002000066- <1>
    47 00000822 83C410              <1>
    48                              <1> 
    49 00000825 6A14E8260A00006683- <1>         cdecl   wait_tick, 20
    49 0000082E C404                <1>
    50                              <1> 
    51 00000830 E977FFFFFF          <1>         jmp     .10L
    52                              <1> 
    53 00000835 00<rept>            <1> ALIGN 4, db 0
    54 00000838 E8030000            <1> .c1000      dd  1000
    55 0000083C B4000000            <1> .c180       dd  180
    56                              <1> 
    57 00000840 00<rept>            <1> .bcd:   times 10 db 0x00
    58                              <1> 
    59 0000084A 5461736B2D3300      <1> .s0     db  "Task-3", 0
    60 00000851 2D                  <1> .s1     db  "-"
    61 00000852 302E                <1> .s2     db  "0."
    62 00000854 30303000            <1> .s3     db  "000", 0
    86                                  
    87                                  %include    "../modules/protect/vga.s"
     1                              <1> vga_set_read_plane:
     2                              <1> 
     3 00000858 55                  <1>         push    ebp
     4 00000859 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 0000085B 50                  <1>         push    eax
     7 0000085C 52                  <1>         push    edx
     8                              <1> 
     9 0000085D 8A6508              <1>         mov     ah, [ebp + 8]
    10 00000860 80E403              <1>         and     ah, 0x03
    11 00000863 B004                <1>         mov     al, 0x04
    12 00000865 66BACE03            <1>         mov     dx, 0x03CE
    13 00000869 66EF                <1>         out     dx, ax
    14                              <1> 
    15 0000086B 5A                  <1>         pop     edx
    16 0000086C 58                  <1>         pop     eax
    17                              <1> 
    18 0000086D 89EC                <1>         mov     esp, ebp
    19 0000086F 5D                  <1>         pop     ebp
    20                              <1> 
    21 00000870 C3                  <1>         ret
    22                              <1> 
    23                              <1> 
    24                              <1> vga_set_write_plane:
    25                              <1> 
    26 00000871 55                  <1>          push    ebp
    27 00000872 89E5                <1>          mov     ebp, esp
    28                              <1>  
    29 00000874 50                  <1>          push    eax
    30 00000875 52                  <1>          push    edx
    31                              <1>  
    32 00000876 8A6508              <1>          mov     ah, [ebp + 8]
    33 00000879 80E40F              <1>          and     ah, 0x0F
    34 0000087C B002                <1>          mov     al, 0x02
    35 0000087E 66BAC403            <1>          mov     dx, 0x03C4
    36 00000882 66EF                <1>          out     dx, ax
    37                              <1>  
    38 00000884 5A                  <1>          pop     edx
    39 00000885 58                  <1>          pop     eax
    40                              <1>  
    41 00000886 89EC                <1>          mov     esp, ebp
    42 00000888 5D                  <1>          pop     ebp
    43                              <1>  
    44 00000889 C3                  <1>          ret
    45                              <1> 
    46                              <1> 
    47                              <1> vram_font_copy:
    48                              <1> 
    49 0000088A 55                  <1>         push    ebp
    50 0000088B 89E5                <1>         mov     ebp, esp
    51                              <1> 
    52 0000088D 50                  <1>         push    eax
    53 0000088E 53                  <1>         push    ebx
    54 0000088F 51                  <1>         push    ecx
    55 00000890 52                  <1>         push    edx
    56 00000891 56                  <1>         push    esi
    57 00000892 57                  <1>         push    edi
    58                              <1> 
    59 00000893 8B7508              <1>         mov     esi, [ebp + 8]
    60 00000896 8B7D0C              <1>         mov     edi, [ebp + 12]
    61 00000899 0FB64510            <1>         movzx   eax, byte [ebp + 16]
    62 0000089D 0FB75D14            <1>         movzx   ebx, word [ebp + 20]
    63                              <1> 
    64 000008A1 84C7                <1>         test    bh, al
    65 000008A3 0F94C6              <1>         setz    dh
    66 000008A6 FECE                <1>         dec     dh
    67                              <1> 
    68 000008A8 84C3                <1>         test    bl, al
    69 000008AA 0F94C2              <1>         setz    dl
    70 000008AD FECA                <1>         dec     dl
    71                              <1> 
    72 000008AF FC                  <1>         cld
    73                              <1> 
    74 000008B0 B910000000          <1>         mov     ecx, 16
    75                              <1> .10L:
    76                              <1> 
    77 000008B5 AC                  <1>         lodsb
    78 000008B6 88C4                <1>         mov     ah, al
    79 000008B8 F6D4                <1>         not     ah
    80                              <1> 
    81 000008BA 20D0                <1>         and     al, dl
    82                              <1> 
    83 000008BC F7C310000000        <1>         test    ebx, 0x0010
    84 000008C2 7404                <1>         jz      .11F
    85 000008C4 2227                <1>         and     ah, [edi]
    86 000008C6 EB02                <1>         jmp     .11E
    87                              <1> .11F:
    88                              <1> 
    89 000008C8 20F4                <1>         and     ah, dh
    90                              <1> .11E:
    91                              <1> 
    92 000008CA 08E0                <1>         or      al, ah
    93                              <1> 
    94 000008CC 8807                <1>         mov     [edi], al
    95                              <1> 
    96 000008CE 83C750              <1>         add     edi, 80
    97 000008D1 E2E2                <1>         loop    .10L
    98                              <1> .10E:
    99                              <1> 
   100 000008D3 5F                  <1>         pop     edi
   101 000008D4 5E                  <1>         pop     esi
   102 000008D5 5A                  <1>         pop     edx
   103 000008D6 59                  <1>         pop     ecx
   104 000008D7 5B                  <1>         pop     ebx
   105 000008D8 58                  <1>         pop     eax
   106                              <1> 
   107 000008D9 89EC                <1>         mov     esp, ebp
   108 000008DB 5D                  <1>         pop     ebp
   109                              <1> 
   110 000008DC C3                  <1>         ret
   111                              <1> 
   112                              <1> 
   113                              <1> 
   114                              <1> vram_bit_copy:
   115                              <1> 
   116 000008DD 55                  <1>         push    ebp
   117 000008DE 89E5                <1>         mov     ebp, esp
   118                              <1> 
   119 000008E0 50                  <1>         push    eax
   120 000008E1 53                  <1>         push    ebx
   121 000008E2 57                  <1>         push    edi
   122                              <1> 
   123 000008E3 8B7D0C              <1>         mov     edi, [ebp + 12]
   124 000008E6 0FB64510            <1>         movzx   eax, byte [ebp + 16]
   125 000008EA 0FB75D14            <1>         movzx   ebx, word [ebp + 20]
   126                              <1> 
   127 000008EE 84C3                <1>         test    bl, al
   128 000008F0 0F94C3              <1>         setz    bl
   129 000008F3 FECB                <1>         dec     bl
   130                              <1> 
   131 000008F5 8A4508              <1>         mov     al, [ebp + 8]
   132 000008F8 88C4                <1>         mov     ah, al
   133 000008FA F6D4                <1>         not     ah
   134                              <1> 
   135 000008FC 2227                <1>         and     ah, [edi]
   136 000008FE 20D8                <1>         and     al, bl
   137 00000900 08E0                <1>         or      al, ah
   138                              <1> 
   139 00000902 8807                <1>         mov     [edi], al
   140                              <1> 
   141 00000904 5F                  <1>         pop     edi
   142 00000905 5B                  <1>         pop     ebx
   143 00000906 58                  <1>         pop     eax
   144                              <1> 
   145 00000907 89EC                <1>         mov     esp, ebp
   146 00000909 5D                  <1>         pop     ebp
   147                              <1> 
   148 0000090A C3                  <1>         ret
    88                                  %include    "../modules/protect/draw_char.s"
     1                              <1> draw_char:
     2                              <1> 
     3 0000090B 55                  <1>         push    ebp
     4 0000090C 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 0000090E 50                  <1>         push    eax
     7 0000090F 53                  <1>         push    ebx
     8 00000910 51                  <1>         push    ecx
     9 00000911 52                  <1>         push    edx
    10 00000912 56                  <1>         push    esi
    11 00000913 57                  <1>         push    edi
    12                              <1> 
    13                              <1> %ifdef  USE_TEST_AND_SET
    14 00000914 68[E8090000]E88508- <1>         cdecl   test_and_set, IN_USE
    14 0000091C 00006683C404        <1>
    15                              <1> %endif
    16                              <1> 
    17 00000922 0FB67514            <1>         movzx   esi, byte [ebp + 20]
    18 00000926 C1E604              <1>         shl     esi, 4
    19 00000929 0335[1C020000]      <1>         add     esi, [FONT_ADR]
    20                              <1> 
    21 0000092F 8B7D0C              <1>         mov     edi, [ebp + 12]
    22 00000932 C1E708              <1>         shl     edi, 8
    23 00000935 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA0000]
    24 0000093C 037D08              <1>         add     edi, [ebp + 8]
    25                              <1> 
    26 0000093F 0FB75D10            <1>         movzx   ebx, word [ebp + 16]
    27                              <1> 
    28 00000943 6A03E80EFFFFFF6683- <1>         cdecl   vga_set_read_plane, 0x03
    28 0000094C C404                <1>
    29 0000094E 6A08E81CFFFFFF6683- <1>         cdecl   vga_set_write_plane, 0x08
    29 00000957 C404                <1>
    30 00000959 536A085756E827FFFF- <1>         cdecl   vram_font_copy, esi, edi, 0x08, ebx
    30 00000962 FF6683C410          <1>
    31                              <1> 
    32 00000967 6A02E8EAFEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x02
    32 00000970 C404                <1>
    33 00000972 6A04E8F8FEFFFF6683- <1>         cdecl   vga_set_write_plane, 0x04
    33 0000097B C404                <1>
    34 0000097D 536A045756E803FFFF- <1>         cdecl   vram_font_copy, esi, edi, 0x04, ebx
    34 00000986 FF6683C410          <1>
    35                              <1> 
    36 0000098B 6A01E8C6FEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x01
    36 00000994 C404                <1>
    37 00000996 6A02E8D4FEFFFF6683- <1>         cdecl   vga_set_write_plane, 0x02
    37 0000099F C404                <1>
    38 000009A1 536A025756E8DFFEFF- <1>         cdecl   vram_font_copy, esi, edi, 0x02, ebx
    38 000009AA FF6683C410          <1>
    39                              <1> 
    40 000009AF 6A00E8A2FEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x00
    40 000009B8 C404                <1>
    41 000009BA 6A01E8B0FEFFFF6683- <1>         cdecl   vga_set_write_plane, 0x01
    41 000009C3 C404                <1>
    42 000009C5 536A015756E8BBFEFF- <1>         cdecl   vram_font_copy, esi, edi, 0x01, ebx
    42 000009CE FF6683C410          <1>
    43                              <1> 
    44                              <1> %ifdef  USE_TEST_AND_SET
    45 000009D3 C705[E8090000]0000- <1>         mov     [IN_USE], dword 0
    45 000009DB 0000                <1>
    46                              <1> %endif
    47                              <1> 
    48 000009DD 5F                  <1>         pop     edi
    49 000009DE 5E                  <1>         pop     esi
    50 000009DF 5A                  <1>         pop     edx
    51 000009E0 59                  <1>         pop     ecx
    52 000009E1 5B                  <1>         pop     ebx
    53 000009E2 58                  <1>         pop     eax
    54                              <1> 
    55 000009E3 89EC                <1>         mov     esp, ebp
    56 000009E5 5D                  <1>         pop     ebp
    57                              <1> 
    58 000009E6 C3                  <1>         ret
    59                              <1> 
    60                              <1> %ifdef USE_TEST_AND_SET
    61 000009E7 00                  <1> ALIGN 4, db 0
    62 000009E8 00000000            <1> IN_USE:	dd	0
    63                              <1> %endif
    89                                  %include    "../modules/protect/draw_font.s"
     1                              <1> draw_font:
     2                              <1> 
     3 000009EC 55                  <1>         push    ebp
     4 000009ED 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 000009EF 50                  <1>         push    eax
     7 000009F0 53                  <1>         push    ebx
     8 000009F1 51                  <1>         push    ecx
     9 000009F2 52                  <1>         push    edx
    10 000009F3 56                  <1>         push    esi
    11 000009F4 57                  <1>         push    edi
    12                              <1> 
    13 000009F5 8B7508              <1>         mov     esi, [ebp + 8]
    14 000009F8 8B7D0C              <1>         mov     edi, [ebp + 12]
    15                              <1> 
    16 000009FB B900000000          <1>         mov     ecx, 0
    17 00000A00 81F900010000        <1> .10L:   cmp     ecx, 256
    18 00000A06 731F                <1>         jae     .10E
    19                              <1> 
    20 00000A08 89C8                <1>         mov     eax, ecx
    21 00000A0A 83E00F              <1>         and     eax, 0x0F
    22 00000A0D 01F0                <1>         add     eax, esi
    23                              <1> 
    24 00000A0F 89CB                <1>         mov     ebx, ecx
    25 00000A11 C1EB04              <1>         shr     ebx, 4
    26 00000A14 01FB                <1>         add     ebx, edi
    27                              <1> 
    28 00000A16 516A075350E8EBFEFF- <1>         cdecl   draw_char, eax, ebx, 0x07, ecx
    28 00000A1F FF6683C410          <1>
    29                              <1> 
    30 00000A24 41                  <1>         inc     ecx
    31 00000A25 EBD9                <1>         jmp     .10L
    32                              <1> .10E:
    33                              <1> 
    34 00000A27 5F                  <1>         pop     edi
    35 00000A28 5E                  <1>         pop     esi
    36 00000A29 5A                  <1>         pop     edx
    37 00000A2A 59                  <1>         pop     ecx
    38 00000A2B 5B                  <1>         pop     ebx
    39 00000A2C 58                  <1>         pop     eax
    40                              <1> 
    41 00000A2D 89EC                <1>         mov     esp, ebp
    42 00000A2F 5D                  <1>         pop     ebp
    43                              <1> 
    44 00000A30 C3                  <1>         ret
    90                                  %include    "../modules/protect/draw_str.s"
     1                              <1> draw_str:
     2                              <1> 
     3 00000A31 55                  <1>         push    ebp
     4 00000A32 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000A34 50                  <1>         push    eax
     7 00000A35 53                  <1>         push    ebx
     8 00000A36 51                  <1>         push    ecx
     9 00000A37 52                  <1>         push    edx
    10 00000A38 56                  <1>         push    esi
    11                              <1> 
    12 00000A39 8B4D08              <1>         mov     ecx, [ebp + 8]
    13 00000A3C 8B550C              <1>         mov     edx, [ebp + 12]
    14 00000A3F 0FB75D10            <1>         movzx   ebx, word [ebp + 16]
    15 00000A43 8B7514              <1>         mov     esi, [ebp + 20]
    16                              <1> 
    17 00000A46 FC                  <1>         cld
    18                              <1> .10L:
    19                              <1> 
    20 00000A47 AC                  <1>         lodsb
    21 00000A48 3C00                <1>         cmp     al, 0
    22 00000A4A 741A                <1>         je      .10E
    23                              <1> 
    24                              <1> %ifdef  USE_SYSTEM_CALL
    25 00000A4C CD81                <1>         int     0x81
    26                              <1> %else
    27                              <1>         cdecl   draw_char, ecx, edx, ebx, eax
    28                              <1> %endif
    29                              <1> 
    30 00000A4E 41                  <1>         inc     ecx
    31 00000A4F 83F950              <1>         cmp     ecx, 80
    32 00000A52 7C10                <1>         jl      .12E
    33 00000A54 B900000000          <1>         mov     ecx, 0
    34 00000A59 42                  <1>         inc     edx
    35 00000A5A 83FA1E              <1>         cmp     edx, 30
    36 00000A5D 7C05                <1>         jl      .12E
    37 00000A5F BA00000000          <1>         mov     edx, 0
    38                              <1> 
    39                              <1> .12E:
    40 00000A64 EBE1                <1>         jmp     .10L
    41                              <1> .10E:
    42                              <1> 
    43 00000A66 5E                  <1>         pop     esi
    44 00000A67 5A                  <1>         pop     edx
    45 00000A68 59                  <1>         pop     ecx
    46 00000A69 5B                  <1>         pop     ebx
    47 00000A6A 58                  <1>         pop     eax
    48                              <1> 
    49 00000A6B 89EC                <1>         mov     esp, ebp
    50 00000A6D 5D                  <1>         pop     ebp
    51                              <1> 
    52 00000A6E C3                  <1>         ret
    91                                  %include    "../modules/protect/draw_color_bar.s"
     1                              <1> draw_color_bar:
     2                              <1> 
     3 00000A6F 55                  <1>         push    ebp
     4 00000A70 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000A72 50                  <1>         push    eax
     7 00000A73 53                  <1>         push    ebx
     8 00000A74 51                  <1>         push    ecx
     9 00000A75 52                  <1>         push    edx
    10 00000A76 56                  <1>         push    esi
    11 00000A77 57                  <1>         push    edi
    12                              <1> 
    13 00000A78 8B7508              <1>         mov     esi, [ebp + 8]
    14 00000A7B 8B7D0C              <1>         mov     edi, [ebp + 12]
    15                              <1> 
    16 00000A7E B900000000          <1>         mov     ecx, 0
    17 00000A83 83F910              <1> .10L:   cmp     ecx, 16
    18 00000A86 732E                <1>         jae     .10E
    19                              <1> 
    20 00000A88 89C8                <1>         mov     eax, ecx
    21 00000A8A 83E001              <1>         and     eax, 0x01
    22 00000A8D C1E003              <1>         shl     eax, 3
    23 00000A90 01F0                <1>         add     eax, esi
    24                              <1> 
    25 00000A92 89CB                <1>         mov     ebx, ecx
    26 00000A94 D1EB                <1>         shr     ebx, 1
    27 00000A96 01FB                <1>         add     ebx, edi
    28                              <1> 
    29 00000A98 89CA                <1>         mov     edx, ecx
    30 00000A9A D1E2                <1>         shl     edx, 1
    31 00000A9C 8B92[CA0A0000]      <1>         mov     edx, [.t0 + edx]
    32                              <1> 
    33 00000AA2 68[C00A0000]525350- <1>         cdecl   draw_str, eax, ebx, edx, .s0
    33 00000AAA E882FFFFFF6683C410  <1>
    34                              <1> 
    35 00000AB3 41                  <1>         inc     ecx
    36 00000AB4 EBCD                <1>         jmp     .10L
    37                              <1> .10E:
    38                              <1> 
    39 00000AB6 5F                  <1>         pop     edi
    40 00000AB7 5E                  <1>         pop     esi
    41 00000AB8 5A                  <1>         pop     edx
    42 00000AB9 59                  <1>         pop     ecx
    43 00000ABA 5B                  <1>         pop     ebx
    44 00000ABB 58                  <1>         pop     eax
    45                              <1> 
    46 00000ABC 89EC                <1>         mov     esp, ebp
    47 00000ABE 5D                  <1>         pop     ebp
    48                              <1> 
    49 00000ABF C3                  <1>         ret
    50                              <1> 
    51 00000AC0 202020202020202020- <1> .s0     db  '         ', 0
    51 00000AC9 00                  <1>
    52                              <1> 
    53 00000ACA 00000008            <1> .t0     dw  0x0000, 0x0800
    54 00000ACE 00010009            <1> 		dw	0x0100, 0x0900
    55 00000AD2 0002000A            <1> 		dw	0x0200, 0x0A00
    56 00000AD6 0003000B            <1> 		dw	0x0300, 0x0B00
    57 00000ADA 0004000C            <1> 		dw	0x0400, 0x0C00
    58 00000ADE 0005000D            <1> 		dw	0x0500, 0x0D00
    59 00000AE2 0006000E            <1> 		dw	0x0600, 0x0E00
    60 00000AE6 0007000F            <1> 		dw	0x0700, 0x0F00
    92                                  %include    "../modules/protect/draw_pixel.s"
     1                              <1> draw_pixel:
     2                              <1> 
     3 00000AEA 55                  <1>         push    ebp
     4 00000AEB 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000AED 50                  <1>         push    eax
     7 00000AEE 53                  <1>         push    ebx
     8 00000AEF 51                  <1>         push    ecx
     9 00000AF0 57                  <1>         push    edi
    10                              <1> 
    11 00000AF1 8B7D0C              <1>         mov     edi, [ebp + 12]
    12 00000AF4 C1E704              <1>         shl     edi, 4
    13 00000AF7 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA_0000]
    14                              <1> 
    15 00000AFE 8B5D08              <1>         mov     ebx, [ebp + 8]
    16 00000B01 89D9                <1>         mov     ecx, ebx
    17 00000B03 C1EB03              <1>         shr     ebx, 3
    18 00000B06 01DF                <1>         add     edi, ebx
    19                              <1> 
    20 00000B08 83E107              <1>         and     ecx, 0x07
    21 00000B0B BB80000000          <1>         mov     ebx, 0x80
    22 00000B10 D3EB                <1>         shr     ebx, cl
    23                              <1> 
    24 00000B12 8B4D10              <1>         mov     ecx, [ebp + 16]
    25                              <1> 
    26 00000B15 6A03E83CFDFFFF6683- <1>         cdecl   vga_set_read_plane, 0x03
    26 00000B1E C404                <1>
    27 00000B20 6A08E84AFDFFFF6683- <1>         cdecl   vga_set_write_plane, 0x08
    27 00000B29 C404                <1>
    28 00000B2B 516A085753E8A8FDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x08, ecx
    28 00000B34 FF6683C410          <1>
    29                              <1> 
    30 00000B39 6A02E818FDFFFF6683- <1>         cdecl   vga_set_read_plane, 0x02
    30 00000B42 C404                <1>
    31 00000B44 6A04E826FDFFFF6683- <1>         cdecl   vga_set_write_plane, 0x04
    31 00000B4D C404                <1>
    32 00000B4F 516A045753E884FDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x04, ecx
    32 00000B58 FF6683C410          <1>
    33                              <1> 
    34 00000B5D 6A01E8F4FCFFFF6683- <1>         cdecl   vga_set_read_plane, 0x01
    34 00000B66 C404                <1>
    35 00000B68 6A02E802FDFFFF6683- <1>         cdecl   vga_set_write_plane, 0x02
    35 00000B71 C404                <1>
    36 00000B73 516A025753E860FDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x02, ecx
    36 00000B7C FF6683C410          <1>
    37                              <1> 
    38 00000B81 6A00E8D0FCFFFF6683- <1>         cdecl   vga_set_read_plane, 0x00
    38 00000B8A C404                <1>
    39 00000B8C 6A01E8DEFCFFFF6683- <1>         cdecl   vga_set_write_plane, 0x01
    39 00000B95 C404                <1>
    40 00000B97 516A015753E83CFDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x01, ecx
    40 00000BA0 FF6683C410          <1>
    41                              <1> 
    42 00000BA5 5F                  <1>         pop     edi
    43 00000BA6 59                  <1>         pop     ecx
    44 00000BA7 5B                  <1>         pop     ebx
    45 00000BA8 58                  <1>         pop     eax
    46                              <1> 
    47 00000BA9 89EC                <1>         mov     esp, ebp
    48 00000BAB 5D                  <1>         pop     ebp
    49                              <1> 
    50 00000BAC C3                  <1>         ret
    93                                  %include    "../modules/protect/draw_line.s"
     1                              <1> draw_line:
     2                              <1> 
     3 00000BAD 55                  <1>         push    ebp
     4 00000BAE 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000BB0 6A00                <1>         push    dword 0
     7 00000BB2 6A00                <1>         push    dword 0
     8 00000BB4 6A00                <1>         push    dword 0
     9 00000BB6 6A00                <1>         push    dword 0
    10 00000BB8 6A00                <1>         push    dword 0
    11 00000BBA 6A00                <1>         push    dword 0
    12 00000BBC 6A00                <1>         push    dword 0
    13                              <1> 
    14 00000BBE 50                  <1>         push    eax
    15 00000BBF 53                  <1>         push    ebx
    16 00000BC0 51                  <1>         push    ecx
    17 00000BC1 52                  <1>         push    edx
    18 00000BC2 56                  <1>         push    esi
    19 00000BC3 57                  <1>         push    edi
    20                              <1> 
    21 00000BC4 8B4508              <1>         mov     eax, [ebp + 8]
    22 00000BC7 8B5D10              <1>         mov     ebx, [ebp + 16]
    23 00000BCA 29C3                <1>         sub     ebx, eax
    24 00000BCC 7D09                <1>         jge     .10F
    25                              <1> 
    26 00000BCE F7DB                <1>         neg     ebx
    27 00000BD0 BEFFFFFFFF          <1>         mov     esi, -1
    28 00000BD5 EB05                <1>         jmp     .10E
    29                              <1> .10F:
    30                              <1> 
    31 00000BD7 BE01000000          <1>         mov     esi, 1
    32                              <1> .10E:
    33                              <1> 
    34 00000BDC 8B4D0C              <1>         mov     ecx, [ebp + 12]
    35 00000BDF 8B5514              <1>         mov     edx, [ebp + 20]
    36 00000BE2 29CA                <1>         sub     edx, ecx
    37 00000BE4 7D09                <1>         jge     .20F
    38                              <1> 
    39 00000BE6 F7DA                <1>         neg     edx
    40 00000BE8 BFFFFFFFFF          <1>         mov     edi, -1
    41 00000BED EB05                <1>         jmp     .20E
    42                              <1> .20F:
    43                              <1> 
    44 00000BEF BF01000000          <1>         mov     edi, 1
    45                              <1> .20E:
    46                              <1> 
    47 00000BF4 8945F8              <1>         mov     [ebp - 8], eax
    48 00000BF7 895DF4              <1>         mov     [ebp - 12], ebx
    49 00000BFA 8975F0              <1>         mov     [ebp - 16], esi
    50                              <1> 
    51 00000BFD 894DEC              <1>         mov     [ebp - 20], ecx
    52 00000C00 8955E8              <1>         mov     [ebp - 24], edx
    53 00000C03 897DE4              <1>         mov     [ebp - 28], edi
    54                              <1> 
    55 00000C06 39D3                <1>         cmp     ebx, edx
    56 00000C08 7F08                <1>         jg      .22F
    57                              <1> 
    58 00000C0A 8D75EC              <1>         lea     esi, [ebp - 20]
    59 00000C0D 8D7DF8              <1>         lea     edi, [ebp - 8]
    60                              <1> 
    61 00000C10 EB06                <1>         jmp     .22E
    62                              <1> .22F:
    63                              <1> 
    64 00000C12 8D75F8              <1>         lea     esi, [ebp - 8]
    65 00000C15 8D7DEC              <1>         lea     edi, [ebp - 20]
    66                              <1> .22E:
    67                              <1> 
    68 00000C18 8B4EFC              <1>         mov     ecx, [esi - 4]
    69 00000C1B 83F900              <1>         cmp     ecx, 0
    70 00000C1E 7505                <1>         jnz     .30E
    71 00000C20 B901000000          <1>         mov     ecx, 1
    72                              <1> .30E:
    73                              <1> 
    74                              <1> .50L:
    75                              <1> 
    76 00000C25 FF7518FF75ECFF75F8- <1>         cdecl   draw_pixel, dword [ebp - 8], dword [ebp - 20], dword [ebp + 24]
    76 00000C2E E8B7FEFFFF6683C40C  <1>
    77                              <1> 
    78 00000C37 8B46F8              <1>         mov     eax, [esi - 8]
    79 00000C3A 0106                <1>         add     [esi - 0], eax
    80                              <1> 
    81 00000C3C 8B45FC              <1>         mov     eax, [ebp - 4]
    82 00000C3F 0347FC              <1>         add     eax, [edi - 4]
    83 00000C42 8B5EFC              <1>         mov     ebx, [esi - 4]
    84                              <1> 
    85 00000C45 39D8                <1>         cmp     eax, ebx
    86 00000C47 7C07                <1>         jl      .52E
    87 00000C49 29D8                <1>         sub     eax, ebx
    88                              <1> 
    89 00000C4B 8B5FF8              <1>         mov     ebx, [edi - 8]
    90 00000C4E 011F                <1>         add     [edi - 0], ebx
    91                              <1> .52E:
    92                              <1> 
    93 00000C50 8945FC              <1>         mov     [ebp - 4], eax
    94                              <1> 
    95 00000C53 E2D0                <1>         loop    .50L
    96                              <1> .50E:
    97                              <1> 
    98 00000C55 5F                  <1>         pop     edi
    99 00000C56 5E                  <1>         pop     esi
   100 00000C57 5A                  <1>         pop     edx
   101 00000C58 59                  <1>         pop     ecx
   102 00000C59 5B                  <1>         pop     ebx
   103 00000C5A 58                  <1>         pop     eax
   104                              <1> 
   105 00000C5B 89EC                <1>         mov     esp, ebp
   106 00000C5D 5D                  <1>         pop     ebp
   107                              <1> 
   108 00000C5E C3                  <1>         ret
    94                                  %include    "../modules/protect/draw_rect.s"
     1                              <1> draw_rect:
     2                              <1> 
     3 00000C5F 55                  <1>         push    ebp
     4 00000C60 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000C62 50                  <1>         push    eax
     7 00000C63 53                  <1>         push    ebx
     8 00000C64 51                  <1>         push    ecx
     9 00000C65 52                  <1>         push    edx
    10 00000C66 56                  <1>         push    esi
    11                              <1> 
    12 00000C67 8B4508              <1>         mov     eax, [ebp + 8]
    13 00000C6A 8B5D0C              <1>         mov     ebx, [ebp + 12]
    14 00000C6D 8B4D10              <1>         mov     ecx, [ebp + 16]
    15 00000C70 8B5514              <1>         mov     edx, [ebp + 20]
    16 00000C73 8B7518              <1>         mov     esi, [ebp + 24]
    17                              <1> 
    18 00000C76 39C8                <1>         cmp     eax, ecx
    19 00000C78 7C01                <1>         jl      .10E
    20 00000C7A 91                  <1>         xchg    eax, ecx
    21                              <1> .10E:
    22                              <1> 
    23 00000C7B 39D3                <1>         cmp     ebx, edx
    24 00000C7D 7C02                <1>         jl      .20E
    25 00000C7F 87DA                <1>         xchg    ebx, edx
    26                              <1> .20E:
    27                              <1> 
    28 00000C81 5653515350E822FFFF- <1>         cdecl   draw_line, eax, ebx, ecx, ebx, esi
    28 00000C8A FF6683C414          <1>
    29 00000C8F 5652505350E814FFFF- <1>         cdecl   draw_line, eax, ebx, eax, edx, esi
    29 00000C98 FF6683C414          <1>
    30                              <1> 
    31 00000C9D 4A                  <1>         dec     edx
    32 00000C9E 5652515250E805FFFF- <1>         cdecl   draw_line, eax, edx, ecx, edx, esi
    32 00000CA7 FF6683C414          <1>
    33 00000CAC 42                  <1>         inc     edx
    34                              <1> 
    35 00000CAD 4A                  <1>         dec     edx
    36 00000CAE 5652515351E8F5FEFF- <1>         cdecl   draw_line, ecx, ebx, ecx, edx, esi
    36 00000CB7 FF6683C414          <1>
    37                              <1> 
    38 00000CBC 5E                  <1>         pop     esi
    39 00000CBD 5A                  <1>         pop     edx
    40 00000CBE 59                  <1>         pop     ecx
    41 00000CBF 5B                  <1>         pop     ebx
    42 00000CC0 58                  <1>         pop     eax
    43                              <1> 
    44 00000CC1 89EC                <1>         mov     esp, ebp
    45 00000CC3 5D                  <1>         pop     ebp
    46                              <1> 
    47 00000CC4 C3                  <1>         ret
    95                                  %include    "../modules/protect/itoa.s"
     1                              <1> itoa:
     2                              <1> 
     3 00000CC5 55                  <1>         push    ebp
     4 00000CC6 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000CC8 50                  <1>         push    eax
     7 00000CC9 53                  <1>         push    ebx
     8 00000CCA 51                  <1>         push    ecx
     9 00000CCB 52                  <1>         push    edx
    10 00000CCC 56                  <1>         push    esi
    11 00000CCD 57                  <1>         push    edi
    12                              <1> 
    13 00000CCE 8B4508              <1>         mov     eax, [ebp + 8]
    14 00000CD1 8B750C              <1>         mov     esi, [ebp + 12]
    15 00000CD4 8B4D10              <1>         mov     ecx, [ebp + 16]
    16                              <1> 
    17 00000CD7 89F7                <1>         mov     edi, esi
    18 00000CD9 01CF                <1>         add     edi, ecx
    19 00000CDB 4F                  <1>         dec     edi
    20                              <1> 
    21 00000CDC 8B5D18              <1>         mov     ebx, [ebp + 24]
    22                              <1> 
    23 00000CDF F7C301000000        <1>         test    ebx, 0b0001
    24 00000CE5 7408                <1> .10Q:   je      .10E
    25 00000CE7 83F800              <1>         cmp     eax, 0
    26 00000CEA 7D03                <1> .12Q:   jge     .12E
    27 00000CEC 83CB02              <1>         or      ebx, 0b0010
    28                              <1> .12E:
    29                              <1> .10E:
    30                              <1> 
    31 00000CEF F7C302000000        <1>         test    ebx, 0b0010
    32 00000CF5 7410                <1> .20Q:   je      .20E
    33 00000CF7 83F800              <1>         cmp     eax, 0
    34 00000CFA 7D07                <1> .22Q:   jge     .22F
    35 00000CFC F7D8                <1>         neg     eax
    36 00000CFE C6062D              <1>         mov     [esi], byte '-'
    37 00000D01 EB03                <1>         jmp     .22E
    38                              <1> .22F:
    39                              <1> 
    40 00000D03 C6062B              <1>         mov     [esi], byte '+'
    41                              <1> .22E:
    42 00000D06 49                  <1>         dec     ecx
    43                              <1> .20E:
    44                              <1> 
    45 00000D07 8B5D14              <1>         mov     ebx, [ebp + 20]
    46                              <1> .30L:
    47                              <1> 
    48 00000D0A BA00000000          <1>         mov     edx, 0
    49 00000D0F F7F3                <1>         div     ebx
    50                              <1> 
    51 00000D11 89D6                <1>         mov     esi, edx
    52 00000D13 8A96[3F0D0000]      <1>         mov     dl, byte [.ascii + esi]
    53                              <1> 
    54 00000D19 8817                <1>         mov     [edi], dl
    55 00000D1B 4F                  <1>         dec     edi
    56                              <1> 
    57 00000D1C 83F800              <1>         cmp     eax, 0
    58 00000D1F E0E9                <1>         loopnz  .30L
    59                              <1> .30E:
    60                              <1> 
    61 00000D21 83F900              <1>         cmp     ecx, 0
    62 00000D24 740F                <1> .40Q:   je      .40E
    63 00000D26 B020                <1>         mov     al, ' '
    64 00000D28 6667837E1804        <1>         cmp     [bp + 24], word 0b0100
    65 00000D2E 7502                <1> .42Q:   jne     .42E
    66 00000D30 B030                <1>         mov     al, '0'
    67                              <1> .42E:
    68 00000D32 FD                  <1>         std
    69 00000D33 F3AA                <1>         rep stosb
    70                              <1> .40E:
    71                              <1> 
    72 00000D35 5F                  <1>         pop     edi
    73 00000D36 5E                  <1>         pop     esi
    74 00000D37 5A                  <1>         pop     edx
    75 00000D38 59                  <1>         pop     ecx
    76 00000D39 5B                  <1>         pop     ebx
    77 00000D3A 58                  <1>         pop     eax
    78                              <1> 
    79 00000D3B 89EC                <1>         mov     esp, ebp
    80 00000D3D 5D                  <1>         pop     ebp
    81                              <1> 
    82 00000D3E C3                  <1>         ret
    83                              <1> 
    84 00000D3F 303132333435363738- <1> .ascii  db      "0123456789ABCDEF"
    84 00000D48 39414243444546      <1>
    96                                  %include    "../modules/protect/rtc.s"
     1                              <1> rtc_get_time:
     2                              <1> 
     3 00000D4F 55                  <1>         push    ebp
     4 00000D50 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000D52 53                  <1>         push    ebx
     7                              <1> 
     8 00000D53 B00A                <1>         mov     al, 0x0A
     9 00000D55 E670                <1>         out     0x70, al
    10 00000D57 E471                <1>         in      al, 0x71
    11 00000D59 A880                <1>         test    al, 0x80
    12 00000D5B 7407                <1>         je      .10F
    13 00000D5D B801000000          <1>         mov     eax, 1
    14 00000D62 EB27                <1>         jmp     .10E
    15                              <1> .10F:
    16                              <1> 
    17 00000D64 B004                <1>         mov     al, 0x04
    18 00000D66 E670                <1>         out     0x70, al
    19 00000D68 E471                <1>         in      al, 0x71
    20                              <1> 
    21 00000D6A C1E008              <1>         shl     eax, 8
    22                              <1> 
    23 00000D6D B002                <1>         mov     al, 0x02
    24 00000D6F E670                <1>         out     0x70, al
    25 00000D71 E471                <1>         in      al, 0x71
    26                              <1> 
    27 00000D73 C1E008              <1>         shl     eax, 8
    28                              <1> 
    29 00000D76 B000                <1>         mov     al, 0x00
    30 00000D78 E670                <1>         out     0x70, al
    31 00000D7A E471                <1>         in      al, 0x71
    32                              <1> 
    33 00000D7C 25FFFFFF00          <1>         and     eax, 0x00_FF_FF_FF
    34                              <1> 
    35 00000D81 8B5D08              <1>         mov     ebx, [ebp + 8]
    36 00000D84 8903                <1>         mov     [ebx], eax
    37                              <1> 
    38 00000D86 B800000000          <1>         mov     eax, 0
    39                              <1> .10E:
    40                              <1> 
    41 00000D8B 5B                  <1>         pop     ebx
    42                              <1> 
    43 00000D8C 89EC                <1>         mov     esp, ebp
    44 00000D8E 5D                  <1>         pop     ebp
    45                              <1> 
    46 00000D8F C3                  <1>         ret
    97                                  %include    "../modules/protect/draw_time.s"
     1                              <1> draw_time:
     2                              <1> 
     3 00000D90 55                  <1>         push    ebp
     4 00000D91 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000D93 50                  <1>         push    eax
     7 00000D94 53                  <1>         push    ebx
     8                              <1> 
     9 00000D95 8B4514              <1>         mov     eax, [ebp + 20]
    10 00000D98 3B05[160E0000]      <1>         cmp     eax, [.last]
    11 00000D9E 7468                <1>         je      .10E
    12                              <1> 
    13 00000DA0 A3[160E0000]        <1>         mov     [.last], eax
    14                              <1> 
    15 00000DA5 BB00000000          <1>         mov     ebx, 0
    16 00000DAA 0FB6D8              <1>         movzx   ebx, al
    17 00000DAD 6A046A106A0268-     <1>         cdecl   itoa, ebx, .sec, 2, 16, 0b0100
    17 00000DB4 [240E0000]53E807FF- <1>
    17 00000DBC FFFF6683C414        <1>
    18                              <1> 
    19 00000DC2 88E3                <1>         mov     bl, ah
    20 00000DC4 6A046A106A0268-     <1>         cdecl   itoa, ebx, .min, 2, 16, 0b0100
    20 00000DCB [210E0000]53E8F0FE- <1>
    20 00000DD3 FFFF6683C414        <1>
    21                              <1> 
    22 00000DD9 C1E810              <1>         shr     eax, 16
    23 00000DDC 6A046A106A0268-     <1>         cdecl   itoa, eax, .hour, 2, 16, 0b0100
    23 00000DE3 [1E0E0000]50E8D8FE- <1>
    23 00000DEB FFFF6683C414        <1>
    24                              <1> 
    25 00000DF1 68[1E0E0000]FF7510- <1>         cdecl   draw_str, dword [ebp + 8], dword [ebp + 12], dword [ebp + 16], .hour
    25 00000DF9 FF750CFF7508E82DFC- <1>
    25 00000E02 FFFF6683C410        <1>
    26                              <1> 
    27                              <1> .10E:
    28                              <1> 
    29 00000E08 5B                  <1>         pop     ebx
    30 00000E09 58                  <1>         pop     eax
    31                              <1> 
    32 00000E0A 89EC                <1>         mov     esp, ebp
    33 00000E0C 5D                  <1>         pop     ebp
    34                              <1> 
    35 00000E0D C3                  <1>         ret
    36                              <1> 
    37                              <1> ALIGN 2, db 0
    38 00000E0E 0000000000000000    <1> .temp   dq  0
    39 00000E16 0000000000000000    <1> .last   dq  0
    40 00000E1E 5A5A3A              <1> .hour   db  "ZZ:"
    41 00000E21 5A5A3A              <1> .min    db  "ZZ:"
    42 00000E24 5A5A00              <1> .sec    db  "ZZ", 0
    98                                  %include    "../modules/protect/interrupt.s"
     1 00000E27 90                  <1> ALIGN 4
     2 00000E28 FF07                <1> IDTR:   dw      8 * 256 -1
     3 00000E2A 00001000            <1>         dd      VECT_BASE
     4                              <1> 
     5                              <1> init_int:
     6                              <1> 
     7 00000E2E 50                  <1>         push    eax
     8 00000E2F 53                  <1>         push    ebx
     9 00000E30 51                  <1>         push    ecx
    10 00000E31 57                  <1>         push    edi
    11                              <1> 
    12 00000E32 8D05[780F0000]      <1>         lea     eax, [int_default]
    13 00000E38 BB008E0800          <1>         mov     ebx, 0x0008_8E00
    14 00000E3D 6693                <1>         xchg    ax, bx
    15                              <1> 
    16 00000E3F B900010000          <1>         mov     ecx, 256
    17 00000E44 BF00001000          <1>         mov     edi, VECT_BASE
    18                              <1> 
    19                              <1> .10L:
    20                              <1> 
    21 00000E49 891F                <1>         mov     [edi + 0], ebx
    22 00000E4B 894704              <1>         mov     [edi + 4], eax
    23 00000E4E 83C708              <1>         add     edi, 8
    24 00000E51 E2F6                <1>         loop    .10L
    25                              <1> 
    26 00000E53 0F011D[280E0000]    <1>         lidt    [IDTR]
    27                              <1> 
    28 00000E5A 5F                  <1>         pop     edi
    29 00000E5B 59                  <1>         pop     ecx
    30 00000E5C 5B                  <1>         pop     ebx
    31 00000E5D 58                  <1>         pop     eax
    32                              <1> 
    33 00000E5E C3                  <1>         ret
    34                              <1> 
    35                              <1> 
    36                              <1> int_stop:
    37                              <1> 
    38 00000E5F FB                  <1>         sti
    39                              <1> 
    40 00000E60 50680F0600006A0F6A- <1>         cdecl   draw_str, 25, 15, 0x060F, eax
    40 00000E69 19E8C2FBFFFF6683C4- <1>
    40 00000E72 10                  <1>
    41                              <1> 
    42 00000E73 8B0424              <1>         mov     eax, [esp + 0]
    43 00000E76 6A046A106A0868-     <1>         cdecl   itoa, eax, .p1, 8, 16, 0b0100
    43 00000E7D [3B0F0000]50E83EFE- <1>
    43 00000E85 FFFF6683C414        <1>
    44                              <1> 
    45 00000E8B 8B442404            <1>         mov     eax, [esp + 4]
    46 00000E8F 6A046A106A0868-     <1>         cdecl   itoa, eax, .p2, 8, 16, 0b0100
    46 00000E96 [4C0F0000]50E825FE- <1>
    46 00000E9E FFFF6683C414        <1>
    47                              <1> 
    48 00000EA4 8B442408            <1>         mov     eax, [esp + 8]
    49 00000EA8 6A046A106A0868-     <1>         cdecl   itoa, eax, .p3, 8, 16, 0b0100
    49 00000EAF [5D0F0000]50E80CFE- <1>
    49 00000EB7 FFFF6683C414        <1>
    50                              <1> 
    51 00000EBD 8B44240C            <1>         mov     eax, [esp + 12]
    52 00000EC1 6A046A106A0868-     <1>         cdecl   itoa, eax, .p4, 8, 16, 0b0100
    52 00000EC8 [6E0F0000]50E8F3FD- <1>
    52 00000ED0 FFFF6683C414        <1>
    53                              <1> 
    54 00000ED6 68[340F0000]68040F- <1>         cdecl   draw_str, 25, 16, 0x0F04, .s1
    54 00000EDE 00006A106A19E848FB- <1>
    54 00000EE7 FFFF6683C410        <1>
    55 00000EED 68[450F0000]68040F- <1>         cdecl   draw_str, 25, 17, 0x0F04, .s2
    55 00000EF5 00006A116A19E831FB- <1>
    55 00000EFE FFFF6683C410        <1>
    56 00000F04 68[560F0000]68040F- <1>         cdecl   draw_str, 25, 18, 0x0F04, .s3
    56 00000F0C 00006A126A19E81AFB- <1>
    56 00000F15 FFFF6683C410        <1>
    57 00000F1B 68[670F0000]68040F- <1>         cdecl   draw_str, 25, 19, 0x0F04, .s4
    57 00000F23 00006A136A19E803FB- <1>
    57 00000F2C FFFF6683C410        <1>
    58                              <1> 
    59 00000F32 EBFE                <1>         jmp     $
    60                              <1> 
    61 00000F34 4553502B20303A      <1> .s1		db	"ESP+ 0:"
    62 00000F3B 5F5F5F5F5F5F5F5F20- <1> .p1		db	"________ ", 0
    62 00000F44 00                  <1>
    63 00000F45 2020202B20343A      <1> .s2		db	"   + 4:"
    64 00000F4C 5F5F5F5F5F5F5F5F20- <1> .p2		db	"________ ", 0
    64 00000F55 00                  <1>
    65 00000F56 2020202B20383A      <1> .s3		db	"   + 8:"
    66 00000F5D 5F5F5F5F5F5F5F5F20- <1> .p3		db	"________ ", 0
    66 00000F66 00                  <1>
    67 00000F67 2020202B31323A      <1> .s4		db	"   +12:"
    68 00000F6E 5F5F5F5F5F5F5F5F20- <1> .p4		db	"________ ", 0
    68 00000F77 00                  <1>
    69                              <1> 
    70                              <1> 
    71                              <1> int_default:
    72                              <1> 
    73 00000F78 9C                  <1>         pushf
    74 00000F79 0E                  <1>         push    cs
    75 00000F7A 68[5F0E0000]        <1>         push    int_stop
    76                              <1> 
    77 00000F7F B8[850F0000]        <1>         mov     eax, .s0
    78 00000F84 CF                  <1>         iret
    79                              <1> 
    80 00000F85 203C2020202053544F- <1> .s0     db  " <    STOP    > ", 0
    80 00000F8E 50202020203E2000    <1>
    81                              <1> 
    82                              <1> 
    83                              <1> int_zero_div:
    84                              <1> 
    85 00000F96 9C                  <1>         pushf
    86 00000F97 0E                  <1>         push    cs
    87 00000F98 68[5F0E0000]        <1>         push    int_stop
    88                              <1> 
    89 00000F9D B8[A30F0000]        <1>         mov     eax, .s0
    90 00000FA2 CF                  <1>         iret
    91                              <1> 
    92 00000FA3 203C20205A45524F20- <1> .s0     db  " <  ZERO DIV  > ", 0
    92 00000FAC 44495620203E2000    <1>
    99                                  %include    "../modules/protect/pic.s"
     1                              <1> init_pic:
     2                              <1> 
     3 00000FB4 50                  <1>         push    eax
     4                              <1> 
     5                              <1>         outp    0x20, 0x11
     5 00000FB5 B011                <2>  mov al, %2
     5 00000FB7 E620                <2>  out %1, al
     6                              <1>         outp    0x21, 0x20
     6 00000FB9 B020                <2>  mov al, %2
     6 00000FBB E621                <2>  out %1, al
     7                              <1>         outp    0x21, 0x04
     7 00000FBD B004                <2>  mov al, %2
     7 00000FBF E621                <2>  out %1, al
     8                              <1>         outp    0x21, 0x05
     8 00000FC1 B005                <2>  mov al, %2
     8 00000FC3 E621                <2>  out %1, al
     9                              <1>         outp    0x21, 0xFF
     9 00000FC5 B0FF                <2>  mov al, %2
     9 00000FC7 E621                <2>  out %1, al
    10                              <1> 
    11                              <1>         outp    0xA0, 0x11
    11 00000FC9 B011                <2>  mov al, %2
    11 00000FCB E6A0                <2>  out %1, al
    12                              <1>         outp    0xA1, 0x28
    12 00000FCD B028                <2>  mov al, %2
    12 00000FCF E6A1                <2>  out %1, al
    13                              <1>         outp    0xA1, 0x02
    13 00000FD1 B002                <2>  mov al, %2
    13 00000FD3 E6A1                <2>  out %1, al
    14                              <1>         outp    0xA1, 0x01
    14 00000FD5 B001                <2>  mov al, %2
    14 00000FD7 E6A1                <2>  out %1, al
    15                              <1>         outp    0xA1, 0xFF
    15 00000FD9 B0FF                <2>  mov al, %2
    15 00000FDB E6A1                <2>  out %1, al
    16                              <1> 
    17 00000FDD 58                  <1>         pop     eax
    18                              <1> 
    19 00000FDE C3                  <1>         ret
   100                                  %include    "../modules/protect/int_rtc.s"
     1                              <1> rtc_int_en:
     2                              <1> 
     3 00000FDF 55                  <1>         push    ebp
     4 00000FE0 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000FE2 50                  <1>         push    eax
     7                              <1> 
     8                              <1>         outp    0x70, 0x0B
     8 00000FE3 B00B                <2>  mov al, %2
     8 00000FE5 E670                <2>  out %1, al
     9                              <1> 
    10 00000FE7 E471                <1>         in      al, 0x71
    11 00000FE9 0A4508              <1>         or      al, [ebp + 8]
    12                              <1> 
    13 00000FEC E671                <1>         out     0x71, al
    14                              <1> 
    15 00000FEE 58                  <1>         pop     eax
    16                              <1> 
    17 00000FEF 89EC                <1>         mov     esp, ebp
    18 00000FF1 5D                  <1>         pop     ebp
    19                              <1> 
    20 00000FF2 C3                  <1>         ret
    21                              <1> 
    22                              <1> 
    23                              <1> int_rtc:
    24                              <1> 
    25 00000FF3 60                  <1>         pusha
    26 00000FF4 1E                  <1>         push    ds
    27 00000FF5 06                  <1>         push    es
    28                              <1> 
    29 00000FF6 66B81000            <1>         mov     ax, 0x0010
    30 00000FFA 8ED8                <1>         mov     ds, ax
    31 00000FFC 8EC0                <1>         mov     es, ax
    32                              <1> 
    33 00000FFE 68[20020000]E847FD- <1>         cdecl   rtc_get_time, RTC_TIME
    33 00001006 FFFF6683C404        <1>
    34                              <1> 
    35                              <1>         outp    0x70, 0x0C
    35 0000100C B00C                <2>  mov al, %2
    35 0000100E E670                <2>  out %1, al
    36 00001010 E471                <1>         in      al, 0x71
    37                              <1> 
    38                              <1>         outp    0xA0, 0x20
    38 00001012 B020                <2>  mov al, %2
    38 00001014 E6A0                <2>  out %1, al
    39                              <1>         outp    0x20, 0x20
    39 00001016 B020                <2>  mov al, %2
    39 00001018 E620                <2>  out %1, al
    40                              <1> 
    41 0000101A 07                  <1>         pop     es
    42 0000101B 1F                  <1>         pop     ds
    43 0000101C 61                  <1>         popa
    44                              <1> 
    45 0000101D CF                  <1>         iret
   101                                  %include    "../modules/protect/int_keyboard.s"
     1                              <1> int_keyboard:
     2                              <1> 
     3 0000101E 60                  <1>         pusha
     4 0000101F 1E                  <1>         push    ds
     5 00001020 06                  <1>         push    es
     6                              <1> 
     7 00001021 66B81000            <1>         mov     ax, 0x0010
     8 00001025 8ED8                <1>         mov     ds, ax
     9 00001027 8EC0                <1>         mov     es, ax
    10                              <1> 
    11 00001029 E460                <1>         in      al, 0x60
    12                              <1> 
    13 0000102B 5068[44100000]E856- <1>         cdecl   ring_wr, _KEY_BUFF, eax
    13 00001033 0000006683C408      <1>
    14                              <1> 
    15                              <1>         outp    0x20, 0x20
    15 0000103A B020                <2>  mov al, %2
    15 0000103C E620                <2>  out %1, al
    16                              <1> 
    17 0000103E 07                  <1>         pop     es
    18 0000103F 1F                  <1>         pop     ds
    19 00001040 61                  <1>         popa
    20                              <1> 
    21 00001041 CF                  <1>         iret
    22                              <1> 
    23 00001042 00<rept>            <1> ALIGN 4, db 0
    24 00001044 00<rept>            <1> _KEY_BUFF:  times ring_buff_size db 0
   102                                  %include    "../modules/protect/ring_buff.s"
     1                              <1> ring_rd:
     2                              <1> 
     3 0000105C 55                  <1>         push    ebp
     4 0000105D 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 0000105F 53                  <1>         push    ebx
     7 00001060 56                  <1>         push    esi
     8 00001061 57                  <1>         push    edi
     9                              <1> 
    10 00001062 8B7508              <1>         mov     esi, [ebp + 8]
    11 00001065 8B7D0C              <1>         mov     edi, [ebp + 12]
    12                              <1> 
    13 00001068 B800000000          <1>         mov     eax, 0
    14 0000106D 8B1E                <1>         mov     ebx, [esi + ring_buff.rp]
    15 0000106F 3B5E04              <1>         cmp     ebx, [esi + ring_buff.wp]
    16 00001072 7411                <1>         je      .10E
    17                              <1> 
    18 00001074 8A441E08            <1>         mov     al, [esi + ring_buff.item + ebx]
    19                              <1> 
    20 00001078 8807                <1>         mov     [edi], al
    21                              <1> 
    22 0000107A 43                  <1>         inc     ebx
    23 0000107B 83E30F              <1>         and     ebx, RING_INDEX_MASK
    24 0000107E 891E                <1>         mov     [esi + ring_buff.rp], ebx
    25                              <1> 
    26 00001080 B801000000          <1>         mov     eax, 1
    27                              <1> .10E:
    28                              <1> 
    29 00001085 5F                  <1>         pop     edi
    30 00001086 5E                  <1>         pop     esi
    31 00001087 5B                  <1>         pop     ebx
    32                              <1> 
    33 00001088 89EC                <1>         mov     esp, ebp
    34 0000108A 5D                  <1>         pop     ebp
    35                              <1> 
    36 0000108B C3                  <1>         ret
    37                              <1> 
    38                              <1> 
    39                              <1> ring_wr:
    40                              <1> 
    41 0000108C 55                  <1>         push    ebp
    42 0000108D 89E5                <1>         mov     ebp, esp
    43                              <1> 
    44 0000108F 53                  <1>         push    ebx
    45 00001090 51                  <1>         push    ecx
    46 00001091 56                  <1>         push    esi
    47                              <1> 
    48 00001092 8B7508              <1>         mov     esi, [ebp + 8]
    49                              <1> 
    50 00001095 B800000000          <1>         mov     eax, 0
    51 0000109A 8B5E04              <1>         mov     ebx, [esi + ring_buff.wp]
    52 0000109D 89D9                <1>         mov     ecx, ebx
    53 0000109F 41                  <1>         inc     ecx
    54 000010A0 83E10F              <1>         and     ecx, RING_INDEX_MASK
    55                              <1> 
    56 000010A3 3B0E                <1>         cmp     ecx, [esi + ring_buff.rp]
    57 000010A5 740F                <1>         je      .10E
    58                              <1> 
    59 000010A7 8A450C              <1>         mov     al, [ebp + 12]
    60                              <1> 
    61 000010AA 88441E08            <1>         mov     [esi + ring_buff.item + ebx], al
    62 000010AE 894E04              <1>         mov     [esi + ring_buff.wp], ecx
    63 000010B1 B801000000          <1>         mov     eax, 1
    64                              <1> .10E:
    65                              <1> 
    66 000010B6 5E                  <1>         pop     esi
    67 000010B7 59                  <1>         pop     ecx
    68 000010B8 5B                  <1>         pop     ebx
    69                              <1> 
    70 000010B9 89EC                <1>         mov     esp, ebp
    71 000010BB 5D                  <1>         pop     ebp
    72                              <1> 
    73 000010BC C3                  <1>         ret
    74                              <1> 
    75                              <1> 
    76                              <1> draw_key:
    77                              <1> 
    78 000010BD 55                  <1>         push    ebp
    79 000010BE 89E5                <1>         mov     ebp, esp
    80                              <1> 
    81 000010C0 60                  <1>         pusha
    82                              <1> 
    83 000010C1 8B5508              <1>         mov     edx, [ebp + 8]
    84 000010C4 8B7D0C              <1>         mov     edi, [ebp + 12]
    85 000010C7 8B7510              <1>         mov     esi, [ebp + 16]
    86                              <1> 
    87 000010CA 8B1E                <1>         mov     ebx, [esi + ring_buff.rp]
    88 000010CC 8D7608              <1>         lea     esi, [esi + ring_buff.item]
    89 000010CF B910000000          <1>         mov     ecx, RING_ITEM_SIZE
    90                              <1> 
    91                              <1> .10L:
    92                              <1> 
    93 000010D4 4B                  <1>         dec     ebx
    94 000010D5 83E30F              <1>         and     ebx, RING_INDEX_MASK
    95 000010D8 8A041E              <1>         mov     al, [esi + ebx]
    96                              <1> 
    97 000010DB 6A046A106A0268-     <1>         cdecl   itoa, eax, .tmp, 2, 16, 0b0100
    97 000010E2 [0C110000]50E8D9FB- <1>
    97 000010EA FFFF6683C414        <1>
    98 000010F0 68[0C110000]6A0257- <1>         cdecl   draw_str, edx, edi, 0x02, .tmp
    98 000010F8 52E833F9FFFF6683C4- <1>
    98 00001101 10                  <1>
    99                              <1> 
   100 00001102 83C203              <1>         add     edx, 3
   101                              <1> 
   102 00001105 E2CD                <1>         loop    .10L
   103                              <1> .10E:
   104                              <1> 
   105 00001107 61                  <1>         popa
   106                              <1> 
   107 00001108 89EC                <1>         mov     esp, ebp
   108 0000110A 5D                  <1>         pop     ebp
   109                              <1> 
   110 0000110B C3                  <1>         ret
   111                              <1> 
   112 0000110C 2D2D2000            <1> .tmp    db "-- ", 0
   103                                  %include    "../modules/protect/timer.s"
     1                              <1> int_en_timer0:
     2                              <1> 
     3 00001110 50                  <1>         push    eax
     4                              <1> 
     5                              <1>         outp    0x43, 0b_00_11_010_0
     5 00001111 B034                <2>  mov al, %2
     5 00001113 E643                <2>  out %1, al
     6                              <1>         outp    0x40, 0x9C
     6 00001115 B09C                <2>  mov al, %2
     6 00001117 E640                <2>  out %1, al
     7                              <1>         outp    0x40, 0x2E
     7 00001119 B02E                <2>  mov al, %2
     7 0000111B E640                <2>  out %1, al
     8                              <1> 
     9 0000111D 58                  <1>         pop     eax
    10                              <1> 
    11 0000111E C3                  <1>         ret
   104                                  %include    "../modules/protect/draw_rotation_bar.s"
     1                              <1> draw_rotation_bar:
     2                              <1> 
     3 0000111F 50                  <1>         push    eax
     4                              <1> 
     5 00001120 A1[70060000]        <1>         mov     eax, [TIMER_COUNT]
     6 00001125 C1E804              <1>         shr     eax, 4
     7 00001128 3B05[50110000]      <1>         cmp     eax, [.index]
     8 0000112E 741E                <1>         je      .10E
     9                              <1> 
    10 00001130 A3[50110000]        <1>         mov     [.index], eax
    11 00001135 83E003              <1>         and     eax, 0x03
    12                              <1> 
    13 00001138 8A80[54110000]      <1>         mov     al, [.table + eax]
    14 0000113E 506A0F6A1D6A00E8C1- <1>         cdecl   draw_char, 0, 29, 0x000F, eax
    14 00001147 F7FFFF6683C410      <1>
    15                              <1> 
    16                              <1> .10E:
    17                              <1> 
    18 0000114E 58                  <1>         pop     eax
    19                              <1> 
    20 0000114F C3                  <1>         ret
    21                              <1> 
    22                              <1> ALIGN 4, db 0
    23 00001150 00000000            <1> .index      dd 0
    24 00001154 7C2F2D5C            <1> .table      db "|/-\"
   105                                  %include    "../modules/protect/call_gate.s"
     1                              <1> call_gate:
     2                              <1> 
     3 00001158 55                  <1>         push    ebp
     4 00001159 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 0000115B 60                  <1>         pusha
     7 0000115C 1E                  <1>         push    ds
     8 0000115D 06                  <1>         push    es
     9                              <1> 
    10 0000115E 66B81000            <1>         mov     ax, 0x0010
    11 00001162 8ED8                <1>         mov     ds, ax
    12 00001164 8EC0                <1>         mov     es, ax
    13                              <1> 
    14 00001166 8B450C              <1>         mov     eax, dword [ebp + 12]
    15 00001169 8B5D10              <1>         mov     ebx, dword [ebp + 16]
    16 0000116C 8B4D14              <1>         mov     ecx, dword [ebp + 20]
    17 0000116F 8B5518              <1>         mov     edx, dword [ebp + 24]
    18 00001172 52515350E8B6F8FFFF- <1>         cdecl   draw_str, eax, ebx, ecx, edx
    18 0000117B 6683C410            <1>
    19                              <1> 
    20 0000117F 07                  <1>         pop     es
    21 00001180 1F                  <1>         pop     ds
    22 00001181 61                  <1>         popa
    23                              <1> 
    24 00001182 89EC                <1>         mov     esp, ebp
    25 00001184 5D                  <1>         pop     ebp
    26                              <1> 
    27 00001185 CA1000              <1>         retf    4 * 4
   106                                  %include    "../modules/protect/trap_gate.s"
     1                              <1> trap_gate_81:
     2                              <1> 
     3 00001188 50535251E87AF7FFFF- <1>         cdecl   draw_char, ecx, edx, ebx, eax
     3 00001191 6683C410            <1>
     4                              <1> 
     5 00001195 CF                  <1>         iret
     6                              <1> 
     7                              <1> 
     8                              <1> trap_gate_82:
     9                              <1> 
    10 00001196 535251E84CF9FFFF66- <1>         cdecl   draw_pixel, ecx, edx, ebx
    10 0000119F 83C40C              <1>
    11                              <1> 
    12 000011A2 CF                  <1>         iret
   107                                  %include    "../modules/protect/test_and_set.s"
     1                              <1> test_and_set:
     2                              <1> 
     3 000011A3 55                  <1>         push    ebp
     4 000011A4 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 000011A6 50                  <1>         push    eax
     7 000011A7 53                  <1>         push    ebx
     8                              <1> 
     9 000011A8 B800000000          <1>         mov     eax, 0
    10 000011AD 8B5D08              <1>         mov     ebx, [ebp + 8]
    11                              <1> .10L:
    12                              <1> 
    13 000011B0 F00FAB03            <1>         lock bts [ebx], eax
    14 000011B4 7307                <1>         jnc     .10E
    15                              <1> .12L:
    16                              <1> 
    17 000011B6 0FA303              <1>         bt      [ebx], eax
    18 000011B9 72FB                <1>         jc      .12L
    19                              <1> 
    20 000011BB EBF3                <1>         jmp     .10L
    21                              <1> .10E:
    22                              <1> 
    23 000011BD 5B                  <1>         pop     ebx
    24 000011BE 58                  <1>         pop     eax
    25                              <1> 
    26 000011BF 89EC                <1>         mov     esp, ebp
    27 000011C1 5D                  <1>         pop     ebp
    28                              <1> 
    29 000011C2 C3                  <1>         ret
   108                                  %include    "../modules/protect/int_nm.s"
     1                              <1> int_nm:
     2                              <1> 
     3 000011C3 60                  <1>         pusha
     4 000011C4 1E                  <1>         push    ds
     5 000011C5 06                  <1>         push    es
     6                              <1> 
     7 000011C6 66B81000            <1>         mov     ax, DS_KERNEL
     8 000011CA 8ED8                <1>         mov     ds, ax
     9 000011CC 8EC0                <1>         mov     es, ax
    10                              <1> 
    11 000011CE 0F06                <1>         clts
    12                              <1> 
    13 000011D0 8B3D[1C120000]      <1>         mov     edi, [.last_tss]
    14 000011D6 0F00CE              <1>         str     esi
    15 000011D9 83E6F8              <1>         and     esi, ~0x0007
    16                              <1> 
    17 000011DC 83FF00              <1>         cmp     edi, 0
    18 000011DF 7420                <1>         je      .10F
    19                              <1> 
    20 000011E1 39FE                <1>         cmp     esi, edi
    21 000011E3 741A                <1>         je      .12E
    22                              <1> 
    23 000011E5 FA                  <1>         cli
    24                              <1> 
    25 000011E6 89FB                <1>         mov     ebx, edi
    26 000011E8 E833000000          <1>         call    get_tss_base
    27 000011ED E841000000          <1>         call    save_fpu_context
    28                              <1> 
    29 000011F2 89F3                <1>         mov     ebx, esi
    30 000011F4 E827000000          <1>         call    get_tss_base
    31 000011F9 E843000000          <1>         call    load_fpu_context
    32                              <1> 
    33 000011FE FB                  <1>         sti
    34                              <1> .12E:
    35 000011FF EB0E                <1>         jmp     .10E
    36                              <1> .10F:
    37                              <1> 
    38 00001201 FA                  <1>         cli
    39                              <1>         
    40 00001202 89F3                <1>         mov     ebx, esi
    41 00001204 E817000000          <1>         call    get_tss_base
    42 00001209 E833000000          <1>         call    load_fpu_context
    43                              <1> 
    44 0000120E FB                  <1>         sti
    45                              <1> .10E:
    46                              <1> 
    47 0000120F 8935[1C120000]      <1>         mov     [.last_tss], esi
    48                              <1> 
    49 00001215 07                  <1>         pop     es
    50 00001216 1F                  <1>         pop     ds
    51 00001217 61                  <1>         popa
    52                              <1> 
    53 00001218 CF                  <1>         iret
    54                              <1> 
    55 00001219 00<rept>            <1> ALIGN 4, db 0
    56 0000121C 00000000            <1> .last_tss:  dd      0
    57                              <1> 
    58                              <1> 
    59                              <1> get_tss_base:
    60 00001220 8B83[86050000]      <1>         mov     eax, [GDT + ebx + 2]
    61 00001226 C1E008              <1>         shl     eax, 8
    62 00001229 8A83[8B050000]      <1>         mov     al, [GDT + ebx + 7]
    63 0000122F C1C808              <1>         ror     eax, 8
    64                              <1> 
    65 00001232 C3                  <1>         ret
    66                              <1> 
    67                              <1> 
    68                              <1> save_fpu_context:
    69 00001233 DD7068              <1>         fnsave  [eax + 104]
    70 00001236 C780D4000000010000- <1>         mov     [eax + 104 + 108], dword 1
    70 0000123F 00                  <1>
    71                              <1> 
    72 00001240 C3                  <1>         ret
    73                              <1> 
    74                              <1> 
    75                              <1> load_fpu_context:
    76 00001241 83B8D400000000      <1>         cmp     [eax + 104 + 108], dword 0
    77 00001248 7504                <1>         jne     .10F
    78 0000124A DBE3                <1>         fninit
    79 0000124C EB03                <1>         jmp     .10E
    80                              <1> .10F:
    81                              <1> 
    82 0000124E DD6068              <1>         frstor  [eax + 104]
    83                              <1> .10E:
    84 00001251 C3                  <1>         ret
   109                                  %include    "../modules/protect/wait_tick.s"
     1                              <1> wait_tick:
     2                              <1> 
     3 00001252 55                  <1>         push    ebp
     4 00001253 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00001255 50                  <1>         push    eax
     7 00001256 51                  <1>         push    ecx
     8                              <1> 
     9 00001257 8B4D08              <1>         mov     ecx, [ebp + 8]
    10 0000125A A1[70060000]        <1>         mov     eax, [TIMER_COUNT]
    11                              <1> 
    12                              <1> .10L:
    13 0000125F 3905[70060000]      <1>         cmp     [TIMER_COUNT], eax
    14 00001265 74F8                <1>         je      .10L
    15 00001267 40                  <1>         inc     eax
    16 00001268 E2F5                <1>         loop    .10L
    17                              <1> 
    18 0000126A 59                  <1>         pop     ecx
    19 0000126B 58                  <1>         pop     eax
    20                              <1> 
    21 0000126C 89EC                <1>         mov     esp, ebp
    22 0000126E 5D                  <1>         pop     ebp
    23                              <1> 
    24 0000126F C3                  <1>         ret
   110                                  
   111 00001270 00<rept>                        times KERNEL_SIZE - ($ - $$) db 0x00
