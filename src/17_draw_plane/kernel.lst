     1                                  %include    "../include/define.s"
     1                              <1>         BOOT_LOAD           equ     0x7C00
     2                              <1> 
     3                              <1>         BOOT_SIZE           equ     (1024 * 8)
     4                              <1>         SECT_SIZE           equ     (512)
     5                              <1>         BOOT_SECT           equ     (BOOT_SIZE / SECT_SIZE)
     6                              <1>         BOOT_END            equ     (BOOT_LOAD + BOOT_SIZE)
     7                              <1> 
     8                              <1>         E820_RECORD_SIZE    equ     20
     9                              <1> 
    10                              <1>         KERNEL_LOAD         equ     0x0010_1000
    11                              <1> 
    12                              <1>         KERNEL_SIZE         equ     (1024 * 8)
    13                              <1>         KERNEL_SECT         equ     (KERNEL_SIZE / SECT_SIZE)
     2                                  %include    "../include/macro.s"
     1                              <1> %macro  cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep  %0 -1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate -1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if  1 < %0
    12                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> struc drive
    18 00000000 <res 00000002>      <1>         .no     resw    1
    19 00000002 <res 00000002>      <1>         .cyln   resw    1
    20 00000004 <res 00000002>      <1>         .head   resw    1
    21 00000006 <res 00000002>      <1>         .sect   resw    1
    22                              <1> endstruc
     3                                  
     4                                          ORG     KERNEL_LOAD
     5                                  
     6                                  [BITS 32]
     7                                  
     8                                  kernel:
     9                                  
    10 00000000 BE007E0000                      mov     esi, BOOT_LOAD + SECT_SIZE
    11 00000005 0FB706                          movzx   eax, word [esi + 0]
    12 00000008 0FB75E02                        movzx   ebx, word [esi + 2]
    13 0000000C C1E004                          shl     eax, 4
    14 0000000F 01D8                            add     eax, ebx
    15 00000011 A3[D8000000]                    mov     [FONT_ADR], eax
    16                                  
    17 00000016 B407                            mov     ah, 0x07
    18 00000018 B002                            mov     al, 0x02
    19 0000001A 66BAC403                        mov     dx, 0x03C4
    20 0000001E 66EF                            out     dx, ax
    21                                  
    22 00000020 C60500000A00FF                  mov     [0x00A_0000 + 0], byte 0xFF
    23                                  
    24 00000027 B404                            mov     ah, 0x04
    25 00000029 66EF                            out     dx,ax
    26                                  
    27 0000002B C60501000A00FF                  mov     [0x00A_0000 + 1], byte 0xFF
    28                                  
    29 00000032 B402                            mov     ah, 0x02
    30 00000034 66EF                            out     dx, ax
    31                                  
    32 00000036 C60502000A00FF                  mov     [0x00A_0000 + 2], byte 0xFF
    33                                  
    34 0000003D B401                            mov     ah, 0x01
    35 0000003F 66EF                            out     dx, ax
    36                                  
    37 00000041 C60503000A00FF                  mov     [0x00A_0000 + 3], byte 0xFF
    38                                  
    39 00000048 B402                            mov     ah, 0x02
    40 0000004A 66EF                            out     dx, ax
    41                                  
    42 0000004C 8D3D50000A00                    lea     edi, [0x000A_0000 + 80]
    43 00000052 B950000000                      mov     ecx, 80
    44 00000057 B0FF                            mov     al, 0xFF
    45 00000059 F3AA                            rep stosb
    46                                  
    47 0000005B BF01000000                      mov     edi, 1
    48                                  
    49 00000060 C1E708                          shl     edi, 8
    50 00000063 8DBCBF00000A00                  lea     edi, [edi * 4 + edi + 0xA_0000]
    51                                  
    52 0000006A 66C707FF00                      mov     [edi + (80 * 0)], word 0xFF
    53 0000006F 66C74750FF00                    mov     [edi + (80 * 1)], word 0xFF
    54 00000075 66C787A0000000FF00              mov     [edi + (80 * 2)], word 0xFF
    55 0000007E 66C787F0000000FF00              mov     [edi + (80 * 3)], word 0xFF
    56 00000087 66C78740010000FF00              mov     [edi + (80 * 4)], word 0xFF
    57 00000090 66C78790010000FF00              mov     [edi + (80 * 5)], word 0xFF
    58 00000099 66C787E0010000FF00              mov     [edi + (80 * 6)], word 0xFF
    59 000000A2 66C78730020000FF00              mov     [edi + (80 * 7)], word 0xFF
    60                                  
    61 000000AB BE41000000                      mov     esi, 'A'
    62 000000B0 C1E604                          shl     esi, 4
    63 000000B3 0335[D8000000]                  add     esi, [FONT_ADR]
    64                                  
    65 000000B9 BF02000000                      mov     edi, 2
    66 000000BE C1E708                          shl     edi, 8
    67 000000C1 8DBCBF00000A00                  lea     edi, [edi * 4 + edi + 0xA_0000]
    68                                  
    69 000000C8 B910000000                      mov     ecx, 16
    70                                  .10L:
    71                                  
    72 000000CD A4                              movsb
    73 000000CE 83C74F                          add     edi, 80 - 1
    74 000000D1 E2FA                            loop    .10L
    75                                  
    76 000000D3 EBFE                            jmp     $
    77                                  
    78 000000D5 00<rept>                ALIGN 4, db 0
    79 000000D8 00000000                FONT_ADR:   dd 0
    80                                  
    81 000000DC 00<rept>                        times KERNEL_SIZE -($ - $$) db 0
