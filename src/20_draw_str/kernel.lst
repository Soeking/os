     1                                  %include    "../include/define.s"
     1                              <1>         BOOT_LOAD           equ     0x7C00
     2                              <1> 
     3                              <1>         BOOT_SIZE           equ     (1024 * 8)
     4                              <1>         SECT_SIZE           equ     (512)
     5                              <1>         BOOT_SECT           equ     (BOOT_SIZE / SECT_SIZE)
     6                              <1>         BOOT_END            equ     (BOOT_LOAD + BOOT_SIZE)
     7                              <1> 
     8                              <1>         E820_RECORD_SIZE    equ     20
     9                              <1> 
    10                              <1>         KERNEL_LOAD         equ     0x0010_1000
    11                              <1> 
    12                              <1>         KERNEL_SIZE         equ     (1024 * 8)
    13                              <1>         KERNEL_SECT         equ     (KERNEL_SIZE / SECT_SIZE)
     2                                  %include    "../include/macro.s"
     1                              <1> %macro  cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep  %0 -1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate -1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if  1 < %0
    12                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> struc drive
    18 00000000 <res 00000002>      <1>         .no     resw    1
    19 00000002 <res 00000002>      <1>         .cyln   resw    1
    20 00000004 <res 00000002>      <1>         .head   resw    1
    21 00000006 <res 00000002>      <1>         .sect   resw    1
    22                              <1> endstruc
     3                                  
     4                                          ORG     KERNEL_LOAD
     5                                  
     6                                  [BITS 32]
     7                                  
     8                                  kernel:
     9                                  
    10 00000000 BE007E0000                      mov     esi, BOOT_LOAD + SECT_SIZE
    11 00000005 0FB706                          movzx   eax, word [esi + 0]
    12 00000008 0FB75E02                        movzx   ebx, word [esi + 2]
    13 0000000C C1E004                          shl     eax, 4
    14 0000000F 01D8                            add     eax, ebx
    15 00000011 A3[50000000]                    mov     [FONT_ADR], eax
    16                                  
    17 00000016 6A0D6A3FE87E010000-             cdecl   draw_font, 63, 13
    17 0000001F 6683C408           
    18                                  
    19 00000023 68[3C000000]680F01-             cdecl   draw_str, 25, 14, 0x010F, .s0
    19 0000002B 00006A0E6A19E8AC01-
    19 00000034 00006683C410       
    20                                  
    21 0000003A EBFE                            jmp     $
    22                                  
    23 0000003C 2048656C6C6F2C206B-     .s0 	db	" Hello, kernel! ", 0
    23 00000045 65726E656C212000   
    24                                  
    25 0000004D 00<rept>                ALIGN 4, db 0
    26 00000050 00000000                FONT_ADR:   dd 0
    27                                  
    28                                  %include    "../modules/protect/vga.s"
     1                              <1> vga_set_read_plane:
     2                              <1> 
     3 00000054 55                  <1>         push    ebp
     4 00000055 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000057 50                  <1>         push    eax
     7 00000058 52                  <1>         push    edx
     8                              <1> 
     9 00000059 8A6508              <1>         mov     ah, [ebp + 8]
    10 0000005C 80E403              <1>         and     ah, 0x03
    11 0000005F B004                <1>         mov     al, 0x04
    12 00000061 66BACE03            <1>         mov     dx, 0x03CE
    13 00000065 66EF                <1>         out     dx, ax
    14                              <1> 
    15 00000067 5A                  <1>         pop     edx
    16 00000068 58                  <1>         pop     eax
    17                              <1> 
    18 00000069 89EC                <1>         mov     esp, ebp
    19 0000006B 5D                  <1>         pop     ebp
    20                              <1> 
    21 0000006C C3                  <1>         ret
    22                              <1> 
    23                              <1> 
    24                              <1> vga_set_write_plane:
    25                              <1> 
    26 0000006D 55                  <1>          push    ebp
    27 0000006E 89E5                <1>          mov     ebp, esp
    28                              <1>  
    29 00000070 50                  <1>          push    eax
    30 00000071 52                  <1>          push    edx
    31                              <1>  
    32 00000072 8A6508              <1>          mov     ah, [ebp + 8]
    33 00000075 80E40F              <1>          and     ah, 0x0F
    34 00000078 B002                <1>          mov     al, 0x02
    35 0000007A 66BAC403            <1>          mov     dx, 0x03C4
    36 0000007E 66EF                <1>          out     dx, ax
    37                              <1>  
    38 00000080 5A                  <1>          pop     edx
    39 00000081 58                  <1>          pop     eax
    40                              <1>  
    41 00000082 89EC                <1>          mov     esp, ebp
    42 00000084 5D                  <1>          pop     ebp
    43                              <1>  
    44 00000085 C3                  <1>          ret
    45                              <1> 
    46                              <1> 
    47                              <1> vram_font_copy:
    48                              <1> 
    49 00000086 55                  <1>         push    ebp
    50 00000087 89E5                <1>         mov     ebp, esp
    51                              <1> 
    52 00000089 50                  <1>         push    eax
    53 0000008A 53                  <1>         push    ebx
    54 0000008B 51                  <1>         push    ecx
    55 0000008C 52                  <1>         push    edx
    56 0000008D 56                  <1>         push    esi
    57 0000008E 57                  <1>         push    edi
    58                              <1> 
    59 0000008F 8B7508              <1>         mov     esi, [ebp + 8]
    60 00000092 8B7D0C              <1>         mov     edi, [ebp + 12]
    61 00000095 0FB64510            <1>         movzx   eax, byte [ebp + 16]
    62 00000099 0FB75D14            <1>         movzx   ebx, word [ebp + 20]
    63                              <1> 
    64 0000009D 84C7                <1>         test    bh, al
    65 0000009F 0F94C6              <1>         setz    dh
    66 000000A2 FECE                <1>         dec     dh
    67                              <1> 
    68 000000A4 84C3                <1>         test    bl, al
    69 000000A6 0F94C2              <1>         setz    dl
    70 000000A9 FECA                <1>         dec     dl
    71                              <1> 
    72 000000AB FC                  <1>         cld
    73                              <1> 
    74 000000AC B910000000          <1>         mov     ecx, 16
    75                              <1> .10L:
    76                              <1> 
    77 000000B1 AC                  <1>         lodsb
    78 000000B2 88C4                <1>         mov     ah, al
    79 000000B4 F6D4                <1>         not     ah
    80                              <1> 
    81 000000B6 20D0                <1>         and     al, dl
    82                              <1> 
    83 000000B8 F7C310000000        <1>         test    ebx, 0x0010
    84 000000BE 7404                <1>         jz      .11F
    85 000000C0 2227                <1>         and     ah, [edi]
    86 000000C2 EB02                <1>         jmp     .11E
    87                              <1> .11F:
    88                              <1> 
    89 000000C4 20F4                <1>         and     ah, dh
    90                              <1> .11E:
    91                              <1> 
    92 000000C6 08E0                <1>         or      al, ah
    93                              <1> 
    94 000000C8 8807                <1>         mov     [edi], al
    95                              <1> 
    96 000000CA 83C750              <1>         add     edi, 80
    97 000000CD E2E2                <1>         loop    .10L
    98                              <1> .10E:
    99                              <1> 
   100 000000CF 5F                  <1>         pop     edi
   101 000000D0 5E                  <1>         pop     esi
   102 000000D1 5A                  <1>         pop     edx
   103 000000D2 59                  <1>         pop     ecx
   104 000000D3 5B                  <1>         pop     ebx
   105 000000D4 58                  <1>         pop     eax
   106                              <1> 
   107 000000D5 89EC                <1>         mov     esp, ebp
   108 000000D7 5D                  <1>         pop     ebp
   109                              <1> 
   110 000000D8 C3                  <1>         ret
    29                                  %include    "../modules/protect/draw_char.s"
     1                              <1> draw_char:
     2                              <1> 
     3 000000D9 55                  <1>         push    ebp
     4 000000DA 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 000000DC 50                  <1>         push    eax
     7 000000DD 53                  <1>         push    ebx
     8 000000DE 51                  <1>         push    ecx
     9 000000DF 52                  <1>         push    edx
    10 000000E0 56                  <1>         push    esi
    11 000000E1 57                  <1>         push    edi
    12                              <1> 
    13 000000E2 0FB67514            <1>         movzx   esi, byte [ebp + 20]
    14 000000E6 C1E604              <1>         shl     esi, 4
    15 000000E9 0335[50000000]      <1>         add     esi, [FONT_ADR]
    16                              <1> 
    17 000000EF 8B7D0C              <1>         mov     edi, [ebp + 12]
    18 000000F2 C1E708              <1>         shl     edi, 8
    19 000000F5 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA0000]
    20 000000FC 037D08              <1>         add     edi, [ebp + 8]
    21                              <1> 
    22 000000FF 0FB75D10            <1>         movzx   ebx, word [ebp + 16]
    23                              <1> 
    24 00000103 6A03E84AFFFFFF6683- <1>         cdecl   vga_set_read_plane, 0x03
    24 0000010C C404                <1>
    25 0000010E 6A08E858FFFFFF6683- <1>         cdecl   vga_set_write_plane, 0x08
    25 00000117 C404                <1>
    26 00000119 536A085756E863FFFF- <1>         cdecl   vram_font_copy, esi, edi, 0x08, ebx
    26 00000122 FF6683C410          <1>
    27                              <1> 
    28 00000127 6A02E826FFFFFF6683- <1>         cdecl   vga_set_read_plane, 0x02
    28 00000130 C404                <1>
    29 00000132 6A04E834FFFFFF6683- <1>         cdecl   vga_set_write_plane, 0x04
    29 0000013B C404                <1>
    30 0000013D 536A045756E83FFFFF- <1>         cdecl   vram_font_copy, esi, edi, 0x04, ebx
    30 00000146 FF6683C410          <1>
    31                              <1> 
    32 0000014B 6A01E802FFFFFF6683- <1>         cdecl   vga_set_read_plane, 0x01
    32 00000154 C404                <1>
    33 00000156 6A02E810FFFFFF6683- <1>         cdecl   vga_set_write_plane, 0x02
    33 0000015F C404                <1>
    34 00000161 536A025756E81BFFFF- <1>         cdecl   vram_font_copy, esi, edi, 0x02, ebx
    34 0000016A FF6683C410          <1>
    35                              <1> 
    36 0000016F 6A00E8DEFEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x00
    36 00000178 C404                <1>
    37 0000017A 6A01E8ECFEFFFF6683- <1>         cdecl   vga_set_write_plane, 0x01
    37 00000183 C404                <1>
    38 00000185 536A015756E8F7FEFF- <1>         cdecl   vram_font_copy, esi, edi, 0x01, ebx
    38 0000018E FF6683C410          <1>
    39                              <1> 
    40 00000193 5F                  <1>         pop     edi
    41 00000194 5E                  <1>         pop     esi
    42 00000195 5A                  <1>         pop     edx
    43 00000196 59                  <1>         pop     ecx
    44 00000197 5B                  <1>         pop     ebx
    45 00000198 58                  <1>         pop     eax
    46                              <1> 
    47 00000199 89EC                <1>         mov     esp, ebp
    48 0000019B 5D                  <1>         pop     ebp
    49                              <1> 
    50 0000019C C3                  <1>         ret
    30                                  %include    "../modules/protect/draw_font.s"
     1                              <1> draw_font:
     2                              <1> 
     3 0000019D 55                  <1>         push    ebp
     4 0000019E 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 000001A0 50                  <1>         push    eax
     7 000001A1 53                  <1>         push    ebx
     8 000001A2 51                  <1>         push    ecx
     9 000001A3 52                  <1>         push    edx
    10 000001A4 56                  <1>         push    esi
    11 000001A5 57                  <1>         push    edi
    12                              <1> 
    13 000001A6 8B7508              <1>         mov     esi, [ebp + 8]
    14 000001A9 8B7D0C              <1>         mov     edi, [ebp + 12]
    15                              <1> 
    16 000001AC B900000000          <1>         mov     ecx, 0
    17 000001B1 81F900010000        <1> .10L:   cmp     ecx, 256
    18 000001B7 731F                <1>         jae     .10E
    19                              <1> 
    20 000001B9 89C8                <1>         mov     eax, ecx
    21 000001BB 83E00F              <1>         and     eax, 0x0F
    22 000001BE 01F0                <1>         add     eax, esi
    23                              <1> 
    24 000001C0 89CB                <1>         mov     ebx, ecx
    25 000001C2 C1EB04              <1>         shr     ebx, 4
    26 000001C5 01FB                <1>         add     ebx, edi
    27                              <1> 
    28 000001C7 516A075350E808FFFF- <1>         cdecl   draw_char, eax, ebx, 0x07, ecx
    28 000001D0 FF6683C410          <1>
    29                              <1> 
    30 000001D5 41                  <1>         inc     ecx
    31 000001D6 EBD9                <1>         jmp     .10L
    32                              <1> .10E:
    33                              <1> 
    34 000001D8 5F                  <1>         pop     edi
    35 000001D9 5E                  <1>         pop     esi
    36 000001DA 5A                  <1>         pop     edx
    37 000001DB 59                  <1>         pop     ecx
    38 000001DC 5B                  <1>         pop     ebx
    39 000001DD 58                  <1>         pop     eax
    40                              <1> 
    41 000001DE 89EC                <1>         mov     esp, ebp
    42 000001E0 5D                  <1>         pop     ebp
    43                              <1> 
    44 000001E1 C3                  <1>         ret
    31                                  %include    "../modules/protect/draw_str.s"
     1                              <1> draw_str:
     2                              <1> 
     3 000001E2 55                  <1>         push    ebp
     4 000001E3 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 000001E5 50                  <1>         push    eax
     7 000001E6 53                  <1>         push    ebx
     8 000001E7 51                  <1>         push    ecx
     9 000001E8 52                  <1>         push    edx
    10 000001E9 56                  <1>         push    esi
    11                              <1> 
    12 000001EA 8B4D08              <1>         mov     ecx, [ebp + 8]
    13 000001ED 8B550C              <1>         mov     edx, [ebp + 12]
    14 000001F0 0FB75D10            <1>         movzx   ebx, word [ebp + 16]
    15 000001F4 8B7514              <1>         mov     esi, [ebp + 20]
    16                              <1> 
    17 000001F7 FC                  <1>         cld
    18                              <1> .10L:
    19                              <1> 
    20 000001F8 AC                  <1>         lodsb
    21 000001F9 3C00                <1>         cmp     al, 0
    22 000001FB 7425                <1>         je      .10E
    23                              <1> 
    24 000001FD 50535251E8D3FEFFFF- <1>         cdecl   draw_char, ecx, edx, ebx, eax
    24 00000206 6683C410            <1>
    25                              <1> 
    26 0000020A 41                  <1>         inc     ecx
    27 0000020B 83F950              <1>         cmp     ecx, 80
    28 0000020E 7C10                <1>         jl      .12E
    29 00000210 B900000000          <1>         mov     ecx, 0
    30 00000215 42                  <1>         inc     edx
    31 00000216 83FA1E              <1>         cmp     edx, 30
    32 00000219 7C05                <1>         jl      .12E
    33 0000021B BA00000000          <1>         mov     edx, 0
    34                              <1> 
    35                              <1> .12E:
    36 00000220 EBD6                <1>         jmp     .10L
    37                              <1> .10E:
    38                              <1> 
    39 00000222 5E                  <1>         pop     esi
    40 00000223 5A                  <1>         pop     edx
    41 00000224 59                  <1>         pop     ecx
    42 00000225 5B                  <1>         pop     ebx
    43 00000226 58                  <1>         pop     eax
    44                              <1> 
    45 00000227 89EC                <1>         mov     esp, ebp
    46 00000229 5D                  <1>         pop     ebp
    47                              <1> 
    48 0000022A C3                  <1>         ret
    32                                  
    33 0000022B 00<rept>                        times KERNEL_SIZE -($ - $$) db 0
