     1                                  %include    "../include/define.s"
     1                              <1>         BOOT_LOAD           equ     0x7C00
     2                              <1> 
     3                              <1>         BOOT_SIZE           equ     (1024 * 8)
     4                              <1>         SECT_SIZE           equ     (512)
     5                              <1>         BOOT_SECT           equ     (BOOT_SIZE / SECT_SIZE)
     6                              <1>         BOOT_END            equ     (BOOT_LOAD + BOOT_SIZE)
     7                              <1> 
     8                              <1>         E820_RECORD_SIZE    equ     20
     9                              <1> 
    10                              <1>         KERNEL_LOAD         equ     0x0010_1000
    11                              <1> 
    12                              <1>         KERNEL_SIZE         equ     (1024 * 8)
    13                              <1>         KERNEL_SECT         equ     (KERNEL_SIZE / SECT_SIZE)
     2                                  %include    "../include/macro.s"
     1                              <1> %macro  cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep  %0 -1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate -1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if  1 < %0
    12                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> struc drive
    18 00000000 <res 00000002>      <1>         .no     resw    1
    19 00000002 <res 00000002>      <1>         .cyln   resw    1
    20 00000004 <res 00000002>      <1>         .head   resw    1
    21 00000006 <res 00000002>      <1>         .sect   resw    1
    22                              <1> endstruc
     3                                  
     4                                          ORG     KERNEL_LOAD
     5                                  
     6                                  [BITS 32]
     7                                  
     8                                  kernel:
     9                                  
    10 00000000 BE007E0000                      mov     esi, BOOT_LOAD + SECT_SIZE
    11 00000005 0FB706                          movzx   eax, word [esi + 0]
    12 00000008 0FB75E02                        movzx   ebx, word [esi + 2]
    13 0000000C C1E004                          shl     eax, 4
    14 0000000F 01D8                            add     eax, ebx
    15 00000011 A3[90000000]                    mov     [FONT_ADR], eax
    16                                  
    17 00000016 6A41680F0100006A00-     		cdecl	draw_char, 0, 0, 0x010F, 'A'
    17 0000001F 6A00E8F30000006683-
    17 00000028 C410               
    18 0000002A 6A42680F0100006A00-     		cdecl	draw_char, 1, 0, 0x010F, 'B'
    18 00000033 6A01E8DF0000006683-
    18 0000003C C410               
    19 0000003E 6A43680F0100006A00-     		cdecl	draw_char, 2, 0, 0x010F, 'C'
    19 00000047 6A02E8CB0000006683-
    19 00000050 C410               
    20                                  
    21 00000052 6A3068020400006A00-     		cdecl	draw_char, 0, 0, 0x0402, '0'
    21 0000005B 6A00E8B70000006683-
    21 00000064 C410               
    22 00000066 6A3168120200006A00-     		cdecl	draw_char, 1, 0, 0x0212, '1'
    22 0000006F 6A01E8A30000006683-
    22 00000078 C410               
    23 0000007A 6A5F68120200006A00-     		cdecl	draw_char, 2, 0, 0x0212, '_'
    23 00000083 6A02E88F0000006683-
    23 0000008C C410               
    24                                  
    25 0000008E EBFE                            jmp     $
    26                                  
    27                                  ALIGN 4, db 0
    28 00000090 00000000                FONT_ADR:   dd 0
    29                                  
    30                                  %include    "../modules/protect/vga.s"
     1                              <1> vga_set_read_plane:
     2                              <1> 
     3 00000094 55                  <1>         push    ebp
     4 00000095 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000097 50                  <1>         push    eax
     7 00000098 52                  <1>         push    edx
     8                              <1> 
     9 00000099 8A6508              <1>         mov     ah, [ebp + 8]
    10 0000009C 80E403              <1>         and     ah, 0x03
    11 0000009F B004                <1>         mov     al, 0x04
    12 000000A1 66BACE03            <1>         mov     dx, 0x03CE
    13 000000A5 66EF                <1>         out     dx, ax
    14                              <1> 
    15 000000A7 5A                  <1>         pop     edx
    16 000000A8 58                  <1>         pop     eax
    17                              <1> 
    18 000000A9 89EC                <1>         mov     esp, ebp
    19 000000AB 5D                  <1>         pop     ebp
    20                              <1> 
    21 000000AC C3                  <1>         ret
    22                              <1> 
    23                              <1> 
    24                              <1> vga_set_write_plane:
    25                              <1> 
    26 000000AD 55                  <1>          push    ebp
    27 000000AE 89E5                <1>          mov     ebp, esp
    28                              <1>  
    29 000000B0 50                  <1>          push    eax
    30 000000B1 52                  <1>          push    edx
    31                              <1>  
    32 000000B2 8A6508              <1>          mov     ah, [ebp + 8]
    33 000000B5 80E40F              <1>          and     ah, 0x0F
    34 000000B8 B002                <1>          mov     al, 0x02
    35 000000BA 66BAC403            <1>          mov     dx, 0x03C4
    36 000000BE 66EF                <1>          out     dx, ax
    37                              <1>  
    38 000000C0 5A                  <1>          pop     edx
    39 000000C1 58                  <1>          pop     eax
    40                              <1>  
    41 000000C2 89EC                <1>          mov     esp, ebp
    42 000000C4 5D                  <1>          pop     ebp
    43                              <1>  
    44 000000C5 C3                  <1>          ret
    45                              <1> 
    46                              <1> 
    47                              <1> vram_font_copy:
    48                              <1> 
    49 000000C6 55                  <1>         push    ebp
    50 000000C7 89E5                <1>         mov     ebp, esp
    51                              <1> 
    52 000000C9 50                  <1>         push    eax
    53 000000CA 53                  <1>         push    ebx
    54 000000CB 51                  <1>         push    ecx
    55 000000CC 52                  <1>         push    edx
    56 000000CD 56                  <1>         push    esi
    57 000000CE 57                  <1>         push    edi
    58                              <1> 
    59 000000CF 8B7508              <1>         mov     esi, [ebp + 8]
    60 000000D2 8B7D0C              <1>         mov     edi, [ebp + 12]
    61 000000D5 0FB64510            <1>         movzx   eax, byte [ebp + 16]
    62 000000D9 0FB75D14            <1>         movzx   ebx, word [ebp + 20]
    63                              <1> 
    64 000000DD 84C7                <1>         test    bh, al
    65 000000DF 0F94C6              <1>         setz    dh
    66 000000E2 FECE                <1>         dec     dh
    67                              <1> 
    68 000000E4 84C3                <1>         test    bl, al
    69 000000E6 0F94C2              <1>         setz    dl
    70 000000E9 FECA                <1>         dec     dl
    71                              <1> 
    72 000000EB FC                  <1>         cld
    73                              <1> 
    74 000000EC B910000000          <1>         mov     ecx, 16
    75                              <1> .10L:
    76                              <1> 
    77 000000F1 AC                  <1>         lodsb
    78 000000F2 88C4                <1>         mov     ah, al
    79 000000F4 F6D4                <1>         not     ah
    80                              <1> 
    81 000000F6 20D0                <1>         and     al, dl
    82                              <1> 
    83 000000F8 F7C310000000        <1>         test    ebx, 0x0010
    84 000000FE 7404                <1>         jz      .11F
    85 00000100 2227                <1>         and     ah, [edi]
    86 00000102 EB02                <1>         jmp     .11E
    87                              <1> .11F:
    88                              <1> 
    89 00000104 20F4                <1>         and     ah, dh
    90                              <1> .11E:
    91                              <1> 
    92 00000106 08E0                <1>         or      al, ah
    93                              <1> 
    94 00000108 8807                <1>         mov     [edi], al
    95                              <1> 
    96 0000010A 83C750              <1>         add     edi, 80
    97 0000010D E2E2                <1>         loop    .10L
    98                              <1> .10E:
    99                              <1> 
   100 0000010F 5F                  <1>         pop     edi
   101 00000110 5E                  <1>         pop     esi
   102 00000111 5A                  <1>         pop     edx
   103 00000112 59                  <1>         pop     ecx
   104 00000113 5B                  <1>         pop     ebx
   105 00000114 58                  <1>         pop     eax
   106                              <1> 
   107 00000115 89EC                <1>         mov     esp, ebp
   108 00000117 5D                  <1>         pop     ebp
   109                              <1> 
   110 00000118 C3                  <1>         ret
    31                                  %include    "../modules/protect/draw_char.s"
     1                              <1> draw_char:
     2                              <1> 
     3 00000119 55                  <1>         push    ebp
     4 0000011A 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 0000011C 50                  <1>         push    eax
     7 0000011D 53                  <1>         push    ebx
     8 0000011E 51                  <1>         push    ecx
     9 0000011F 52                  <1>         push    edx
    10 00000120 56                  <1>         push    esi
    11 00000121 57                  <1>         push    edi
    12                              <1> 
    13 00000122 0FB67514            <1>         movzx   esi, byte [ebp + 20]
    14 00000126 C1E604              <1>         shl     esi, 4
    15 00000129 0335[90000000]      <1>         add     esi, [FONT_ADR]
    16                              <1> 
    17 0000012F 8B7D0C              <1>         mov     edi, [ebp + 12]
    18 00000132 C1E708              <1>         shl     edi, 8
    19 00000135 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA0000]
    20 0000013C 037D08              <1>         add     edi, [ebp + 8]
    21                              <1> 
    22 0000013F 0FB75D10            <1>         movzx   ebx, word [ebp + 16]
    23                              <1> 
    24 00000143 6A03E84AFFFFFF6683- <1>         cdecl   vga_set_read_plane, 0x03
    24 0000014C C404                <1>
    25 0000014E 6A08E858FFFFFF6683- <1>         cdecl   vga_set_write_plane, 0x08
    25 00000157 C404                <1>
    26 00000159 536A085756E863FFFF- <1>         cdecl   vram_font_copy, esi, edi, 0x08, ebx
    26 00000162 FF6683C410          <1>
    27                              <1> 
    28 00000167 6A02E826FFFFFF6683- <1>         cdecl   vga_set_read_plane, 0x02
    28 00000170 C404                <1>
    29 00000172 6A04E834FFFFFF6683- <1>         cdecl   vga_set_write_plane, 0x04
    29 0000017B C404                <1>
    30 0000017D 536A045756E83FFFFF- <1>         cdecl   vram_font_copy, esi, edi, 0x04, ebx
    30 00000186 FF6683C410          <1>
    31                              <1> 
    32 0000018B 6A01E802FFFFFF6683- <1>         cdecl   vga_set_read_plane, 0x01
    32 00000194 C404                <1>
    33 00000196 6A02E810FFFFFF6683- <1>         cdecl   vga_set_write_plane, 0x02
    33 0000019F C404                <1>
    34 000001A1 536A025756E81BFFFF- <1>         cdecl   vram_font_copy, esi, edi, 0x02, ebx
    34 000001AA FF6683C410          <1>
    35                              <1> 
    36 000001AF 6A00E8DEFEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x00
    36 000001B8 C404                <1>
    37 000001BA 6A01E8ECFEFFFF6683- <1>         cdecl   vga_set_write_plane, 0x01
    37 000001C3 C404                <1>
    38 000001C5 536A015756E8F7FEFF- <1>         cdecl   vram_font_copy, esi, edi, 0x01, ebx
    38 000001CE FF6683C410          <1>
    39                              <1> 
    40 000001D3 5F                  <1>         pop     edi
    41 000001D4 5E                  <1>         pop     esi
    42 000001D5 5A                  <1>         pop     edx
    43 000001D6 59                  <1>         pop     ecx
    44 000001D7 5B                  <1>         pop     ebx
    45 000001D8 58                  <1>         pop     eax
    46                              <1> 
    47 000001D9 89EC                <1>         mov     esp, ebp
    48 000001DB 5D                  <1>         pop     ebp
    49                              <1> 
    50 000001DC C3                  <1>         ret
    32                                  
    33 000001DD 00<rept>                        times KERNEL_SIZE -($ - $$) db 0
