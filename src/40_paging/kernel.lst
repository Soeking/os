     1                                  %define USE_SYSTEM_CALL
     2                                  %define USE_TEST_AND_SET
     3                                  
     4                                  %include    "../include/define.s"
     1                              <1>         BOOT_LOAD           equ     0x7C00
     2                              <1> 
     3                              <1>         BOOT_SIZE           equ     (1024 * 8)
     4                              <1>         SECT_SIZE           equ     (512)
     5                              <1>         BOOT_SECT           equ     (BOOT_SIZE / SECT_SIZE)
     6                              <1>         BOOT_END            equ     (BOOT_LOAD + BOOT_SIZE)
     7                              <1> 
     8                              <1>         E820_RECORD_SIZE    equ     20
     9                              <1> 
    10                              <1>         KERNEL_LOAD         equ     0x0010_1000
    11                              <1> 
    12                              <1>         KERNEL_SIZE         equ     (1024 * 8)
    13                              <1>         KERNEL_SECT         equ     (KERNEL_SIZE / SECT_SIZE)
    14                              <1> 
    15                              <1>         VECT_BASE           equ     0x0010_0000
    16                              <1> 
    17                              <1> 
    18                              <1>         STACK_BASE          equ     0x0010_3000
    19                              <1>         STACK_SIZE          equ     1024
    20                              <1> 
    21                              <1>         SP_TASK_0           equ     STACK_BASE + (STACK_SIZE * 1)
    22                              <1>         SP_TASK_1           equ     STACK_BASE + (STACK_SIZE * 2)
    23                              <1>         SP_TASK_2           equ     STACK_BASE + (STACK_SIZE * 3)
    24                              <1>         SP_TASK_3           equ     STACK_BASE + (STACK_SIZE * 4)
    25                              <1> 
    26                              <1>         CR3_BASE            equ     0x0010_5000
     5                                  %include    "../include/macro.s"
     1                              <1> %macro  cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep  %0 -1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate -1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if  1 < %0
    12                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> %macro  set_vect 1-*.nolist
    18                              <1> 		push	eax
    19                              <1> 		push	edi
    20                              <1> 
    21                              <1> 		mov		edi, VECT_BASE + (%1 * 8)
    22                              <1> 		mov		eax, %2
    23                              <1> 
    24                              <1> 	%if 3 == %0
    25                              <1> 		mov		[edi + 4], %3
    26                              <1> 	%endif
    27                              <1> 
    28                              <1>         mov		[edi + 0], ax
    29                              <1> 		shr		eax, 16 
    30                              <1> 		mov		[edi + 6], ax
    31                              <1> 
    32                              <1> 		pop		edi
    33                              <1> 		pop		eax
    34                              <1> %endmacro
    35                              <1> 
    36                              <1> %macro  outp 2
    37                              <1>         mov     al, %2
    38                              <1>         out     %1, al
    39                              <1> %endmacro
    40                              <1> 
    41                              <1> %macro  set_desc 2-*
    42                              <1>         push    eax
    43                              <1>         push    edi
    44                              <1> 
    45                              <1>         mov     edi, %1
    46                              <1>         mov     eax, %2
    47                              <1> 
    48                              <1>     %if 3 == %0
    49                              <1>         mov     [edi + 0], %3
    50                              <1>     %endif
    51                              <1> 
    52                              <1>         mov     [edi + 2], ax
    53                              <1>         shr     eax, 16
    54                              <1>         mov     [edi + 4], al
    55                              <1>         mov     [edi + 7], ah
    56                              <1> 
    57                              <1>         pop     edi
    58                              <1>         pop     eax
    59                              <1> %endmacro
    60                              <1> 
    61                              <1> %macro  set_gate 2-*
    62                              <1>         push    eax
    63                              <1>         push    edi
    64                              <1> 
    65                              <1>         mov     edi, %1
    66                              <1>         mov     eax, %2
    67                              <1> 
    68                              <1>         mov     [edi + 0], ax
    69                              <1>         shr     eax, 16
    70                              <1>         mov     [edi + 6], ax
    71                              <1> 
    72                              <1>         pop     edi
    73                              <1>         pop     eax
    74                              <1> %endmacro
    75                              <1> 
    76                              <1> struc drive
    77 00000000 <res 00000002>      <1>         .no         resw    1
    78 00000002 <res 00000002>      <1>         .cyln       resw    1
    79 00000004 <res 00000002>      <1>         .head       resw    1
    80 00000006 <res 00000002>      <1>         .sect       resw    1
    81                              <1> endstruc
    82                              <1> 
    83                              <1> %define		RING_ITEM_SIZE		(1 << 4)
    84                              <1> %define		RING_INDEX_MASK		(RING_ITEM_SIZE - 1)
    85                              <1> 
    86                              <1> struc ring_buff
    87 00000000 <res 00000004>      <1>         .rp         resd    1
    88 00000004 <res 00000004>      <1>         .wp         resd    1
    89 00000008 <res 00000010>      <1>         .item       resb    RING_ITEM_SIZE
    90                              <1> endstruc
    91                              <1> 
    92                              <1> struc rose
    93 00000000 <res 00000004>      <1>         .x0         resd    1
    94 00000004 <res 00000004>      <1>         .y0         resd    1
    95 00000008 <res 00000004>      <1>         .x1         resd    1
    96 0000000C <res 00000004>      <1>         .y1         resd    1
    97                              <1> 
    98 00000010 <res 00000004>      <1>         .n          resd    1
    99 00000014 <res 00000004>      <1>         .d          resd    1
   100                              <1> 
   101 00000018 <res 00000004>      <1>         .color_x    resd    1
   102 0000001C <res 00000004>      <1>         .color_y    resd    1
   103 00000020 <res 00000004>      <1>         .color_z    resd    1
   104 00000024 <res 00000004>      <1>         .color_s    resd    1
   105 00000028 <res 00000004>      <1>         .color_f    resd    1
   106 0000002C <res 00000004>      <1>         .color_b    resd    1
   107                              <1> 
   108 00000030 <res 00000010>      <1>         .title      resb    16
   109                              <1> endstruc
     6                                  
     7                                          ORG     KERNEL_LOAD
     8                                  
     9                                  [BITS 32]
    10                                  
    11                                  kernel:
    12                                  
    13 00000000 BE007E0000                      mov     esi, BOOT_LOAD + SECT_SIZE
    14 00000005 0FB706                          movzx   eax, word [esi + 0]
    15 00000008 0FB75E02                        movzx   ebx, word [esi + 2]
    16 0000000C C1E004                          shl     eax, 4
    17 0000000F 01D8                            add     eax, ebx
    18 00000011 A3[38020000]                    mov     [FONT_ADR], eax
    19                                  
    20                                          set_desc    GDT.tss_0, TSS_0
    20 00000016 50                  <1>  push eax
    20 00000017 57                  <1>  push edi
    20                              <1> 
    20 00000018 BF[C0050000]        <1>  mov edi, %1
    20 0000001D B8[40020000]        <1>  mov eax, %2
    20                              <1> 
    20                              <1>  %if 3 == %0
    20                              <1>  mov [edi + 0], %3
    20                              <1>  %endif
    20                              <1> 
    20 00000022 66894702            <1>  mov [edi + 2], ax
    20 00000026 C1E810              <1>  shr eax, 16
    20 00000029 884704              <1>  mov [edi + 4], al
    20 0000002C 886707              <1>  mov [edi + 7], ah
    20                              <1> 
    20 0000002F 5F                  <1>  pop edi
    20 00000030 58                  <1>  pop eax
    21                                          set_desc    GDT.tss_1, TSS_1
    21 00000031 50                  <1>  push eax
    21 00000032 57                  <1>  push edi
    21                              <1> 
    21 00000033 BF[C8050000]        <1>  mov edi, %1
    21 00000038 B8[18030000]        <1>  mov eax, %2
    21                              <1> 
    21                              <1>  %if 3 == %0
    21                              <1>  mov [edi + 0], %3
    21                              <1>  %endif
    21                              <1> 
    21 0000003D 66894702            <1>  mov [edi + 2], ax
    21 00000041 C1E810              <1>  shr eax, 16
    21 00000044 884704              <1>  mov [edi + 4], al
    21 00000047 886707              <1>  mov [edi + 7], ah
    21                              <1> 
    21 0000004A 5F                  <1>  pop edi
    21 0000004B 58                  <1>  pop eax
    22                                          set_desc    GDT.tss_2, TSS_2
    22 0000004C 50                  <1>  push eax
    22 0000004D 57                  <1>  push edi
    22                              <1> 
    22 0000004E BF[D0050000]        <1>  mov edi, %1
    22 00000053 B8[F0030000]        <1>  mov eax, %2
    22                              <1> 
    22                              <1>  %if 3 == %0
    22                              <1>  mov [edi + 0], %3
    22                              <1>  %endif
    22                              <1> 
    22 00000058 66894702            <1>  mov [edi + 2], ax
    22 0000005C C1E810              <1>  shr eax, 16
    22 0000005F 884704              <1>  mov [edi + 4], al
    22 00000062 886707              <1>  mov [edi + 7], ah
    22                              <1> 
    22 00000065 5F                  <1>  pop edi
    22 00000066 58                  <1>  pop eax
    23                                          set_desc    GDT.tss_3, TSS_3
    23 00000067 50                  <1>  push eax
    23 00000068 57                  <1>  push edi
    23                              <1> 
    23 00000069 BF[D8050000]        <1>  mov edi, %1
    23 0000006E B8[C8040000]        <1>  mov eax, %2
    23                              <1> 
    23                              <1>  %if 3 == %0
    23                              <1>  mov [edi + 0], %3
    23                              <1>  %endif
    23                              <1> 
    23 00000073 66894702            <1>  mov [edi + 2], ax
    23 00000077 C1E810              <1>  shr eax, 16
    23 0000007A 884704              <1>  mov [edi + 4], al
    23 0000007D 886707              <1>  mov [edi + 7], ah
    23                              <1> 
    23 00000080 5F                  <1>  pop edi
    23 00000081 58                  <1>  pop eax
    24                                  
    25                                          set_gate    GDT.call_gate, call_gate
    25 00000082 50                  <1>  push eax
    25 00000083 57                  <1>  push edi
    25                              <1> 
    25 00000084 BF[E0050000]        <1>  mov edi, %1
    25 00000089 B8[74120000]        <1>  mov eax, %2
    25                              <1> 
    25 0000008E 668907              <1>  mov [edi + 0], ax
    25 00000091 C1E810              <1>  shr eax, 16
    25 00000094 66894706            <1>  mov [edi + 6], ax
    25                              <1> 
    25 00000098 5F                  <1>  pop edi
    25 00000099 58                  <1>  pop eax
    26                                  
    27                                          set_desc    GDT.ldt, LDT, word LDT_LIMIT
    27 0000009A 50                  <1>  push eax
    27 0000009B 57                  <1>  push edi
    27                              <1> 
    27 0000009C BF[B8050000]        <1>  mov edi, %1
    27 000000A1 B8[EE050000]        <1>  mov eax, %2
    27                              <1> 
    27                              <1>  %if 3 == %0
    27 000000A6 66C7074700          <1>  mov [edi + 0], %3
    27                              <1>  %endif
    27                              <1> 
    27 000000AB 66894702            <1>  mov [edi + 2], ax
    27 000000AF C1E810              <1>  shr eax, 16
    27 000000B2 884704              <1>  mov [edi + 4], al
    27 000000B5 886707              <1>  mov [edi + 7], ah
    27                              <1> 
    27 000000B8 5F                  <1>  pop edi
    27 000000B9 58                  <1>  pop eax
    28                                  
    29 000000BA 0F0115[E8050000]                lgdt    [GDTR]
    30                                  
    31 000000C1 BC00341000                      mov     esp, SP_TASK_0
    32                                  
    33 000000C6 66B82000                        mov     ax, SS_TASK_0
    34 000000CA 0F00D8                          ltr     ax
    35                                  
    36 000000CD E8780E0000                      cdecl   init_int
    37 000000D2 E8F90F0000                      cdecl   init_pic
    38 000000D7 E8B4050000                      cdecl   init_page
    39                                  
    40 000000DC 5057BF00001000B8-               set_vect    0x00, int_zero_div
    40 000000E4 [B2100000]668907C1-
    40 000000EC E810668947065F58   
    41 000000F4 5057BF38001000B8-               set_vect    0x07, int_nm
    41 000000FC [DF120000]668907C1-
    41 00000104 E810668947065F58   
    42 0000010C 5057BF00011000B8-               set_vect    0x20, int_timer
    42 00000114 [36060000]668907C1-
    42 0000011C E810668947065F58   
    43 00000124 5057BF08011000B8-               set_vect    0x21, int_keyboard
    43 0000012C [3A110000]668907C1-
    43 00000134 E810668947065F58   
    44 0000013C 5057BF40011000B8-               set_vect    0x28, int_rtc
    44 00000144 [0F110000]668907C1-
    44 0000014C E810668947065F58   
    45 00000154 5057BF08041000B8-               set_vect    0x81, trap_gate_81, word 0xEF00
    45 0000015C [A4120000]66C74704-
    45 00000164 00EF668907C1E81066-
    45 0000016D 8947065F58         
    46 00000172 5057BF10041000B8-               set_vect    0x82, trap_gate_82, word 0xEF00
    46 0000017A [B2120000]66C74704-
    46 00000182 00EF668907C1E81066-
    46 0000018B 8947065F58         
    47                                  
    48 00000190 6A10E8640F00006683-             cdecl   rtc_int_en, 0x10
    48 00000199 C404               
    49 0000019B E88C100000                      cdecl   int_en_timer0
    50                                  
    51                                          outp    0x21, 0b1111_1000
    51 000001A0 B0F8                <1>  mov al, %2
    51 000001A2 E621                <1>  out %1, al
    52                                          outp    0xA1, 0b1111_1110
    52 000001A4 B0FE                <1>  mov al, %2
    52 000001A6 E6A1                <1>  out %1, al
    53                                  
    54 000001A8 B800501000                      mov     eax, CR3_BASE
    55 000001AD 0F22D8                          mov     cr3, eax
    56                                  
    57 000001B0 0F20C0                          mov     eax, cr0
    58 000001B3 0D00000080                      or      eax, (1 << 31)
    59 000001B8 0F22C0                          mov     cr0, eax
    60 000001BB EB00                            jmp     $ + 2
    61                                  
    62 000001BD FB                              sti
    63                                  
    64 000001BE 6A0D6A3FE841090000-             cdecl   draw_font, 63, 13
    64 000001C7 6683C408           
    65 000001CB 6A046A3FE8B7090000-             cdecl   draw_color_bar, 63, 4
    65 000001D4 6683C408           
    66 000001D8 68[20020000]680F01-             cdecl   draw_str, 25, 14, 0x010F, .s0
    66 000001E0 00006A0E6A19E86209-
    66 000001E9 00006683C410       
    67                                  
    68                                  .10L:
    69                                  
    70 000001EF E847100000                      cdecl   draw_rotation_bar
    71                                  
    72 000001F4 68[34020000]68-                 cdecl   ring_rd, _KEY_BUFF, .int_key
    72 000001FA [60110000]E8750F00-
    72 00000202 006683C408         
    73 00000207 83F800                          cmp     eax, 0
    74 0000020A 7412                            je      .10E
    75                                  
    76 0000020C 68[60110000]6A1D6A-             cdecl   draw_key, 2, 29, _KEY_BUFF
    76 00000214 02E8BF0F00006683C4-
    76 0000021D 0C                 
    77                                  .10E:
    78                                  
    79 0000021E EBCF                            jmp     .10L
    80                                  
    81 00000220 2048656C6C6F2C206B-     .s0 	db	" Hello, kernel! ", 0
    81 00000229 65726E656C212000   
    82                                  
    83 00000231 00<rept>                ALIGN 4, db 0
    84 00000234 00000000                .int_key    dd 0
    85                                  
    86                                  ALIGN 4, db 0
    87 00000238 00000000                FONT_ADR:   dd 0
    88 0000023C 00000000                RTC_TIME:   dd 0
    89                                  
    90                                  %include    "descriptor.s"
     1                              <1> TSS_0:
     2 00000240 00000000            <1> .link:          dd  0
     3 00000244 00321000            <1> .esp0:          dd  SP_TASK_0 - 512
     4 00000248 10000000            <1> .ss0:           dd  DS_KERNEL
     5 0000024C 00000000            <1> .esp1:          dd  0
     6 00000250 00000000            <1> .ss1:           dd  0
     7 00000254 00000000            <1> .esp2:          dd  0
     8 00000258 00000000            <1> .ss2:           dd  0
     9 0000025C 00501000            <1> .cr3:           dd  CR3_BASE
    10 00000260 00000000            <1> .eip:           dd  0
    11 00000264 00000000            <1> .eflags:        dd  0
    12 00000268 00000000            <1> .eax:           dd  0
    13 0000026C 00000000            <1> .ecx:           dd  0
    14 00000270 00000000            <1> .edx:           dd  0
    15 00000274 00000000            <1> .ebx:           dd  0
    16 00000278 00000000            <1> .esp:           dd  0
    17 0000027C 00000000            <1> .ebp:           dd  0
    18 00000280 00000000            <1> .esi:           dd  0
    19 00000284 00000000            <1> .edi:           dd  0
    20 00000288 00000000            <1> .es:            dd  0
    21 0000028C 00000000            <1> .cs:            dd  0
    22 00000290 00000000            <1> .ss:            dd  0
    23 00000294 00000000            <1> .ds:            dd  0
    24 00000298 00000000            <1> .fs:            dd  0
    25 0000029C 00000000            <1> .gs:            dd  0
    26 000002A0 00000000            <1> .ldt:           dd  0
    27 000002A4 00000000            <1> .io:            dd  0
    28 000002A8 00<rept>            <1> .fp_sava:   times 108 + 4 db 0
    29                              <1> 
    30                              <1> TSS_1:
    31 00000318 00000000            <1> .link:          dd  0
    32 0000031C 00361000            <1> .esp0:          dd  SP_TASK_1 - 512
    33 00000320 10000000            <1> .ss0:           dd  DS_KERNEL
    34 00000324 00000000            <1> .esp1:          dd  0
    35 00000328 00000000            <1> .ss1:           dd  0
    36 0000032C 00000000            <1> .esp2:          dd  0
    37 00000330 00000000            <1> .ss2:           dd  0
    38 00000334 00501000            <1> .cr3:           dd  CR3_BASE
    39 00000338 [DC060000]          <1> .eip:           dd  task_1
    40 0000033C 02020000            <1> .eflags:        dd  0x0202
    41 00000340 00000000            <1> .eax:           dd  0
    42 00000344 00000000            <1> .ecx:           dd  0
    43 00000348 00000000            <1> .edx:           dd  0
    44 0000034C 00000000            <1> .ebx:           dd  0
    45 00000350 00381000            <1> .esp:           dd  SP_TASK_1
    46 00000354 00000000            <1> .ebp:           dd  0
    47 00000358 00000000            <1> .esi:           dd  0
    48 0000035C 00000000            <1> .edi:           dd  0
    49 00000360 27000000            <1> .es:            dd  DS_TASK_1
    50 00000364 1F000000            <1> .cs:            dd  CS_TASK_1
    51 00000368 27000000            <1> .ss:            dd  DS_TASK_1
    52 0000036C 27000000            <1> .ds:            dd  DS_TASK_1
    53 00000370 27000000            <1> .fs:            dd  DS_TASK_1
    54 00000374 27000000            <1> .gs:            dd  DS_TASK_1
    55 00000378 18000000            <1> .ldt:           dd  SS_LDT
    56 0000037C 00000000            <1> .io:            dd  0
    57 00000380 00<rept>            <1> .fp_save:   times 108 + 4 db 0
    58                              <1> 
    59                              <1> TSS_2:
    60 000003F0 00000000            <1> .link:          dd  0
    61 000003F4 003A1000            <1> .esp0:          dd  SP_TASK_2 - 512
    62 000003F8 10000000            <1> .ss0:           dd  DS_KERNEL
    63 000003FC 00000000            <1> .esp1:          dd  0
    64 00000400 00000000            <1> .ss1:           dd  0
    65 00000404 00000000            <1> .esp2:          dd  0
    66 00000408 00000000            <1> .ss2:           dd  0
    67 0000040C 00501000            <1> .cr3:           dd  CR3_BASE
    68 00000410 [11070000]          <1> .eip:           dd  task_2
    69 00000414 02020000            <1> .eflags:        dd  0x0202
    70 00000418 00000000            <1> .eax:           dd  0
    71 0000041C 00000000            <1> .ecx:           dd  0
    72 00000420 00000000            <1> .edx:           dd  0
    73 00000424 00000000            <1> .ebx:           dd  0
    74 00000428 003C1000            <1> .esp:           dd  SP_TASK_2
    75 0000042C 00000000            <1> .ebp:           dd  0
    76 00000430 00000000            <1> .esi:           dd  0
    77 00000434 00000000            <1> .edi:           dd  0
    78 00000438 37000000            <1> .es:            dd  DS_TASK_2
    79 0000043C 2F000000            <1> .cs:            dd  CS_TASK_2
    80 00000440 37000000            <1> .ss:            dd  DS_TASK_2
    81 00000444 37000000            <1> .ds:            dd  DS_TASK_2
    82 00000448 37000000            <1> .fs:            dd  DS_TASK_2
    83 0000044C 37000000            <1> .gs:            dd  DS_TASK_2
    84 00000450 18000000            <1> .ldt:           dd  SS_LDT
    85 00000454 00000000            <1> .io:            dd  0
    86 00000458 00<rept>            <1> .fp_save:   times 108 + 4 db 0
    87                              <1> 
    88                              <1> TSS_3:
    89 000004C8 00000000            <1> .link:          dd  0
    90 000004CC 003E1000            <1> .esp0:          dd  SP_TASK_3 - 512
    91 000004D0 10000000            <1> .ss0:           dd  DS_KERNEL
    92 000004D4 00000000            <1> .esp1:          dd  0
    93 000004D8 00000000            <1> .ss1:           dd  0
    94 000004DC 00000000            <1> .esp2:          dd  0
    95 000004E0 00000000            <1> .ss2:           dd  0
    96 000004E4 00501000            <1> .cr3:           dd  CR3_BASE
    97 000004E8 [EC070000]          <1> .eip:           dd  task_3
    98 000004EC 02020000            <1> .eflags:        dd  0x0202
    99 000004F0 00000000            <1> .eax:           dd  0
   100 000004F4 00000000            <1> .ecx:           dd  0
   101 000004F8 00000000            <1> .edx:           dd  0
   102 000004FC 00000000            <1> .ebx:           dd  0
   103 00000500 00401000            <1> .esp:           dd  SP_TASK_3
   104 00000504 00000000            <1> .ebp:           dd  0
   105 00000508 00000000            <1> .esi:           dd  0
   106 0000050C 00000000            <1> .edi:           dd  0
   107 00000510 47000000            <1> .es:            dd  DS_TASK_3
   108 00000514 3F000000            <1> .cs:            dd  CS_TASK_3
   109 00000518 47000000            <1> .ss:            dd  DS_TASK_3
   110 0000051C 47000000            <1> .ds:            dd  DS_TASK_3
   111 00000520 47000000            <1> .fs:            dd  DS_TASK_3
   112 00000524 47000000            <1> .gs:            dd  DS_TASK_3
   113 00000528 18000000            <1> .ldt:           dd  SS_LDT
   114 0000052C 00000000            <1> .io:            dd  0
   115 00000530 00<rept>            <1> .fp_save:   times 108 + 4 db 0
   116                              <1> 
   117 000005A0 0000000000000000    <1> GDT:            dq  0x0000000000000000
   118 000005A8 FFFF0000009ACF00    <1> .cs_kernel:     dq  0x00CF9A000000FFFF
   119 000005B0 FFFF00000092CF00    <1> .ds_kernel:     dq  0x00CF92000000FFFF
   120 000005B8 0000000000820000    <1> .ldt            dq  0x0000820000000000
   121 000005C0 6700000000890000    <1> .tss_0:         dq  0x0000890000000067
   122 000005C8 6700000000890000    <1> .tss_1:         dq  0x0000890000000067
   123 000005D0 6700000000890000    <1> .tss_2:         dq  0x0000890000000067
   124 000005D8 6700000000890000    <1> .tss_3:         dq  0x0000890000000067
   125 000005E0 0000080004EC0000    <1> .call_gate:     dq  0x0000EC0400080000
   126                              <1> .end:
   127                              <1> 
   128                              <1> CS_KERNEL       equ .cs_kernel  - GDT
   129                              <1> DS_KERNEL       equ .ds_kernel  - GDT
   130                              <1> SS_LDT          equ .ldt        - GDT
   131                              <1> SS_TASK_0       equ .tss_0      - GDT
   132                              <1> SS_TASK_1       equ .tss_1      - GDT
   133                              <1> SS_TASK_2       equ .tss_2      - GDT
   134                              <1> SS_TASK_3       equ .tss_3      - GDT
   135                              <1> SS_GATE_0       equ .call_gate  - GDT
   136                              <1> 
   137 000005E8 4700                <1> GDTR:   dw      GDT.end - GDT - 1
   138 000005EA [A0050000]          <1>         dd      GDT
   139                              <1> 
   140 000005EE 0000000000000000    <1> LDT:            dq  0x0000000000000000
   141 000005F6 FFFF0000009ACF00    <1> .cs_task_0:     dq  0x00CF9A000000FFFF
   142 000005FE FFFF00000092CF00    <1> .ds_task_0:     dq  0x00CF92000000FFFF
   143 00000606 FFFF000000FACF00    <1> .cs_task_1:     dq  0x00CFFA000000FFFF
   144 0000060E FFFF000000F2CF00    <1> .ds_task_1:     dq  0x00CFF2000000FFFF
   145 00000616 FFFF000000FACF00    <1> .cs_task_2:     dq  0x00CFFA000000FFFF
   146 0000061E FFFF000000F2CF00    <1> .ds_task_2:     dq  0x00CFF2000000FFFF
   147 00000626 FFFF000000FACF00    <1> .cs_task_3:     dq  0x00CFFA000000FFFF
   148 0000062E FFFF000000F2CF00    <1> .ds_task_3:     dq  0x00CFF2000000FFFF
   149                              <1> .end:
   150                              <1> 
   151                              <1> CS_TASK_0       equ (.cs_task_0 - LDT) | 4
   152                              <1> DS_TASK_0       equ (.ds_task_0 - LDT) | 4
   153                              <1> CS_TASK_1       equ (.cs_task_1 - LDT) | 4 | 3
   154                              <1> DS_TASK_1       equ (.ds_task_1 - LDT) | 4 | 3
   155                              <1> CS_TASK_2       equ (.cs_task_2 - LDT) | 4 | 3
   156                              <1> DS_TASK_2       equ (.ds_task_2 - LDT) | 4 | 3
   157                              <1> CS_TASK_3       equ (.cs_task_3 - LDT) | 4 | 3
   158                              <1> DS_TASK_3       equ (.ds_task_3 - LDT) | 4 | 3
   159                              <1> 
   160                              <1> LDT_LIMIT       equ .end        - LDT - 1
    91                                  %include    "modules/int_timer.s"
     1                              <1> int_timer:
     2                              <1> 
     3 00000636 60                  <1>         pusha
     4 00000637 1E                  <1>         push    ds
     5 00000638 06                  <1>         push    es
     6                              <1> 
     7 00000639 66B81000            <1>         mov     ax, 0x0010
     8 0000063D 8ED8                <1>         mov     ds, ax
     9 0000063F 8EC0                <1>         mov     es, ax
    10                              <1> 
    11 00000641 FF05[8C060000]      <1>         inc     dword [TIMER_COUNT]
    12                              <1> 
    13                              <1>         outp    0x20, 0x20
    13 00000647 B020                <2>  mov al, %2
    13 00000649 E620                <2>  out %1, al
    14                              <1> 
    15 0000064B 660F00C8            <1>         str     ax
    16 0000064F 6683F820            <1>         cmp     ax, SS_TASK_0
    17 00000653 7415                <1>         je      .11L
    18 00000655 6683F828            <1>         cmp     ax, SS_TASK_1
    19 00000659 7418                <1>         je      .12L
    20 0000065B 6683F830            <1>         cmp     ax, SS_TASK_2
    21 0000065F 741B                <1>         je      .13L
    22                              <1> 
    23 00000661 EA000000002000      <1>         jmp     SS_TASK_0:0
    24 00000668 EB1B                <1>         jmp     .10E
    25                              <1> 
    26                              <1> .11L:
    27 0000066A EA000000002800      <1>         jmp     SS_TASK_1:0
    28 00000671 EB12                <1>         jmp     .10E
    29                              <1> 
    30                              <1> .12L:
    31 00000673 EA000000003000      <1>         jmp     SS_TASK_2:0
    32 0000067A EB09                <1>         jmp     .10E
    33                              <1> 
    34                              <1> .13L:
    35 0000067C EA000000003800      <1>         jmp     SS_TASK_3:0
    36 00000683 EB00                <1>         jmp     .10E
    37                              <1> 
    38                              <1> .10E:
    39                              <1> 
    40 00000685 07                  <1>         pop     es
    41 00000686 1F                  <1>         pop     ds
    42 00000687 61                  <1>         popa
    43                              <1> 
    44 00000688 CF                  <1>         iret
    45                              <1> 
    46 00000689 00<rept>            <1> ALIGN 4, db 0
    47 0000068C 00000000            <1> TIMER_COUNT     dd 0
    92                                  %include    "modules/paging.s"
     1                              <1> init_page:
     2                              <1> 
     3 00000690 60                  <1>         pusha
     4                              <1> 
     5 00000691 6800501000E8060000- <1>         cdecl   page_set_4m, CR3_BASE
     5 0000069A 006683C404          <1>
     6                              <1> 
     7 0000069F 61                  <1>         popa
     8                              <1> 
     9 000006A0 C3                  <1>         ret
    10                              <1> 
    11                              <1> 
    12                              <1> page_set_4m:
    13                              <1> 
    14 000006A1 55                  <1>         push    ebp
    15 000006A2 89E5                <1>         mov     ebp, esp
    16                              <1> 
    17 000006A4 60                  <1>         pusha
    18                              <1> 
    19 000006A5 FC                  <1>         cld
    20 000006A6 8B7D08              <1>         mov     edi, [ebp + 8]
    21 000006A9 B800000000          <1>         mov     eax, 0x00000000
    22 000006AE B900040000          <1>         mov     ecx, 1024
    23 000006B3 F3AB                <1>         rep stosd
    24                              <1> 
    25 000006B5 89F8                <1>         mov     eax, edi
    26 000006B7 2500F0FFFF          <1>         and     eax, ~0x0000_FFF
    27 000006BC 83C807              <1>         or      eax, 7
    28 000006BF 898700F0FFFF        <1>         mov     [edi - (1024 * 4)], eax
    29                              <1> 
    30 000006C5 B807000000          <1>         mov     eax, 0x00000007
    31 000006CA B900040000          <1>         mov     ecx, 1024
    32                              <1> 
    33                              <1> .10L:
    34 000006CF AB                  <1>         stosd
    35 000006D0 0500100000          <1>         add     eax, 0x00001000
    36 000006D5 E2F8                <1>         loop    .10L
    37                              <1> 
    38 000006D7 61                  <1>         popa
    39                              <1> 
    40 000006D8 89EC                <1>         mov     esp, ebp
    41 000006DA 5D                  <1>         pop     ebp
    42                              <1> 
    43 000006DB C3                  <1>         ret
    93                                  %include    "tasks/task_1.s"
     1                              <1> task_1:
     2                              <1> 
     3 000006DC 68[0A070000]6A076A- <1>         cdecl   draw_str, 63, 0, 0x07, .s0
     3 000006E4 006A3FE86104000066- <1>
     3 000006ED 83C410              <1>
     4                              <1> .10L:
     5                              <1> 
     6 000006F0 A1[3C020000]        <1>         mov     eax, [RTC_TIME]
     7 000006F5 5068000700006A006A- <1>         cdecl   draw_time, 72, 0, 0x0700, eax
     7 000006FE 48E8A50700006683C4- <1>
     7 00000707 10                  <1>
     8                              <1> 
     9 00000708 EBE6                <1>         jmp     .10L
    10                              <1> 
    11 0000070A 5461736B2D3100      <1> .s0     db  "Task-1", 0
    94                                  %include    "tasks/task_2.s"
     1                              <1> task_2:
     2                              <1> 
     3 00000711 68[DE070000]6A076A- <1>         cdecl   draw_str, 63, 1, 0x07, .s0
     3 00000719 016A3FE82C04000066- <1>
     3 00000722 83C410              <1>
     4                              <1> 
     5 00000725 DB05[CC070000]      <1>         fild    dword [.c1000]
     6 0000072B D9EB                <1>         fldpi
     7 0000072D DA35[D0070000]      <1>         fidiv   dword [.c180]
     8 00000733 D9EB                <1>         fldpi
     9 00000735 DCC0                <1>         fadd    st0, st0
    10 00000737 D9EE                <1>         fldz
    11                              <1> .10L:
    12                              <1> 
    13 00000739 D8C2                <1>         fadd    st0, st2
    14 0000073B D9F8                <1>         fprem
    15 0000073D D9C0                <1>         fld     st0
    16 0000073F D9FE                <1>         fsin
    17 00000741 D8CC                <1>         fmul    st0, st4
    18                              <1> 
    19 00000743 DF35[D4070000]      <1>         fbstp   [.bcd]
    20                              <1> 
    21 00000749 A1[D4070000]        <1>         mov     eax, [.bcd]
    22 0000074E 89C3                <1>         mov     ebx, eax
    23                              <1> 
    24 00000750 250F0F0000          <1>         and     eax, 0x0F0F
    25 00000755 0D30300000          <1>         or      eax, 0x3030
    26                              <1> 
    27 0000075A C1EB04              <1>         shr     ebx, 4
    28 0000075D 81E30F0F0000        <1>         and     ebx, 0x0F0F
    29 00000763 81CB30300000        <1>         or      ebx, 0x3030
    30                              <1> 
    31 00000769 883D[E6070000]      <1>         mov     [.s2 + 0], bh
    32 0000076F 8825[E8070000]      <1>         mov     [.s3 + 0], ah
    33 00000775 881D[E9070000]      <1>         mov     [.s3 + 1], bl
    34 0000077B A2[EA070000]        <1>         mov     [.s3 + 2], al
    35                              <1> 
    36 00000780 B807000000          <1>         mov     eax, 7
    37 00000785 0FA305[DD070000]    <1>         bt      [.bcd + 9], eax
    38 0000078C 7209                <1>         jc      .10F
    39                              <1> 
    40 0000078E C605[E5070000]2B    <1>         mov     [.s1 + 0], byte '+'
    41 00000795 EB07                <1>         jmp     .10E
    42                              <1> .10F:
    43                              <1> 
    44 00000797 C605[E5070000]2D    <1>         mov     [.s1 + 0], byte '-'
    45                              <1> .10E:
    46                              <1> 
    47 0000079E 68[E5070000]6A076A- <1>         cdecl   draw_str, 72, 1, 0x07, .s1
    47 000007A6 016A48E89F03000066- <1>
    47 000007AF 83C410              <1>
    48                              <1> 
    49 000007B2 B914000000          <1>         mov     ecx, 20
    50                              <1> 
    51                              <1> .20L:
    52 000007B7 A1[8C060000]        <1>         mov     eax, [TIMER_COUNT]
    53                              <1> .21L:
    54 000007BC 3905[8C060000]      <1>         cmp     [TIMER_COUNT], eax
    55 000007C2 74F8                <1>         je      .21L
    56 000007C4 E2F1                <1>         loop    .20L
    57                              <1> 
    58 000007C6 E96EFFFFFF          <1>         jmp     .10L
    59                              <1> 
    60 000007CB 00                  <1> ALIGN 4, db 0
    61 000007CC E8030000            <1> .c1000      dd  1000
    62 000007D0 B4000000            <1> .c180       dd  180
    63                              <1> 
    64 000007D4 00<rept>            <1> .bcd:   times 10 db 0x00
    65                              <1> 
    66 000007DE 5461736B2D3200      <1> .s0     db  "Task-2", 0
    67 000007E5 2D                  <1> .s1     db  "-"
    68 000007E6 302E                <1> .s2     db  "0."
    69 000007E8 30303000            <1> .s3     db  "000", 0
    95                                  %include    "tasks/task_3.s"
     1                              <1> task_3:
     2                              <1> 
     3 000007EC 89E5                <1>         mov     ebp, esp
     4                              <1> 
     5 000007EE 6A00                <1>         push    dword 0
     6 000007F0 6A00                <1>         push    dword 0
     7 000007F2 6A00                <1>         push    dword 0
     8 000007F4 6A00                <1>         push    dword 0
     9 000007F6 6A00                <1>         push    dword 0
    10                              <1> 
    11 000007F8 BE[EC080000]        <1>         mov     esi, DRAW_PARAM
    12                              <1> 
    13 000007FD 8B06                <1>         mov     eax, [esi + rose.x0]
    14 000007FF 8B5E04              <1>         mov     ebx, [esi + rose.y0]
    15                              <1> 
    16 00000802 C1E803              <1>         shr     eax, 3
    17 00000805 C1EB04              <1>         shr     ebx, 4
    18 00000808 4B                  <1>         dec     ebx
    19 00000809 8B4E24              <1>         mov     ecx, [esi + rose.color_s]
    20 0000080C 8D5630              <1>         lea     edx, [esi + rose.title]
    21                              <1> 
    22 0000080F 52515350E835030000- <1>         cdecl   draw_str, eax, ebx, ecx, edx
    22 00000818 6683C410            <1>
    23                              <1> 
    24 0000081C 8B06                <1>         mov     eax, [esi + rose.x0]
    25 0000081E 8B5E08              <1>         mov     ebx, [esi + rose.x1]
    26 00000821 29C3                <1>         sub     ebx, eax
    27 00000823 D1EB                <1>         shr     ebx, 1
    28 00000825 01C3                <1>         add     ebx, eax
    29 00000827 895DFC              <1>         mov     [ebp - 4], ebx
    30                              <1> 
    31 0000082A 8B4604              <1>         mov     eax, [esi + rose.y0]
    32 0000082D 8B5E0C              <1>         mov     ebx, [esi + rose.y1]
    33 00000830 29C3                <1>         sub     ebx, eax
    34 00000832 D1EB                <1>         shr     ebx, 1
    35 00000834 01C3                <1>         add     ebx, eax
    36 00000836 895DF8              <1>         mov     [ebp - 8], ebx
    37                              <1> 
    38 00000839 8B06                <1>         mov     eax, [esi + rose.x0]
    39 0000083B 8B5DF8              <1>         mov     ebx, [ebp - 8]
    40 0000083E 8B4E08              <1>         mov     ecx, [esi + rose.x1]
    41                              <1> 
    42 00000841 FF761853515350E87C- <1>         cdecl   draw_line, eax, ebx, ecx, ebx, dword [esi + rose.color_x]
    42 0000084A 0400006683C414      <1>
    43                              <1> 
    44 00000851 8B4604              <1>         mov     eax, [esi + rose.y0]
    45 00000854 8B5DFC              <1>         mov     ebx, [ebp - 4]
    46 00000857 8B4E0C              <1>         mov     ecx, [esi + rose.y1]
    47                              <1> 
    48 0000085A FF761C51535053E863- <1>         cdecl   draw_line, ebx, eax, ebx, ecx, dword [esi + rose.color_y]
    48 00000863 0400006683C414      <1>
    49                              <1> 
    50 0000086A 8B06                <1>         mov     eax, [esi + rose.x0]
    51 0000086C 8B5E04              <1>         mov     ebx, [esi + rose.y0]
    52 0000086F 8B4E08              <1>         mov     ecx, [esi + rose.x1]
    53 00000872 8B560C              <1>         mov     edx, [esi + rose.y1]
    54                              <1> 
    55 00000875 FF762052515350E8F7- <1>         cdecl   draw_rect, eax, ebx, ecx, edx, dword [esi + rose.color_z]
    55 0000087E 0400006683C414      <1>
    56                              <1> 
    57 00000885 8B4608              <1>         mov     eax, [esi + rose.x1]
    58 00000888 2B06                <1>         sub     eax, [esi + rose.x0]
    59 0000088A D1E8                <1>         shr     eax, 1
    60 0000088C 89C3                <1>         mov     ebx, eax
    61 0000088E C1EB04              <1>         shr     ebx, 4
    62 00000891 29D8                <1>         sub     eax, ebx
    63                              <1> 
    64 00000893 FF7614FF761050E88D- <1>         cdecl   fpu_rose_init, eax, dword [esi + rose.n], dword [esi + rose.d]
    64 0000089C 0000006683C40C      <1>
    65                              <1> 
    66                              <1> .10L:
    67                              <1> 
    68 000008A3 8D5DF4              <1>         lea     ebx, [ebp - 12]
    69 000008A6 8D4DF0              <1>         lea     ecx, [ebp - 16]
    70 000008A9 8B45EC              <1>         mov     eax, [ebp - 20]
    71                              <1> 
    72 000008AC 505153E89200000066- <1>         cdecl   fpu_rose_update, ebx, ecx, eax
    72 000008B5 83C40C              <1>
    73                              <1> 
    74 000008B8 BA00000000          <1>         mov     edx, 0
    75 000008BD 40                  <1>         inc     eax
    76 000008BE BBA08C0000          <1>         mov     ebx, 360 * 100
    77 000008C3 F7F3                <1>         div     ebx
    78 000008C5 8955EC              <1>         mov     [ebp - 20], edx
    79                              <1> 
    80 000008C8 8B4DF4              <1>         mov     ecx, [ebp - 12]
    81 000008CB 8B55F0              <1>         mov     edx, [ebp - 16]
    82                              <1> 
    83 000008CE 034DFC              <1>         add     ecx, [ebp - 4]
    84 000008D1 0355F8              <1>         add     edx, [ebp - 8]
    85                              <1> 
    86 000008D4 8B5E28              <1>         mov     ebx, [esi + rose.color_f]
    87 000008D7 CD82                <1>         int     0x82
    88                              <1> 
    89 000008D9 6A02E88E0A00006683- <1>         cdecl   wait_tick, 2
    89 000008E2 C404                <1>
    90                              <1> 
    91 000008E4 8B5E2C              <1>         mov     ebx, [esi + rose.color_b]
    92 000008E7 CD82                <1>         int     0x82
    93                              <1> 
    94 000008E9 EBB8                <1>         jmp     .10L
    95                              <1> 
    96 000008EB 00                  <1> ALIGN 4, db 0
    97                              <1> DRAW_PARAM:
    98                              <1>     istruc  rose
    99 000008EC 10000000            <1>         at  rose.x0,        dd      16
   100 000008F0 20000000            <1>         at  rose.y0,        dd      32
   101 000008F4 A0010000            <1>         at  rose.x1,        dd      416
   102 000008F8 B0010000            <1>         at  rose.y1,        dd      432
   103                              <1> 
   104 000008FC 02000000            <1>         at  rose.n,         dd      2
   105 00000900 01000000            <1>         at  rose.d,         dd      1
   106                              <1> 
   107 00000904 07000000            <1>         at  rose.color_x,   dd      0x0007
   108 00000908 07000000            <1>         at  rose.color_y,   dd      0x0007
   109 0000090C 0F000000            <1>         at  rose.color_z,   dd      0x000F
   110 00000910 0F030000            <1>         at  rose.color_s,   dd      0x030F
   111 00000914 0F000000            <1>         at  rose.color_f,   dd      0x000F
   112 00000918 03000000            <1>         at  rose.color_b,   dd      0x0003
   113                              <1> 
   114 0000091C 5461736B2D3300      <1>         at  rose.title,     db      "Task-3", 0
   115 00000923 00<rept>            <1>     iend
   116                              <1> 
   117                              <1> 
   118                              <1> fpu_rose_init:
   119                              <1> 
   120 0000092C 55                  <1>         push    ebp
   121 0000092D 89E5                <1>         mov     ebp, esp
   122                              <1> 
   123 0000092F 68B4000000          <1>         push    dword 180
   124                              <1> 
   125 00000934 D9EB                <1>         fldpi
   126 00000936 DA75FC              <1>         fidiv   dword [ebp - 4]
   127 00000939 DB450C              <1>         fild    dword [ebp + 12]
   128 0000093C DA7510              <1>         fidiv   dword [ebp + 16]
   129 0000093F DB4508              <1>         fild    dword [ebp + 8]
   130                              <1> 
   131 00000942 89EC                <1>         mov     esp, ebp
   132 00000944 5D                  <1>         pop     ebp
   133                              <1> 
   134 00000945 C3                  <1>         ret
   135                              <1> 
   136                              <1> 
   137                              <1> fpu_rose_update:
   138                              <1> 
   139 00000946 55                  <1>         push    ebp
   140 00000947 89E5                <1>         mov     ebp, esp
   141                              <1> 
   142 00000949 50                  <1>         push    eax
   143 0000094A 53                  <1>         push    ebx
   144                              <1> 
   145 0000094B 8B4508              <1>         mov     eax, [ebp + 8]
   146 0000094E 8B5D0C              <1>         mov     ebx, [ebp + 12]
   147                              <1> 
   148 00000951 DB4510              <1>         fild    dword [ebp + 16]
   149 00000954 D8CB                <1>         fmul    st0, st3
   150 00000956 D9C0                <1>         fld     st0
   151                              <1> 
   152 00000958 D9FB                <1>         fsincos
   153 0000095A D9CA                <1>         fxch    st2
   154 0000095C D8CC                <1>         fmul    st0, st4
   155 0000095E D9FE                <1>         fsin
   156 00000960 D8CB                <1>         fmul    st0, st3
   157                              <1> 
   158 00000962 D9CA                <1>         fxch    st2
   159 00000964 D8CA                <1>         fmul    st0, st2
   160 00000966 DB18                <1>         fistp   dword [eax]
   161                              <1> 
   162 00000968 DEC9                <1>         fmulp   st1, st0
   163 0000096A D9E0                <1>         fchs
   164 0000096C DB1B                <1>         fistp   dword [ebx]
   165                              <1> 
   166 0000096E 5B                  <1>         pop     ebx
   167 0000096F 58                  <1>         pop     eax
   168                              <1> 
   169 00000970 89EC                <1>         mov     esp, ebp
   170 00000972 5D                  <1>         pop     ebp
   171                              <1> 
   172 00000973 C3                  <1>         ret
    96                                  
    97                                  %include    "../modules/protect/vga.s"
     1                              <1> vga_set_read_plane:
     2                              <1> 
     3 00000974 55                  <1>         push    ebp
     4 00000975 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000977 50                  <1>         push    eax
     7 00000978 52                  <1>         push    edx
     8                              <1> 
     9 00000979 8A6508              <1>         mov     ah, [ebp + 8]
    10 0000097C 80E403              <1>         and     ah, 0x03
    11 0000097F B004                <1>         mov     al, 0x04
    12 00000981 66BACE03            <1>         mov     dx, 0x03CE
    13 00000985 66EF                <1>         out     dx, ax
    14                              <1> 
    15 00000987 5A                  <1>         pop     edx
    16 00000988 58                  <1>         pop     eax
    17                              <1> 
    18 00000989 89EC                <1>         mov     esp, ebp
    19 0000098B 5D                  <1>         pop     ebp
    20                              <1> 
    21 0000098C C3                  <1>         ret
    22                              <1> 
    23                              <1> 
    24                              <1> vga_set_write_plane:
    25                              <1> 
    26 0000098D 55                  <1>          push    ebp
    27 0000098E 89E5                <1>          mov     ebp, esp
    28                              <1>  
    29 00000990 50                  <1>          push    eax
    30 00000991 52                  <1>          push    edx
    31                              <1>  
    32 00000992 8A6508              <1>          mov     ah, [ebp + 8]
    33 00000995 80E40F              <1>          and     ah, 0x0F
    34 00000998 B002                <1>          mov     al, 0x02
    35 0000099A 66BAC403            <1>          mov     dx, 0x03C4
    36 0000099E 66EF                <1>          out     dx, ax
    37                              <1>  
    38 000009A0 5A                  <1>          pop     edx
    39 000009A1 58                  <1>          pop     eax
    40                              <1>  
    41 000009A2 89EC                <1>          mov     esp, ebp
    42 000009A4 5D                  <1>          pop     ebp
    43                              <1>  
    44 000009A5 C3                  <1>          ret
    45                              <1> 
    46                              <1> 
    47                              <1> vram_font_copy:
    48                              <1> 
    49 000009A6 55                  <1>         push    ebp
    50 000009A7 89E5                <1>         mov     ebp, esp
    51                              <1> 
    52 000009A9 50                  <1>         push    eax
    53 000009AA 53                  <1>         push    ebx
    54 000009AB 51                  <1>         push    ecx
    55 000009AC 52                  <1>         push    edx
    56 000009AD 56                  <1>         push    esi
    57 000009AE 57                  <1>         push    edi
    58                              <1> 
    59 000009AF 8B7508              <1>         mov     esi, [ebp + 8]
    60 000009B2 8B7D0C              <1>         mov     edi, [ebp + 12]
    61 000009B5 0FB64510            <1>         movzx   eax, byte [ebp + 16]
    62 000009B9 0FB75D14            <1>         movzx   ebx, word [ebp + 20]
    63                              <1> 
    64 000009BD 84C7                <1>         test    bh, al
    65 000009BF 0F94C6              <1>         setz    dh
    66 000009C2 FECE                <1>         dec     dh
    67                              <1> 
    68 000009C4 84C3                <1>         test    bl, al
    69 000009C6 0F94C2              <1>         setz    dl
    70 000009C9 FECA                <1>         dec     dl
    71                              <1> 
    72 000009CB FC                  <1>         cld
    73                              <1> 
    74 000009CC B910000000          <1>         mov     ecx, 16
    75                              <1> .10L:
    76                              <1> 
    77 000009D1 AC                  <1>         lodsb
    78 000009D2 88C4                <1>         mov     ah, al
    79 000009D4 F6D4                <1>         not     ah
    80                              <1> 
    81 000009D6 20D0                <1>         and     al, dl
    82                              <1> 
    83 000009D8 F7C310000000        <1>         test    ebx, 0x0010
    84 000009DE 7404                <1>         jz      .11F
    85 000009E0 2227                <1>         and     ah, [edi]
    86 000009E2 EB02                <1>         jmp     .11E
    87                              <1> .11F:
    88                              <1> 
    89 000009E4 20F4                <1>         and     ah, dh
    90                              <1> .11E:
    91                              <1> 
    92 000009E6 08E0                <1>         or      al, ah
    93                              <1> 
    94 000009E8 8807                <1>         mov     [edi], al
    95                              <1> 
    96 000009EA 83C750              <1>         add     edi, 80
    97 000009ED E2E2                <1>         loop    .10L
    98                              <1> .10E:
    99                              <1> 
   100 000009EF 5F                  <1>         pop     edi
   101 000009F0 5E                  <1>         pop     esi
   102 000009F1 5A                  <1>         pop     edx
   103 000009F2 59                  <1>         pop     ecx
   104 000009F3 5B                  <1>         pop     ebx
   105 000009F4 58                  <1>         pop     eax
   106                              <1> 
   107 000009F5 89EC                <1>         mov     esp, ebp
   108 000009F7 5D                  <1>         pop     ebp
   109                              <1> 
   110 000009F8 C3                  <1>         ret
   111                              <1> 
   112                              <1> 
   113                              <1> 
   114                              <1> vram_bit_copy:
   115                              <1> 
   116 000009F9 55                  <1>         push    ebp
   117 000009FA 89E5                <1>         mov     ebp, esp
   118                              <1> 
   119 000009FC 50                  <1>         push    eax
   120 000009FD 53                  <1>         push    ebx
   121 000009FE 57                  <1>         push    edi
   122                              <1> 
   123 000009FF 8B7D0C              <1>         mov     edi, [ebp + 12]
   124 00000A02 0FB64510            <1>         movzx   eax, byte [ebp + 16]
   125 00000A06 0FB75D14            <1>         movzx   ebx, word [ebp + 20]
   126                              <1> 
   127 00000A0A 84C3                <1>         test    bl, al
   128 00000A0C 0F94C3              <1>         setz    bl
   129 00000A0F FECB                <1>         dec     bl
   130                              <1> 
   131 00000A11 8A4508              <1>         mov     al, [ebp + 8]
   132 00000A14 88C4                <1>         mov     ah, al
   133 00000A16 F6D4                <1>         not     ah
   134                              <1> 
   135 00000A18 2227                <1>         and     ah, [edi]
   136 00000A1A 20D8                <1>         and     al, bl
   137 00000A1C 08E0                <1>         or      al, ah
   138                              <1> 
   139 00000A1E 8807                <1>         mov     [edi], al
   140                              <1> 
   141 00000A20 5F                  <1>         pop     edi
   142 00000A21 5B                  <1>         pop     ebx
   143 00000A22 58                  <1>         pop     eax
   144                              <1> 
   145 00000A23 89EC                <1>         mov     esp, ebp
   146 00000A25 5D                  <1>         pop     ebp
   147                              <1> 
   148 00000A26 C3                  <1>         ret
    98                                  %include    "../modules/protect/draw_char.s"
     1                              <1> draw_char:
     2                              <1> 
     3 00000A27 55                  <1>         push    ebp
     4 00000A28 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000A2A 50                  <1>         push    eax
     7 00000A2B 53                  <1>         push    ebx
     8 00000A2C 51                  <1>         push    ecx
     9 00000A2D 52                  <1>         push    edx
    10 00000A2E 56                  <1>         push    esi
    11 00000A2F 57                  <1>         push    edi
    12                              <1> 
    13                              <1> %ifdef  USE_TEST_AND_SET
    14 00000A30 68[040B0000]E88508- <1>         cdecl   test_and_set, IN_USE
    14 00000A38 00006683C404        <1>
    15                              <1> %endif
    16                              <1> 
    17 00000A3E 0FB67514            <1>         movzx   esi, byte [ebp + 20]
    18 00000A42 C1E604              <1>         shl     esi, 4
    19 00000A45 0335[38020000]      <1>         add     esi, [FONT_ADR]
    20                              <1> 
    21 00000A4B 8B7D0C              <1>         mov     edi, [ebp + 12]
    22 00000A4E C1E708              <1>         shl     edi, 8
    23 00000A51 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA0000]
    24 00000A58 037D08              <1>         add     edi, [ebp + 8]
    25                              <1> 
    26 00000A5B 0FB75D10            <1>         movzx   ebx, word [ebp + 16]
    27                              <1> 
    28 00000A5F 6A03E80EFFFFFF6683- <1>         cdecl   vga_set_read_plane, 0x03
    28 00000A68 C404                <1>
    29 00000A6A 6A08E81CFFFFFF6683- <1>         cdecl   vga_set_write_plane, 0x08
    29 00000A73 C404                <1>
    30 00000A75 536A085756E827FFFF- <1>         cdecl   vram_font_copy, esi, edi, 0x08, ebx
    30 00000A7E FF6683C410          <1>
    31                              <1> 
    32 00000A83 6A02E8EAFEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x02
    32 00000A8C C404                <1>
    33 00000A8E 6A04E8F8FEFFFF6683- <1>         cdecl   vga_set_write_plane, 0x04
    33 00000A97 C404                <1>
    34 00000A99 536A045756E803FFFF- <1>         cdecl   vram_font_copy, esi, edi, 0x04, ebx
    34 00000AA2 FF6683C410          <1>
    35                              <1> 
    36 00000AA7 6A01E8C6FEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x01
    36 00000AB0 C404                <1>
    37 00000AB2 6A02E8D4FEFFFF6683- <1>         cdecl   vga_set_write_plane, 0x02
    37 00000ABB C404                <1>
    38 00000ABD 536A025756E8DFFEFF- <1>         cdecl   vram_font_copy, esi, edi, 0x02, ebx
    38 00000AC6 FF6683C410          <1>
    39                              <1> 
    40 00000ACB 6A00E8A2FEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x00
    40 00000AD4 C404                <1>
    41 00000AD6 6A01E8B0FEFFFF6683- <1>         cdecl   vga_set_write_plane, 0x01
    41 00000ADF C404                <1>
    42 00000AE1 536A015756E8BBFEFF- <1>         cdecl   vram_font_copy, esi, edi, 0x01, ebx
    42 00000AEA FF6683C410          <1>
    43                              <1> 
    44                              <1> %ifdef  USE_TEST_AND_SET
    45 00000AEF C705[040B0000]0000- <1>         mov     [IN_USE], dword 0
    45 00000AF7 0000                <1>
    46                              <1> %endif
    47                              <1> 
    48 00000AF9 5F                  <1>         pop     edi
    49 00000AFA 5E                  <1>         pop     esi
    50 00000AFB 5A                  <1>         pop     edx
    51 00000AFC 59                  <1>         pop     ecx
    52 00000AFD 5B                  <1>         pop     ebx
    53 00000AFE 58                  <1>         pop     eax
    54                              <1> 
    55 00000AFF 89EC                <1>         mov     esp, ebp
    56 00000B01 5D                  <1>         pop     ebp
    57                              <1> 
    58 00000B02 C3                  <1>         ret
    59                              <1> 
    60                              <1> %ifdef USE_TEST_AND_SET
    61 00000B03 00                  <1> ALIGN 4, db 0
    62 00000B04 00000000            <1> IN_USE:	dd	0
    63                              <1> %endif
    99                                  %include    "../modules/protect/draw_font.s"
     1                              <1> draw_font:
     2                              <1> 
     3 00000B08 55                  <1>         push    ebp
     4 00000B09 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000B0B 50                  <1>         push    eax
     7 00000B0C 53                  <1>         push    ebx
     8 00000B0D 51                  <1>         push    ecx
     9 00000B0E 52                  <1>         push    edx
    10 00000B0F 56                  <1>         push    esi
    11 00000B10 57                  <1>         push    edi
    12                              <1> 
    13 00000B11 8B7508              <1>         mov     esi, [ebp + 8]
    14 00000B14 8B7D0C              <1>         mov     edi, [ebp + 12]
    15                              <1> 
    16 00000B17 B900000000          <1>         mov     ecx, 0
    17 00000B1C 81F900010000        <1> .10L:   cmp     ecx, 256
    18 00000B22 731F                <1>         jae     .10E
    19                              <1> 
    20 00000B24 89C8                <1>         mov     eax, ecx
    21 00000B26 83E00F              <1>         and     eax, 0x0F
    22 00000B29 01F0                <1>         add     eax, esi
    23                              <1> 
    24 00000B2B 89CB                <1>         mov     ebx, ecx
    25 00000B2D C1EB04              <1>         shr     ebx, 4
    26 00000B30 01FB                <1>         add     ebx, edi
    27                              <1> 
    28 00000B32 516A075350E8EBFEFF- <1>         cdecl   draw_char, eax, ebx, 0x07, ecx
    28 00000B3B FF6683C410          <1>
    29                              <1> 
    30 00000B40 41                  <1>         inc     ecx
    31 00000B41 EBD9                <1>         jmp     .10L
    32                              <1> .10E:
    33                              <1> 
    34 00000B43 5F                  <1>         pop     edi
    35 00000B44 5E                  <1>         pop     esi
    36 00000B45 5A                  <1>         pop     edx
    37 00000B46 59                  <1>         pop     ecx
    38 00000B47 5B                  <1>         pop     ebx
    39 00000B48 58                  <1>         pop     eax
    40                              <1> 
    41 00000B49 89EC                <1>         mov     esp, ebp
    42 00000B4B 5D                  <1>         pop     ebp
    43                              <1> 
    44 00000B4C C3                  <1>         ret
   100                                  %include    "../modules/protect/draw_str.s"
     1                              <1> draw_str:
     2                              <1> 
     3 00000B4D 55                  <1>         push    ebp
     4 00000B4E 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000B50 50                  <1>         push    eax
     7 00000B51 53                  <1>         push    ebx
     8 00000B52 51                  <1>         push    ecx
     9 00000B53 52                  <1>         push    edx
    10 00000B54 56                  <1>         push    esi
    11                              <1> 
    12 00000B55 8B4D08              <1>         mov     ecx, [ebp + 8]
    13 00000B58 8B550C              <1>         mov     edx, [ebp + 12]
    14 00000B5B 0FB75D10            <1>         movzx   ebx, word [ebp + 16]
    15 00000B5F 8B7514              <1>         mov     esi, [ebp + 20]
    16                              <1> 
    17 00000B62 FC                  <1>         cld
    18                              <1> .10L:
    19                              <1> 
    20 00000B63 AC                  <1>         lodsb
    21 00000B64 3C00                <1>         cmp     al, 0
    22 00000B66 741A                <1>         je      .10E
    23                              <1> 
    24                              <1> %ifdef  USE_SYSTEM_CALL
    25 00000B68 CD81                <1>         int     0x81
    26                              <1> %else
    27                              <1>         cdecl   draw_char, ecx, edx, ebx, eax
    28                              <1> %endif
    29                              <1> 
    30 00000B6A 41                  <1>         inc     ecx
    31 00000B6B 83F950              <1>         cmp     ecx, 80
    32 00000B6E 7C10                <1>         jl      .12E
    33 00000B70 B900000000          <1>         mov     ecx, 0
    34 00000B75 42                  <1>         inc     edx
    35 00000B76 83FA1E              <1>         cmp     edx, 30
    36 00000B79 7C05                <1>         jl      .12E
    37 00000B7B BA00000000          <1>         mov     edx, 0
    38                              <1> 
    39                              <1> .12E:
    40 00000B80 EBE1                <1>         jmp     .10L
    41                              <1> .10E:
    42                              <1> 
    43 00000B82 5E                  <1>         pop     esi
    44 00000B83 5A                  <1>         pop     edx
    45 00000B84 59                  <1>         pop     ecx
    46 00000B85 5B                  <1>         pop     ebx
    47 00000B86 58                  <1>         pop     eax
    48                              <1> 
    49 00000B87 89EC                <1>         mov     esp, ebp
    50 00000B89 5D                  <1>         pop     ebp
    51                              <1> 
    52 00000B8A C3                  <1>         ret
   101                                  %include    "../modules/protect/draw_color_bar.s"
     1                              <1> draw_color_bar:
     2                              <1> 
     3 00000B8B 55                  <1>         push    ebp
     4 00000B8C 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000B8E 50                  <1>         push    eax
     7 00000B8F 53                  <1>         push    ebx
     8 00000B90 51                  <1>         push    ecx
     9 00000B91 52                  <1>         push    edx
    10 00000B92 56                  <1>         push    esi
    11 00000B93 57                  <1>         push    edi
    12                              <1> 
    13 00000B94 8B7508              <1>         mov     esi, [ebp + 8]
    14 00000B97 8B7D0C              <1>         mov     edi, [ebp + 12]
    15                              <1> 
    16 00000B9A B900000000          <1>         mov     ecx, 0
    17 00000B9F 83F910              <1> .10L:   cmp     ecx, 16
    18 00000BA2 732E                <1>         jae     .10E
    19                              <1> 
    20 00000BA4 89C8                <1>         mov     eax, ecx
    21 00000BA6 83E001              <1>         and     eax, 0x01
    22 00000BA9 C1E003              <1>         shl     eax, 3
    23 00000BAC 01F0                <1>         add     eax, esi
    24                              <1> 
    25 00000BAE 89CB                <1>         mov     ebx, ecx
    26 00000BB0 D1EB                <1>         shr     ebx, 1
    27 00000BB2 01FB                <1>         add     ebx, edi
    28                              <1> 
    29 00000BB4 89CA                <1>         mov     edx, ecx
    30 00000BB6 D1E2                <1>         shl     edx, 1
    31 00000BB8 8B92[E60B0000]      <1>         mov     edx, [.t0 + edx]
    32                              <1> 
    33 00000BBE 68[DC0B0000]525350- <1>         cdecl   draw_str, eax, ebx, edx, .s0
    33 00000BC6 E882FFFFFF6683C410  <1>
    34                              <1> 
    35 00000BCF 41                  <1>         inc     ecx
    36 00000BD0 EBCD                <1>         jmp     .10L
    37                              <1> .10E:
    38                              <1> 
    39 00000BD2 5F                  <1>         pop     edi
    40 00000BD3 5E                  <1>         pop     esi
    41 00000BD4 5A                  <1>         pop     edx
    42 00000BD5 59                  <1>         pop     ecx
    43 00000BD6 5B                  <1>         pop     ebx
    44 00000BD7 58                  <1>         pop     eax
    45                              <1> 
    46 00000BD8 89EC                <1>         mov     esp, ebp
    47 00000BDA 5D                  <1>         pop     ebp
    48                              <1> 
    49 00000BDB C3                  <1>         ret
    50                              <1> 
    51 00000BDC 202020202020202020- <1> .s0     db  '         ', 0
    51 00000BE5 00                  <1>
    52                              <1> 
    53 00000BE6 00000008            <1> .t0     dw  0x0000, 0x0800
    54 00000BEA 00010009            <1> 		dw	0x0100, 0x0900
    55 00000BEE 0002000A            <1> 		dw	0x0200, 0x0A00
    56 00000BF2 0003000B            <1> 		dw	0x0300, 0x0B00
    57 00000BF6 0004000C            <1> 		dw	0x0400, 0x0C00
    58 00000BFA 0005000D            <1> 		dw	0x0500, 0x0D00
    59 00000BFE 0006000E            <1> 		dw	0x0600, 0x0E00
    60 00000C02 0007000F            <1> 		dw	0x0700, 0x0F00
   102                                  %include    "../modules/protect/draw_pixel.s"
     1                              <1> draw_pixel:
     2                              <1> 
     3 00000C06 55                  <1>         push    ebp
     4 00000C07 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000C09 50                  <1>         push    eax
     7 00000C0A 53                  <1>         push    ebx
     8 00000C0B 51                  <1>         push    ecx
     9 00000C0C 57                  <1>         push    edi
    10                              <1> 
    11 00000C0D 8B7D0C              <1>         mov     edi, [ebp + 12]
    12 00000C10 C1E704              <1>         shl     edi, 4
    13 00000C13 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA_0000]
    14                              <1> 
    15 00000C1A 8B5D08              <1>         mov     ebx, [ebp + 8]
    16 00000C1D 89D9                <1>         mov     ecx, ebx
    17 00000C1F C1EB03              <1>         shr     ebx, 3
    18 00000C22 01DF                <1>         add     edi, ebx
    19                              <1> 
    20 00000C24 83E107              <1>         and     ecx, 0x07
    21 00000C27 BB80000000          <1>         mov     ebx, 0x80
    22 00000C2C D3EB                <1>         shr     ebx, cl
    23                              <1> 
    24 00000C2E 8B4D10              <1>         mov     ecx, [ebp + 16]
    25                              <1> 
    26 00000C31 6A03E83CFDFFFF6683- <1>         cdecl   vga_set_read_plane, 0x03
    26 00000C3A C404                <1>
    27 00000C3C 6A08E84AFDFFFF6683- <1>         cdecl   vga_set_write_plane, 0x08
    27 00000C45 C404                <1>
    28 00000C47 516A085753E8A8FDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x08, ecx
    28 00000C50 FF6683C410          <1>
    29                              <1> 
    30 00000C55 6A02E818FDFFFF6683- <1>         cdecl   vga_set_read_plane, 0x02
    30 00000C5E C404                <1>
    31 00000C60 6A04E826FDFFFF6683- <1>         cdecl   vga_set_write_plane, 0x04
    31 00000C69 C404                <1>
    32 00000C6B 516A045753E884FDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x04, ecx
    32 00000C74 FF6683C410          <1>
    33                              <1> 
    34 00000C79 6A01E8F4FCFFFF6683- <1>         cdecl   vga_set_read_plane, 0x01
    34 00000C82 C404                <1>
    35 00000C84 6A02E802FDFFFF6683- <1>         cdecl   vga_set_write_plane, 0x02
    35 00000C8D C404                <1>
    36 00000C8F 516A025753E860FDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x02, ecx
    36 00000C98 FF6683C410          <1>
    37                              <1> 
    38 00000C9D 6A00E8D0FCFFFF6683- <1>         cdecl   vga_set_read_plane, 0x00
    38 00000CA6 C404                <1>
    39 00000CA8 6A01E8DEFCFFFF6683- <1>         cdecl   vga_set_write_plane, 0x01
    39 00000CB1 C404                <1>
    40 00000CB3 516A015753E83CFDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x01, ecx
    40 00000CBC FF6683C410          <1>
    41                              <1> 
    42 00000CC1 5F                  <1>         pop     edi
    43 00000CC2 59                  <1>         pop     ecx
    44 00000CC3 5B                  <1>         pop     ebx
    45 00000CC4 58                  <1>         pop     eax
    46                              <1> 
    47 00000CC5 89EC                <1>         mov     esp, ebp
    48 00000CC7 5D                  <1>         pop     ebp
    49                              <1> 
    50 00000CC8 C3                  <1>         ret
   103                                  %include    "../modules/protect/draw_line.s"
     1                              <1> draw_line:
     2                              <1> 
     3 00000CC9 55                  <1>         push    ebp
     4 00000CCA 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000CCC 6A00                <1>         push    dword 0
     7 00000CCE 6A00                <1>         push    dword 0
     8 00000CD0 6A00                <1>         push    dword 0
     9 00000CD2 6A00                <1>         push    dword 0
    10 00000CD4 6A00                <1>         push    dword 0
    11 00000CD6 6A00                <1>         push    dword 0
    12 00000CD8 6A00                <1>         push    dword 0
    13                              <1> 
    14 00000CDA 50                  <1>         push    eax
    15 00000CDB 53                  <1>         push    ebx
    16 00000CDC 51                  <1>         push    ecx
    17 00000CDD 52                  <1>         push    edx
    18 00000CDE 56                  <1>         push    esi
    19 00000CDF 57                  <1>         push    edi
    20                              <1> 
    21 00000CE0 8B4508              <1>         mov     eax, [ebp + 8]
    22 00000CE3 8B5D10              <1>         mov     ebx, [ebp + 16]
    23 00000CE6 29C3                <1>         sub     ebx, eax
    24 00000CE8 7D09                <1>         jge     .10F
    25                              <1> 
    26 00000CEA F7DB                <1>         neg     ebx
    27 00000CEC BEFFFFFFFF          <1>         mov     esi, -1
    28 00000CF1 EB05                <1>         jmp     .10E
    29                              <1> .10F:
    30                              <1> 
    31 00000CF3 BE01000000          <1>         mov     esi, 1
    32                              <1> .10E:
    33                              <1> 
    34 00000CF8 8B4D0C              <1>         mov     ecx, [ebp + 12]
    35 00000CFB 8B5514              <1>         mov     edx, [ebp + 20]
    36 00000CFE 29CA                <1>         sub     edx, ecx
    37 00000D00 7D09                <1>         jge     .20F
    38                              <1> 
    39 00000D02 F7DA                <1>         neg     edx
    40 00000D04 BFFFFFFFFF          <1>         mov     edi, -1
    41 00000D09 EB05                <1>         jmp     .20E
    42                              <1> .20F:
    43                              <1> 
    44 00000D0B BF01000000          <1>         mov     edi, 1
    45                              <1> .20E:
    46                              <1> 
    47 00000D10 8945F8              <1>         mov     [ebp - 8], eax
    48 00000D13 895DF4              <1>         mov     [ebp - 12], ebx
    49 00000D16 8975F0              <1>         mov     [ebp - 16], esi
    50                              <1> 
    51 00000D19 894DEC              <1>         mov     [ebp - 20], ecx
    52 00000D1C 8955E8              <1>         mov     [ebp - 24], edx
    53 00000D1F 897DE4              <1>         mov     [ebp - 28], edi
    54                              <1> 
    55 00000D22 39D3                <1>         cmp     ebx, edx
    56 00000D24 7F08                <1>         jg      .22F
    57                              <1> 
    58 00000D26 8D75EC              <1>         lea     esi, [ebp - 20]
    59 00000D29 8D7DF8              <1>         lea     edi, [ebp - 8]
    60                              <1> 
    61 00000D2C EB06                <1>         jmp     .22E
    62                              <1> .22F:
    63                              <1> 
    64 00000D2E 8D75F8              <1>         lea     esi, [ebp - 8]
    65 00000D31 8D7DEC              <1>         lea     edi, [ebp - 20]
    66                              <1> .22E:
    67                              <1> 
    68 00000D34 8B4EFC              <1>         mov     ecx, [esi - 4]
    69 00000D37 83F900              <1>         cmp     ecx, 0
    70 00000D3A 7505                <1>         jnz     .30E
    71 00000D3C B901000000          <1>         mov     ecx, 1
    72                              <1> .30E:
    73                              <1> 
    74                              <1> .50L:
    75                              <1> 
    76                              <1> %ifdef  USE_SYSTEM_CALL
    77 00000D41 89C8                <1>         mov     eax, ecx
    78                              <1> 
    79 00000D43 8B5D18              <1>         mov     ebx, [ebp + 24]
    80 00000D46 8B4DF8              <1>         mov     ecx, [ebp - 8]
    81 00000D49 8B55EC              <1>         mov     edx, [ebp - 20]
    82 00000D4C CD82                <1>         int     0x82
    83                              <1> 
    84 00000D4E 89C1                <1>         mov     ecx, eax
    85                              <1> %else
    86                              <1>         cdecl   draw_pixel, dword [ebp - 8], dword [ebp - 20], dword [ebp + 24]
    87                              <1> %endif
    88                              <1> 
    89 00000D50 8B46F8              <1>         mov     eax, [esi - 8]
    90 00000D53 0106                <1>         add     [esi - 0], eax
    91                              <1> 
    92 00000D55 8B45FC              <1>         mov     eax, [ebp - 4]
    93 00000D58 0347FC              <1>         add     eax, [edi - 4]
    94 00000D5B 8B5EFC              <1>         mov     ebx, [esi - 4]
    95                              <1> 
    96 00000D5E 39D8                <1>         cmp     eax, ebx
    97 00000D60 7C07                <1>         jl      .52E
    98 00000D62 29D8                <1>         sub     eax, ebx
    99                              <1> 
   100 00000D64 8B5FF8              <1>         mov     ebx, [edi - 8]
   101 00000D67 011F                <1>         add     [edi - 0], ebx
   102                              <1> .52E:
   103                              <1> 
   104 00000D69 8945FC              <1>         mov     [ebp - 4], eax
   105                              <1> 
   106 00000D6C E2D3                <1>         loop    .50L
   107                              <1> .50E:
   108                              <1> 
   109 00000D6E 5F                  <1>         pop     edi
   110 00000D6F 5E                  <1>         pop     esi
   111 00000D70 5A                  <1>         pop     edx
   112 00000D71 59                  <1>         pop     ecx
   113 00000D72 5B                  <1>         pop     ebx
   114 00000D73 58                  <1>         pop     eax
   115                              <1> 
   116 00000D74 89EC                <1>         mov     esp, ebp
   117 00000D76 5D                  <1>         pop     ebp
   118                              <1> 
   119 00000D77 C3                  <1>         ret
   104                                  %include    "../modules/protect/draw_rect.s"
     1                              <1> draw_rect:
     2                              <1> 
     3 00000D78 55                  <1>         push    ebp
     4 00000D79 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000D7B 50                  <1>         push    eax
     7 00000D7C 53                  <1>         push    ebx
     8 00000D7D 51                  <1>         push    ecx
     9 00000D7E 52                  <1>         push    edx
    10 00000D7F 56                  <1>         push    esi
    11                              <1> 
    12 00000D80 8B4508              <1>         mov     eax, [ebp + 8]
    13 00000D83 8B5D0C              <1>         mov     ebx, [ebp + 12]
    14 00000D86 8B4D10              <1>         mov     ecx, [ebp + 16]
    15 00000D89 8B5514              <1>         mov     edx, [ebp + 20]
    16 00000D8C 8B7518              <1>         mov     esi, [ebp + 24]
    17                              <1> 
    18 00000D8F 39C8                <1>         cmp     eax, ecx
    19 00000D91 7C01                <1>         jl      .10E
    20 00000D93 91                  <1>         xchg    eax, ecx
    21                              <1> .10E:
    22                              <1> 
    23 00000D94 39D3                <1>         cmp     ebx, edx
    24 00000D96 7C02                <1>         jl      .20E
    25 00000D98 87DA                <1>         xchg    ebx, edx
    26                              <1> .20E:
    27                              <1> 
    28 00000D9A 5653515350E825FFFF- <1>         cdecl   draw_line, eax, ebx, ecx, ebx, esi
    28 00000DA3 FF6683C414          <1>
    29 00000DA8 5652505350E817FFFF- <1>         cdecl   draw_line, eax, ebx, eax, edx, esi
    29 00000DB1 FF6683C414          <1>
    30                              <1> 
    31 00000DB6 4A                  <1>         dec     edx
    32 00000DB7 5652515250E808FFFF- <1>         cdecl   draw_line, eax, edx, ecx, edx, esi
    32 00000DC0 FF6683C414          <1>
    33 00000DC5 42                  <1>         inc     edx
    34                              <1> 
    35 00000DC6 4A                  <1>         dec     edx
    36 00000DC7 5652515351E8F8FEFF- <1>         cdecl   draw_line, ecx, ebx, ecx, edx, esi
    36 00000DD0 FF6683C414          <1>
    37                              <1> 
    38 00000DD5 5E                  <1>         pop     esi
    39 00000DD6 5A                  <1>         pop     edx
    40 00000DD7 59                  <1>         pop     ecx
    41 00000DD8 5B                  <1>         pop     ebx
    42 00000DD9 58                  <1>         pop     eax
    43                              <1> 
    44 00000DDA 89EC                <1>         mov     esp, ebp
    45 00000DDC 5D                  <1>         pop     ebp
    46                              <1> 
    47 00000DDD C3                  <1>         ret
   105                                  %include    "../modules/protect/itoa.s"
     1                              <1> itoa:
     2                              <1> 
     3 00000DDE 55                  <1>         push    ebp
     4 00000DDF 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000DE1 50                  <1>         push    eax
     7 00000DE2 53                  <1>         push    ebx
     8 00000DE3 51                  <1>         push    ecx
     9 00000DE4 52                  <1>         push    edx
    10 00000DE5 56                  <1>         push    esi
    11 00000DE6 57                  <1>         push    edi
    12                              <1> 
    13 00000DE7 8B4508              <1>         mov     eax, [ebp + 8]
    14 00000DEA 8B750C              <1>         mov     esi, [ebp + 12]
    15 00000DED 8B4D10              <1>         mov     ecx, [ebp + 16]
    16                              <1> 
    17 00000DF0 89F7                <1>         mov     edi, esi
    18 00000DF2 01CF                <1>         add     edi, ecx
    19 00000DF4 4F                  <1>         dec     edi
    20                              <1> 
    21 00000DF5 8B5D18              <1>         mov     ebx, [ebp + 24]
    22                              <1> 
    23 00000DF8 F7C301000000        <1>         test    ebx, 0b0001
    24 00000DFE 7408                <1> .10Q:   je      .10E
    25 00000E00 83F800              <1>         cmp     eax, 0
    26 00000E03 7D03                <1> .12Q:   jge     .12E
    27 00000E05 83CB02              <1>         or      ebx, 0b0010
    28                              <1> .12E:
    29                              <1> .10E:
    30                              <1> 
    31 00000E08 F7C302000000        <1>         test    ebx, 0b0010
    32 00000E0E 7410                <1> .20Q:   je      .20E
    33 00000E10 83F800              <1>         cmp     eax, 0
    34 00000E13 7D07                <1> .22Q:   jge     .22F
    35 00000E15 F7D8                <1>         neg     eax
    36 00000E17 C6062D              <1>         mov     [esi], byte '-'
    37 00000E1A EB03                <1>         jmp     .22E
    38                              <1> .22F:
    39                              <1> 
    40 00000E1C C6062B              <1>         mov     [esi], byte '+'
    41                              <1> .22E:
    42 00000E1F 49                  <1>         dec     ecx
    43                              <1> .20E:
    44                              <1> 
    45 00000E20 8B5D14              <1>         mov     ebx, [ebp + 20]
    46                              <1> .30L:
    47                              <1> 
    48 00000E23 BA00000000          <1>         mov     edx, 0
    49 00000E28 F7F3                <1>         div     ebx
    50                              <1> 
    51 00000E2A 89D6                <1>         mov     esi, edx
    52 00000E2C 8A96[580E0000]      <1>         mov     dl, byte [.ascii + esi]
    53                              <1> 
    54 00000E32 8817                <1>         mov     [edi], dl
    55 00000E34 4F                  <1>         dec     edi
    56                              <1> 
    57 00000E35 83F800              <1>         cmp     eax, 0
    58 00000E38 E0E9                <1>         loopnz  .30L
    59                              <1> .30E:
    60                              <1> 
    61 00000E3A 83F900              <1>         cmp     ecx, 0
    62 00000E3D 740F                <1> .40Q:   je      .40E
    63 00000E3F B020                <1>         mov     al, ' '
    64 00000E41 6667837E1804        <1>         cmp     [bp + 24], word 0b0100
    65 00000E47 7502                <1> .42Q:   jne     .42E
    66 00000E49 B030                <1>         mov     al, '0'
    67                              <1> .42E:
    68 00000E4B FD                  <1>         std
    69 00000E4C F3AA                <1>         rep stosb
    70                              <1> .40E:
    71                              <1> 
    72 00000E4E 5F                  <1>         pop     edi
    73 00000E4F 5E                  <1>         pop     esi
    74 00000E50 5A                  <1>         pop     edx
    75 00000E51 59                  <1>         pop     ecx
    76 00000E52 5B                  <1>         pop     ebx
    77 00000E53 58                  <1>         pop     eax
    78                              <1> 
    79 00000E54 89EC                <1>         mov     esp, ebp
    80 00000E56 5D                  <1>         pop     ebp
    81                              <1> 
    82 00000E57 C3                  <1>         ret
    83                              <1> 
    84 00000E58 303132333435363738- <1> .ascii  db      "0123456789ABCDEF"
    84 00000E61 39414243444546      <1>
   106                                  %include    "../modules/protect/rtc.s"
     1                              <1> rtc_get_time:
     2                              <1> 
     3 00000E68 55                  <1>         push    ebp
     4 00000E69 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000E6B 53                  <1>         push    ebx
     7                              <1> 
     8 00000E6C B00A                <1>         mov     al, 0x0A
     9 00000E6E E670                <1>         out     0x70, al
    10 00000E70 E471                <1>         in      al, 0x71
    11 00000E72 A880                <1>         test    al, 0x80
    12 00000E74 7407                <1>         je      .10F
    13 00000E76 B801000000          <1>         mov     eax, 1
    14 00000E7B EB27                <1>         jmp     .10E
    15                              <1> .10F:
    16                              <1> 
    17 00000E7D B004                <1>         mov     al, 0x04
    18 00000E7F E670                <1>         out     0x70, al
    19 00000E81 E471                <1>         in      al, 0x71
    20                              <1> 
    21 00000E83 C1E008              <1>         shl     eax, 8
    22                              <1> 
    23 00000E86 B002                <1>         mov     al, 0x02
    24 00000E88 E670                <1>         out     0x70, al
    25 00000E8A E471                <1>         in      al, 0x71
    26                              <1> 
    27 00000E8C C1E008              <1>         shl     eax, 8
    28                              <1> 
    29 00000E8F B000                <1>         mov     al, 0x00
    30 00000E91 E670                <1>         out     0x70, al
    31 00000E93 E471                <1>         in      al, 0x71
    32                              <1> 
    33 00000E95 25FFFFFF00          <1>         and     eax, 0x00_FF_FF_FF
    34                              <1> 
    35 00000E9A 8B5D08              <1>         mov     ebx, [ebp + 8]
    36 00000E9D 8903                <1>         mov     [ebx], eax
    37                              <1> 
    38 00000E9F B800000000          <1>         mov     eax, 0
    39                              <1> .10E:
    40                              <1> 
    41 00000EA4 5B                  <1>         pop     ebx
    42                              <1> 
    43 00000EA5 89EC                <1>         mov     esp, ebp
    44 00000EA7 5D                  <1>         pop     ebp
    45                              <1> 
    46 00000EA8 C3                  <1>         ret
   107                                  %include    "../modules/protect/draw_time.s"
     1                              <1> draw_time:
     2                              <1> 
     3 00000EA9 55                  <1>         push    ebp
     4 00000EAA 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00000EAC 50                  <1>         push    eax
     7 00000EAD 53                  <1>         push    ebx
     8                              <1> 
     9 00000EAE 8B4514              <1>         mov     eax, [ebp + 20]
    10 00000EB1 3B05[300F0000]      <1>         cmp     eax, [.last]
    11 00000EB7 7468                <1>         je      .10E
    12                              <1> 
    13 00000EB9 A3[300F0000]        <1>         mov     [.last], eax
    14                              <1> 
    15 00000EBE BB00000000          <1>         mov     ebx, 0
    16 00000EC3 0FB6D8              <1>         movzx   ebx, al
    17 00000EC6 6A046A106A0268-     <1>         cdecl   itoa, ebx, .sec, 2, 16, 0b0100
    17 00000ECD [3E0F0000]53E807FF- <1>
    17 00000ED5 FFFF6683C414        <1>
    18                              <1> 
    19 00000EDB 88E3                <1>         mov     bl, ah
    20 00000EDD 6A046A106A0268-     <1>         cdecl   itoa, ebx, .min, 2, 16, 0b0100
    20 00000EE4 [3B0F0000]53E8F0FE- <1>
    20 00000EEC FFFF6683C414        <1>
    21                              <1> 
    22 00000EF2 C1E810              <1>         shr     eax, 16
    23 00000EF5 6A046A106A0268-     <1>         cdecl   itoa, eax, .hour, 2, 16, 0b0100
    23 00000EFC [380F0000]50E8D8FE- <1>
    23 00000F04 FFFF6683C414        <1>
    24                              <1> 
    25 00000F0A 68[380F0000]FF7510- <1>         cdecl   draw_str, dword [ebp + 8], dword [ebp + 12], dword [ebp + 16], .hour
    25 00000F12 FF750CFF7508E830FC- <1>
    25 00000F1B FFFF6683C410        <1>
    26                              <1> 
    27                              <1> .10E:
    28                              <1> 
    29 00000F21 5B                  <1>         pop     ebx
    30 00000F22 58                  <1>         pop     eax
    31                              <1> 
    32 00000F23 89EC                <1>         mov     esp, ebp
    33 00000F25 5D                  <1>         pop     ebp
    34                              <1> 
    35 00000F26 C3                  <1>         ret
    36                              <1> 
    37 00000F27 00                  <1> ALIGN 2, db 0
    38 00000F28 0000000000000000    <1> .temp   dq  0
    39 00000F30 0000000000000000    <1> .last   dq  0
    40 00000F38 5A5A3A              <1> .hour   db  "ZZ:"
    41 00000F3B 5A5A3A              <1> .min    db  "ZZ:"
    42 00000F3E 5A5A00              <1> .sec    db  "ZZ", 0
   108                                  %include    "../modules/protect/interrupt.s"
     1 00000F41 90<rept>            <1> ALIGN 4
     2 00000F44 FF07                <1> IDTR:   dw      8 * 256 -1
     3 00000F46 00001000            <1>         dd      VECT_BASE
     4                              <1> 
     5                              <1> init_int:
     6                              <1> 
     7 00000F4A 50                  <1>         push    eax
     8 00000F4B 53                  <1>         push    ebx
     9 00000F4C 51                  <1>         push    ecx
    10 00000F4D 57                  <1>         push    edi
    11                              <1> 
    12 00000F4E 8D05[94100000]      <1>         lea     eax, [int_default]
    13 00000F54 BB008E0800          <1>         mov     ebx, 0x0008_8E00
    14 00000F59 6693                <1>         xchg    ax, bx
    15                              <1> 
    16 00000F5B B900010000          <1>         mov     ecx, 256
    17 00000F60 BF00001000          <1>         mov     edi, VECT_BASE
    18                              <1> 
    19                              <1> .10L:
    20                              <1> 
    21 00000F65 891F                <1>         mov     [edi + 0], ebx
    22 00000F67 894704              <1>         mov     [edi + 4], eax
    23 00000F6A 83C708              <1>         add     edi, 8
    24 00000F6D E2F6                <1>         loop    .10L
    25                              <1> 
    26 00000F6F 0F011D[440F0000]    <1>         lidt    [IDTR]
    27                              <1> 
    28 00000F76 5F                  <1>         pop     edi
    29 00000F77 59                  <1>         pop     ecx
    30 00000F78 5B                  <1>         pop     ebx
    31 00000F79 58                  <1>         pop     eax
    32                              <1> 
    33 00000F7A C3                  <1>         ret
    34                              <1> 
    35                              <1> 
    36                              <1> int_stop:
    37                              <1> 
    38 00000F7B FB                  <1>         sti
    39                              <1> 
    40 00000F7C 50680F0600006A0F6A- <1>         cdecl   draw_str, 25, 15, 0x060F, eax
    40 00000F85 19E8C2FBFFFF6683C4- <1>
    40 00000F8E 10                  <1>
    41                              <1> 
    42 00000F8F 8B0424              <1>         mov     eax, [esp + 0]
    43 00000F92 6A046A106A0868-     <1>         cdecl   itoa, eax, .p1, 8, 16, 0b0100
    43 00000F99 [57100000]50E83BFE- <1>
    43 00000FA1 FFFF6683C414        <1>
    44                              <1> 
    45 00000FA7 8B442404            <1>         mov     eax, [esp + 4]
    46 00000FAB 6A046A106A0868-     <1>         cdecl   itoa, eax, .p2, 8, 16, 0b0100
    46 00000FB2 [68100000]50E822FE- <1>
    46 00000FBA FFFF6683C414        <1>
    47                              <1> 
    48 00000FC0 8B442408            <1>         mov     eax, [esp + 8]
    49 00000FC4 6A046A106A0868-     <1>         cdecl   itoa, eax, .p3, 8, 16, 0b0100
    49 00000FCB [79100000]50E809FE- <1>
    49 00000FD3 FFFF6683C414        <1>
    50                              <1> 
    51 00000FD9 8B44240C            <1>         mov     eax, [esp + 12]
    52 00000FDD 6A046A106A0868-     <1>         cdecl   itoa, eax, .p4, 8, 16, 0b0100
    52 00000FE4 [8A100000]50E8F0FD- <1>
    52 00000FEC FFFF6683C414        <1>
    53                              <1> 
    54 00000FF2 68[50100000]68040F- <1>         cdecl   draw_str, 25, 16, 0x0F04, .s1
    54 00000FFA 00006A106A19E848FB- <1>
    54 00001003 FFFF6683C410        <1>
    55 00001009 68[61100000]68040F- <1>         cdecl   draw_str, 25, 17, 0x0F04, .s2
    55 00001011 00006A116A19E831FB- <1>
    55 0000101A FFFF6683C410        <1>
    56 00001020 68[72100000]68040F- <1>         cdecl   draw_str, 25, 18, 0x0F04, .s3
    56 00001028 00006A126A19E81AFB- <1>
    56 00001031 FFFF6683C410        <1>
    57 00001037 68[83100000]68040F- <1>         cdecl   draw_str, 25, 19, 0x0F04, .s4
    57 0000103F 00006A136A19E803FB- <1>
    57 00001048 FFFF6683C410        <1>
    58                              <1> 
    59 0000104E EBFE                <1>         jmp     $
    60                              <1> 
    61 00001050 4553502B20303A      <1> .s1		db	"ESP+ 0:"
    62 00001057 5F5F5F5F5F5F5F5F20- <1> .p1		db	"________ ", 0
    62 00001060 00                  <1>
    63 00001061 2020202B20343A      <1> .s2		db	"   + 4:"
    64 00001068 5F5F5F5F5F5F5F5F20- <1> .p2		db	"________ ", 0
    64 00001071 00                  <1>
    65 00001072 2020202B20383A      <1> .s3		db	"   + 8:"
    66 00001079 5F5F5F5F5F5F5F5F20- <1> .p3		db	"________ ", 0
    66 00001082 00                  <1>
    67 00001083 2020202B31323A      <1> .s4		db	"   +12:"
    68 0000108A 5F5F5F5F5F5F5F5F20- <1> .p4		db	"________ ", 0
    68 00001093 00                  <1>
    69                              <1> 
    70                              <1> 
    71                              <1> int_default:
    72                              <1> 
    73 00001094 9C                  <1>         pushf
    74 00001095 0E                  <1>         push    cs
    75 00001096 68[7B0F0000]        <1>         push    int_stop
    76                              <1> 
    77 0000109B B8[A1100000]        <1>         mov     eax, .s0
    78 000010A0 CF                  <1>         iret
    79                              <1> 
    80 000010A1 203C2020202053544F- <1> .s0     db  " <    STOP    > ", 0
    80 000010AA 50202020203E2000    <1>
    81                              <1> 
    82                              <1> 
    83                              <1> int_zero_div:
    84                              <1> 
    85 000010B2 9C                  <1>         pushf
    86 000010B3 0E                  <1>         push    cs
    87 000010B4 68[7B0F0000]        <1>         push    int_stop
    88                              <1> 
    89 000010B9 B8[BF100000]        <1>         mov     eax, .s0
    90 000010BE CF                  <1>         iret
    91                              <1> 
    92 000010BF 203C20205A45524F20- <1> .s0     db  " <  ZERO DIV  > ", 0
    92 000010C8 44495620203E2000    <1>
   109                                  %include    "../modules/protect/pic.s"
     1                              <1> init_pic:
     2                              <1> 
     3 000010D0 50                  <1>         push    eax
     4                              <1> 
     5                              <1>         outp    0x20, 0x11
     5 000010D1 B011                <2>  mov al, %2
     5 000010D3 E620                <2>  out %1, al
     6                              <1>         outp    0x21, 0x20
     6 000010D5 B020                <2>  mov al, %2
     6 000010D7 E621                <2>  out %1, al
     7                              <1>         outp    0x21, 0x04
     7 000010D9 B004                <2>  mov al, %2
     7 000010DB E621                <2>  out %1, al
     8                              <1>         outp    0x21, 0x05
     8 000010DD B005                <2>  mov al, %2
     8 000010DF E621                <2>  out %1, al
     9                              <1>         outp    0x21, 0xFF
     9 000010E1 B0FF                <2>  mov al, %2
     9 000010E3 E621                <2>  out %1, al
    10                              <1> 
    11                              <1>         outp    0xA0, 0x11
    11 000010E5 B011                <2>  mov al, %2
    11 000010E7 E6A0                <2>  out %1, al
    12                              <1>         outp    0xA1, 0x28
    12 000010E9 B028                <2>  mov al, %2
    12 000010EB E6A1                <2>  out %1, al
    13                              <1>         outp    0xA1, 0x02
    13 000010ED B002                <2>  mov al, %2
    13 000010EF E6A1                <2>  out %1, al
    14                              <1>         outp    0xA1, 0x01
    14 000010F1 B001                <2>  mov al, %2
    14 000010F3 E6A1                <2>  out %1, al
    15                              <1>         outp    0xA1, 0xFF
    15 000010F5 B0FF                <2>  mov al, %2
    15 000010F7 E6A1                <2>  out %1, al
    16                              <1> 
    17 000010F9 58                  <1>         pop     eax
    18                              <1> 
    19 000010FA C3                  <1>         ret
   110                                  %include    "../modules/protect/int_rtc.s"
     1                              <1> rtc_int_en:
     2                              <1> 
     3 000010FB 55                  <1>         push    ebp
     4 000010FC 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 000010FE 50                  <1>         push    eax
     7                              <1> 
     8                              <1>         outp    0x70, 0x0B
     8 000010FF B00B                <2>  mov al, %2
     8 00001101 E670                <2>  out %1, al
     9                              <1> 
    10 00001103 E471                <1>         in      al, 0x71
    11 00001105 0A4508              <1>         or      al, [ebp + 8]
    12                              <1> 
    13 00001108 E671                <1>         out     0x71, al
    14                              <1> 
    15 0000110A 58                  <1>         pop     eax
    16                              <1> 
    17 0000110B 89EC                <1>         mov     esp, ebp
    18 0000110D 5D                  <1>         pop     ebp
    19                              <1> 
    20 0000110E C3                  <1>         ret
    21                              <1> 
    22                              <1> 
    23                              <1> int_rtc:
    24                              <1> 
    25 0000110F 60                  <1>         pusha
    26 00001110 1E                  <1>         push    ds
    27 00001111 06                  <1>         push    es
    28                              <1> 
    29 00001112 66B81000            <1>         mov     ax, 0x0010
    30 00001116 8ED8                <1>         mov     ds, ax
    31 00001118 8EC0                <1>         mov     es, ax
    32                              <1> 
    33 0000111A 68[3C020000]E844FD- <1>         cdecl   rtc_get_time, RTC_TIME
    33 00001122 FFFF6683C404        <1>
    34                              <1> 
    35                              <1>         outp    0x70, 0x0C
    35 00001128 B00C                <2>  mov al, %2
    35 0000112A E670                <2>  out %1, al
    36 0000112C E471                <1>         in      al, 0x71
    37                              <1> 
    38                              <1>         outp    0xA0, 0x20
    38 0000112E B020                <2>  mov al, %2
    38 00001130 E6A0                <2>  out %1, al
    39                              <1>         outp    0x20, 0x20
    39 00001132 B020                <2>  mov al, %2
    39 00001134 E620                <2>  out %1, al
    40                              <1> 
    41 00001136 07                  <1>         pop     es
    42 00001137 1F                  <1>         pop     ds
    43 00001138 61                  <1>         popa
    44                              <1> 
    45 00001139 CF                  <1>         iret
   111                                  %include    "../modules/protect/int_keyboard.s"
     1                              <1> int_keyboard:
     2                              <1> 
     3 0000113A 60                  <1>         pusha
     4 0000113B 1E                  <1>         push    ds
     5 0000113C 06                  <1>         push    es
     6                              <1> 
     7 0000113D 66B81000            <1>         mov     ax, 0x0010
     8 00001141 8ED8                <1>         mov     ds, ax
     9 00001143 8EC0                <1>         mov     es, ax
    10                              <1> 
    11 00001145 E460                <1>         in      al, 0x60
    12                              <1> 
    13 00001147 5068[60110000]E856- <1>         cdecl   ring_wr, _KEY_BUFF, eax
    13 0000114F 0000006683C408      <1>
    14                              <1> 
    15                              <1>         outp    0x20, 0x20
    15 00001156 B020                <2>  mov al, %2
    15 00001158 E620                <2>  out %1, al
    16                              <1> 
    17 0000115A 07                  <1>         pop     es
    18 0000115B 1F                  <1>         pop     ds
    19 0000115C 61                  <1>         popa
    20                              <1> 
    21 0000115D CF                  <1>         iret
    22                              <1> 
    23 0000115E 00<rept>            <1> ALIGN 4, db 0
    24 00001160 00<rept>            <1> _KEY_BUFF:  times ring_buff_size db 0
   112                                  %include    "../modules/protect/ring_buff.s"
     1                              <1> ring_rd:
     2                              <1> 
     3 00001178 55                  <1>         push    ebp
     4 00001179 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 0000117B 53                  <1>         push    ebx
     7 0000117C 56                  <1>         push    esi
     8 0000117D 57                  <1>         push    edi
     9                              <1> 
    10 0000117E 8B7508              <1>         mov     esi, [ebp + 8]
    11 00001181 8B7D0C              <1>         mov     edi, [ebp + 12]
    12                              <1> 
    13 00001184 B800000000          <1>         mov     eax, 0
    14 00001189 8B1E                <1>         mov     ebx, [esi + ring_buff.rp]
    15 0000118B 3B5E04              <1>         cmp     ebx, [esi + ring_buff.wp]
    16 0000118E 7411                <1>         je      .10E
    17                              <1> 
    18 00001190 8A441E08            <1>         mov     al, [esi + ring_buff.item + ebx]
    19                              <1> 
    20 00001194 8807                <1>         mov     [edi], al
    21                              <1> 
    22 00001196 43                  <1>         inc     ebx
    23 00001197 83E30F              <1>         and     ebx, RING_INDEX_MASK
    24 0000119A 891E                <1>         mov     [esi + ring_buff.rp], ebx
    25                              <1> 
    26 0000119C B801000000          <1>         mov     eax, 1
    27                              <1> .10E:
    28                              <1> 
    29 000011A1 5F                  <1>         pop     edi
    30 000011A2 5E                  <1>         pop     esi
    31 000011A3 5B                  <1>         pop     ebx
    32                              <1> 
    33 000011A4 89EC                <1>         mov     esp, ebp
    34 000011A6 5D                  <1>         pop     ebp
    35                              <1> 
    36 000011A7 C3                  <1>         ret
    37                              <1> 
    38                              <1> 
    39                              <1> ring_wr:
    40                              <1> 
    41 000011A8 55                  <1>         push    ebp
    42 000011A9 89E5                <1>         mov     ebp, esp
    43                              <1> 
    44 000011AB 53                  <1>         push    ebx
    45 000011AC 51                  <1>         push    ecx
    46 000011AD 56                  <1>         push    esi
    47                              <1> 
    48 000011AE 8B7508              <1>         mov     esi, [ebp + 8]
    49                              <1> 
    50 000011B1 B800000000          <1>         mov     eax, 0
    51 000011B6 8B5E04              <1>         mov     ebx, [esi + ring_buff.wp]
    52 000011B9 89D9                <1>         mov     ecx, ebx
    53 000011BB 41                  <1>         inc     ecx
    54 000011BC 83E10F              <1>         and     ecx, RING_INDEX_MASK
    55                              <1> 
    56 000011BF 3B0E                <1>         cmp     ecx, [esi + ring_buff.rp]
    57 000011C1 740F                <1>         je      .10E
    58                              <1> 
    59 000011C3 8A450C              <1>         mov     al, [ebp + 12]
    60                              <1> 
    61 000011C6 88441E08            <1>         mov     [esi + ring_buff.item + ebx], al
    62 000011CA 894E04              <1>         mov     [esi + ring_buff.wp], ecx
    63 000011CD B801000000          <1>         mov     eax, 1
    64                              <1> .10E:
    65                              <1> 
    66 000011D2 5E                  <1>         pop     esi
    67 000011D3 59                  <1>         pop     ecx
    68 000011D4 5B                  <1>         pop     ebx
    69                              <1> 
    70 000011D5 89EC                <1>         mov     esp, ebp
    71 000011D7 5D                  <1>         pop     ebp
    72                              <1> 
    73 000011D8 C3                  <1>         ret
    74                              <1> 
    75                              <1> 
    76                              <1> draw_key:
    77                              <1> 
    78 000011D9 55                  <1>         push    ebp
    79 000011DA 89E5                <1>         mov     ebp, esp
    80                              <1> 
    81 000011DC 60                  <1>         pusha
    82                              <1> 
    83 000011DD 8B5508              <1>         mov     edx, [ebp + 8]
    84 000011E0 8B7D0C              <1>         mov     edi, [ebp + 12]
    85 000011E3 8B7510              <1>         mov     esi, [ebp + 16]
    86                              <1> 
    87 000011E6 8B1E                <1>         mov     ebx, [esi + ring_buff.rp]
    88 000011E8 8D7608              <1>         lea     esi, [esi + ring_buff.item]
    89 000011EB B910000000          <1>         mov     ecx, RING_ITEM_SIZE
    90                              <1> 
    91                              <1> .10L:
    92                              <1> 
    93 000011F0 4B                  <1>         dec     ebx
    94 000011F1 83E30F              <1>         and     ebx, RING_INDEX_MASK
    95 000011F4 8A041E              <1>         mov     al, [esi + ebx]
    96                              <1> 
    97 000011F7 6A046A106A0268-     <1>         cdecl   itoa, eax, .tmp, 2, 16, 0b0100
    97 000011FE [28120000]50E8D6FB- <1>
    97 00001206 FFFF6683C414        <1>
    98 0000120C 68[28120000]6A0257- <1>         cdecl   draw_str, edx, edi, 0x02, .tmp
    98 00001214 52E833F9FFFF6683C4- <1>
    98 0000121D 10                  <1>
    99                              <1> 
   100 0000121E 83C203              <1>         add     edx, 3
   101                              <1> 
   102 00001221 E2CD                <1>         loop    .10L
   103                              <1> .10E:
   104                              <1> 
   105 00001223 61                  <1>         popa
   106                              <1> 
   107 00001224 89EC                <1>         mov     esp, ebp
   108 00001226 5D                  <1>         pop     ebp
   109                              <1> 
   110 00001227 C3                  <1>         ret
   111                              <1> 
   112 00001228 2D2D2000            <1> .tmp    db "-- ", 0
   113                                  %include    "../modules/protect/timer.s"
     1                              <1> int_en_timer0:
     2                              <1> 
     3 0000122C 50                  <1>         push    eax
     4                              <1> 
     5                              <1>         outp    0x43, 0b_00_11_010_0
     5 0000122D B034                <2>  mov al, %2
     5 0000122F E643                <2>  out %1, al
     6                              <1>         outp    0x40, 0x9C
     6 00001231 B09C                <2>  mov al, %2
     6 00001233 E640                <2>  out %1, al
     7                              <1>         outp    0x40, 0x2E
     7 00001235 B02E                <2>  mov al, %2
     7 00001237 E640                <2>  out %1, al
     8                              <1> 
     9 00001239 58                  <1>         pop     eax
    10                              <1> 
    11 0000123A C3                  <1>         ret
   114                                  %include    "../modules/protect/draw_rotation_bar.s"
     1                              <1> draw_rotation_bar:
     2                              <1> 
     3 0000123B 50                  <1>         push    eax
     4                              <1> 
     5 0000123C A1[8C060000]        <1>         mov     eax, [TIMER_COUNT]
     6 00001241 C1E804              <1>         shr     eax, 4
     7 00001244 3B05[6C120000]      <1>         cmp     eax, [.index]
     8 0000124A 741E                <1>         je      .10E
     9                              <1> 
    10 0000124C A3[6C120000]        <1>         mov     [.index], eax
    11 00001251 83E003              <1>         and     eax, 0x03
    12                              <1> 
    13 00001254 8A80[70120000]      <1>         mov     al, [.table + eax]
    14 0000125A 506A0F6A1D6A00E8C1- <1>         cdecl   draw_char, 0, 29, 0x000F, eax
    14 00001263 F7FFFF6683C410      <1>
    15                              <1> 
    16                              <1> .10E:
    17                              <1> 
    18 0000126A 58                  <1>         pop     eax
    19                              <1> 
    20 0000126B C3                  <1>         ret
    21                              <1> 
    22                              <1> ALIGN 4, db 0
    23 0000126C 00000000            <1> .index      dd 0
    24 00001270 7C2F2D5C            <1> .table      db "|/-\"
   115                                  %include    "../modules/protect/call_gate.s"
     1                              <1> call_gate:
     2                              <1> 
     3 00001274 55                  <1>         push    ebp
     4 00001275 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00001277 60                  <1>         pusha
     7 00001278 1E                  <1>         push    ds
     8 00001279 06                  <1>         push    es
     9                              <1> 
    10 0000127A 66B81000            <1>         mov     ax, 0x0010
    11 0000127E 8ED8                <1>         mov     ds, ax
    12 00001280 8EC0                <1>         mov     es, ax
    13                              <1> 
    14 00001282 8B450C              <1>         mov     eax, dword [ebp + 12]
    15 00001285 8B5D10              <1>         mov     ebx, dword [ebp + 16]
    16 00001288 8B4D14              <1>         mov     ecx, dword [ebp + 20]
    17 0000128B 8B5518              <1>         mov     edx, dword [ebp + 24]
    18 0000128E 52515350E8B6F8FFFF- <1>         cdecl   draw_str, eax, ebx, ecx, edx
    18 00001297 6683C410            <1>
    19                              <1> 
    20 0000129B 07                  <1>         pop     es
    21 0000129C 1F                  <1>         pop     ds
    22 0000129D 61                  <1>         popa
    23                              <1> 
    24 0000129E 89EC                <1>         mov     esp, ebp
    25 000012A0 5D                  <1>         pop     ebp
    26                              <1> 
    27 000012A1 CA1000              <1>         retf    4 * 4
   116                                  %include    "../modules/protect/trap_gate.s"
     1                              <1> trap_gate_81:
     2                              <1> 
     3 000012A4 50535251E87AF7FFFF- <1>         cdecl   draw_char, ecx, edx, ebx, eax
     3 000012AD 6683C410            <1>
     4                              <1> 
     5 000012B1 CF                  <1>         iret
     6                              <1> 
     7                              <1> 
     8                              <1> trap_gate_82:
     9                              <1> 
    10 000012B2 535251E84CF9FFFF66- <1>         cdecl   draw_pixel, ecx, edx, ebx
    10 000012BB 83C40C              <1>
    11                              <1> 
    12 000012BE CF                  <1>         iret
   117                                  %include    "../modules/protect/test_and_set.s"
     1                              <1> test_and_set:
     2                              <1> 
     3 000012BF 55                  <1>         push    ebp
     4 000012C0 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 000012C2 50                  <1>         push    eax
     7 000012C3 53                  <1>         push    ebx
     8                              <1> 
     9 000012C4 B800000000          <1>         mov     eax, 0
    10 000012C9 8B5D08              <1>         mov     ebx, [ebp + 8]
    11                              <1> .10L:
    12                              <1> 
    13 000012CC F00FAB03            <1>         lock bts [ebx], eax
    14 000012D0 7307                <1>         jnc     .10E
    15                              <1> .12L:
    16                              <1> 
    17 000012D2 0FA303              <1>         bt      [ebx], eax
    18 000012D5 72FB                <1>         jc      .12L
    19                              <1> 
    20 000012D7 EBF3                <1>         jmp     .10L
    21                              <1> .10E:
    22                              <1> 
    23 000012D9 5B                  <1>         pop     ebx
    24 000012DA 58                  <1>         pop     eax
    25                              <1> 
    26 000012DB 89EC                <1>         mov     esp, ebp
    27 000012DD 5D                  <1>         pop     ebp
    28                              <1> 
    29 000012DE C3                  <1>         ret
   118                                  %include    "../modules/protect/int_nm.s"
     1                              <1> int_nm:
     2                              <1> 
     3 000012DF 60                  <1>         pusha
     4 000012E0 1E                  <1>         push    ds
     5 000012E1 06                  <1>         push    es
     6                              <1> 
     7 000012E2 66B81000            <1>         mov     ax, DS_KERNEL
     8 000012E6 8ED8                <1>         mov     ds, ax
     9 000012E8 8EC0                <1>         mov     es, ax
    10                              <1> 
    11 000012EA 0F06                <1>         clts
    12                              <1> 
    13 000012EC 8B3D[38130000]      <1>         mov     edi, [.last_tss]
    14 000012F2 0F00CE              <1>         str     esi
    15 000012F5 83E6F8              <1>         and     esi, ~0x0007
    16                              <1> 
    17 000012F8 83FF00              <1>         cmp     edi, 0
    18 000012FB 7420                <1>         je      .10F
    19                              <1> 
    20 000012FD 39FE                <1>         cmp     esi, edi
    21 000012FF 741A                <1>         je      .12E
    22                              <1> 
    23 00001301 FA                  <1>         cli
    24                              <1> 
    25 00001302 89FB                <1>         mov     ebx, edi
    26 00001304 E833000000          <1>         call    get_tss_base
    27 00001309 E841000000          <1>         call    save_fpu_context
    28                              <1> 
    29 0000130E 89F3                <1>         mov     ebx, esi
    30 00001310 E827000000          <1>         call    get_tss_base
    31 00001315 E843000000          <1>         call    load_fpu_context
    32                              <1> 
    33 0000131A FB                  <1>         sti
    34                              <1> .12E:
    35 0000131B EB0E                <1>         jmp     .10E
    36                              <1> .10F:
    37                              <1> 
    38 0000131D FA                  <1>         cli
    39                              <1>         
    40 0000131E 89F3                <1>         mov     ebx, esi
    41 00001320 E817000000          <1>         call    get_tss_base
    42 00001325 E833000000          <1>         call    load_fpu_context
    43                              <1> 
    44 0000132A FB                  <1>         sti
    45                              <1> .10E:
    46                              <1> 
    47 0000132B 8935[38130000]      <1>         mov     [.last_tss], esi
    48                              <1> 
    49 00001331 07                  <1>         pop     es
    50 00001332 1F                  <1>         pop     ds
    51 00001333 61                  <1>         popa
    52                              <1> 
    53 00001334 CF                  <1>         iret
    54                              <1> 
    55 00001335 00<rept>            <1> ALIGN 4, db 0
    56 00001338 00000000            <1> .last_tss:  dd      0
    57                              <1> 
    58                              <1> 
    59                              <1> get_tss_base:
    60 0000133C 8B83[A2050000]      <1>         mov     eax, [GDT + ebx + 2]
    61 00001342 C1E008              <1>         shl     eax, 8
    62 00001345 8A83[A7050000]      <1>         mov     al, [GDT + ebx + 7]
    63 0000134B C1C808              <1>         ror     eax, 8
    64                              <1> 
    65 0000134E C3                  <1>         ret
    66                              <1> 
    67                              <1> 
    68                              <1> save_fpu_context:
    69 0000134F DD7068              <1>         fnsave  [eax + 104]
    70 00001352 C780D4000000010000- <1>         mov     [eax + 104 + 108], dword 1
    70 0000135B 00                  <1>
    71                              <1> 
    72 0000135C C3                  <1>         ret
    73                              <1> 
    74                              <1> 
    75                              <1> load_fpu_context:
    76 0000135D 83B8D400000000      <1>         cmp     [eax + 104 + 108], dword 0
    77 00001364 7504                <1>         jne     .10F
    78 00001366 DBE3                <1>         fninit
    79 00001368 EB03                <1>         jmp     .10E
    80                              <1> .10F:
    81                              <1> 
    82 0000136A DD6068              <1>         frstor  [eax + 104]
    83                              <1> .10E:
    84 0000136D C3                  <1>         ret
   119                                  %include    "../modules/protect/wait_tick.s"
     1                              <1> wait_tick:
     2                              <1> 
     3 0000136E 55                  <1>         push    ebp
     4 0000136F 89E5                <1>         mov     ebp, esp
     5                              <1> 
     6 00001371 50                  <1>         push    eax
     7 00001372 51                  <1>         push    ecx
     8                              <1> 
     9 00001373 8B4D08              <1>         mov     ecx, [ebp + 8]
    10 00001376 A1[8C060000]        <1>         mov     eax, [TIMER_COUNT]
    11                              <1> 
    12                              <1> .10L:
    13 0000137B 3905[8C060000]      <1>         cmp     [TIMER_COUNT], eax
    14 00001381 74F8                <1>         je      .10L
    15 00001383 40                  <1>         inc     eax
    16 00001384 E2F5                <1>         loop    .10L
    17                              <1> 
    18 00001386 59                  <1>         pop     ecx
    19 00001387 58                  <1>         pop     eax
    20                              <1> 
    21 00001388 89EC                <1>         mov     esp, ebp
    22 0000138A 5D                  <1>         pop     ebp
    23                              <1> 
    24 0000138B C3                  <1>         ret
   120                                  
   121 0000138C 00<rept>                        times KERNEL_SIZE - ($ - $$) db 0x00
